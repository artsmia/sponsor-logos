%!PS-Adobe-3.1 EPSF-3.0%%Title: Ford Free Sunday logoSmall [Con.eps%%Creator: Adobe Illustrator(R) 11%%AI8_CreatorVersion: 11.0.0%AI9_PrintingDataBegin%%For: Jill M. Blumer%%CreationDate: 5/18/04%%BoundingBox: 0 0 79 116%%HiResBoundingBox: 0 0 78.6597 115.8892%%CropBox: 0 0 78.6597 115.8892%%LanguageLevel: 2%%DocumentData: Clean7Bit%%Pages: 1%%DocumentNeededResources: font MIATRAJAN-Regular%%DocumentSuppliedResources: procset Adobe_AGM_Image (1.0 0)%%+ procset Adobe_CoolType_Utility_T42 (1.0 0)%%+ procset Adobe_CoolType_Utility_MAKEOCF (1.19 0)%%+ procset Adobe_CoolType_Core (2.23 0)%%+ procset Adobe_AGM_Core (2.0 0)%%+ procset Adobe_AGM_Utils (1.0 0)%%DocumentFonts: MIATRAJAN-Regular%%DocumentNeededFonts: MIATRAJAN-Regular%%DocumentNeededFeatures: %%DocumentSuppliedFeatures: %%DocumentProcessColors:  Black%%DocumentCustomColors: (PANTONE 2766 CVC)%%+ (PANTONE 121 CVC)%%CMYKCustomColor: 1 0.8700 0 0.3400 (PANTONE 2766 CVC)%%+ 0 0.0900 0.6900 0 (PANTONE 121 CVC)%%RGBCustomColor: %ADO_ContainsXMP: MainFirst%%EndComments%%BeginDefaults%%ViewingOrientation: 1 0 0 1%%EndDefaults%%BeginProlog%%BeginResource: procset Adobe_AGM_Utils 1.0 0%%Version: 1.0 0%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Utils 68 dict dup begin put/bdf{	bind def} bind def/nd{	null def}bdf/xdf{	exch def}bdf/ldf {	load def}bdf/ddf{	put}bdf	/xddf{	3 -1 roll put}bdf	/xpt{	exch put}bdf/ndf{ 	exch dup where{		pop pop pop	}{		xdf	}ifelse}def/cdndf{	exch dup currentdict exch known{		pop pop	}{		exch def	}ifelse}def/bdict{	mark}bdf/edict{	counttomark 2 idiv dup dict begin {def} repeat pop currentdict end}def/ps_level	/languagelevel where{		pop systemdict /languagelevel get exec	}{		1	}ifelsedef/level2 	ps_level 2 gedef/level3 	ps_level 3 gedef/ps_version	{version cvr} stopped {		-1	}ifdef/makereadonlyarray{	/packedarray where{		pop packedarray	}{		array astore readonly	}ifelse}bdf/map_reserved_ink_name{	dup type /stringtype eq{		dup /Red eq{			pop (_Red_)		}{			dup /Green eq{				pop (_Green_)			}{				dup /Blue eq{					pop (_Blue_)				}{					dup () cvn eq{						pop (Process)					}if				}ifelse			}ifelse		}ifelse	}if}bdf/AGMUTIL_GSTATE 22 dict def/get_gstate{	AGMUTIL_GSTATE begin	/AGMUTIL_GSTATE_clr_spc currentcolorspace def	/AGMUTIL_GSTATE_clr_indx 0 def	/AGMUTIL_GSTATE_clr_comps 12 array def	mark currentcolor counttomark		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def} repeat pop	/AGMUTIL_GSTATE_fnt rootfont def	/AGMUTIL_GSTATE_lw currentlinewidth def	/AGMUTIL_GSTATE_lc currentlinecap def	/AGMUTIL_GSTATE_lj currentlinejoin def	/AGMUTIL_GSTATE_ml currentmiterlimit def	currentdash /AGMUTIL_GSTATE_do xdf /AGMUTIL_GSTATE_da xdf	/AGMUTIL_GSTATE_sa currentstrokeadjust def	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def	/AGMUTIL_GSTATE_op currentoverprint def	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def	currentcolortransfer cvlit /AGMUTIL_GSTATE_gy_xfer xdf cvlit /AGMUTIL_GSTATE_b_xfer xdf		cvlit /AGMUTIL_GSTATE_g_xfer xdf cvlit /AGMUTIL_GSTATE_r_xfer xdf	/AGMUTIL_GSTATE_ht currenthalftone def	/AGMUTIL_GSTATE_flt currentflat def	end}def/set_gstate{	AGMUTIL_GSTATE begin	AGMUTIL_GSTATE_clr_spc setcolorspace	AGMUTIL_GSTATE_clr_indx {AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def} repeat setcolor	AGMUTIL_GSTATE_fnt setfont	AGMUTIL_GSTATE_lw setlinewidth	AGMUTIL_GSTATE_lc setlinecap	AGMUTIL_GSTATE_lj setlinejoin	AGMUTIL_GSTATE_ml setmiterlimit	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash	AGMUTIL_GSTATE_sa setstrokeadjust	AGMUTIL_GSTATE_clr_rnd setcolorrendering	AGMUTIL_GSTATE_op setoverprint	AGMUTIL_GSTATE_bg cvx setblackgeneration	AGMUTIL_GSTATE_ucr cvx setundercolorremoval	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer	AGMUTIL_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or		{		currenthalftone /HalftoneType get AGMUTIL_GSTATE_ht /HalftoneType get ne			{			  mark AGMUTIL_GSTATE_ht {sethalftone} stopped cleartomark			} if		}{		AGMUTIL_GSTATE_ht sethalftone		} ifelse	AGMUTIL_GSTATE_flt setflat	end}def/get_gstate_and_matrix{	AGMUTIL_GSTATE begin	/AGMUTIL_GSTATE_ctm matrix currentmatrix def	end	get_gstate}def/set_gstate_and_matrix{	set_gstate	AGMUTIL_GSTATE begin	AGMUTIL_GSTATE_ctm setmatrix	end}def/AGMUTIL_str256 256 string def/AGMUTIL_src256 256 string def/AGMUTIL_dst64 64 string def/AGMUTIL_srcLen nd/AGMUTIL_ndx nd/agm_sethalftone{ 	dup	begin		/_Data load		/Thresholds xdf	end	level3 	{ sethalftone }{		dup /HalftoneType get 3 eq {			sethalftone		} {pop} ifelse	}ifelse} def /rdcmntline{	currentfile AGMUTIL_str256 readline pop	(%) anchorsearch {pop} if} bdf/filter_cmyk{		dup type /filetype ne{		exch () /SubFileDecode filter	}	{		exch pop	}	ifelse	[	exch	{		AGMUTIL_src256 readstring pop		dup length /AGMUTIL_srcLen exch def		/AGMUTIL_ndx 0 def		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{			1 index exch get			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put			/AGMUTIL_ndx AGMUTIL_ndx 1 add def		}for		pop		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval	}	bind	/exec cvx	] cvx} bdf/filter_indexed_devn{	cvi Names length mul names_index add Lookup exch get} bdf/filter_devn{		4 dict begin	/srcStr xdf	/dstStr xdf	dup type /filetype ne{		0 () /SubFileDecode filter	}if	[	exch		[			/devicen_colorspace_dict /AGMCORE_gget cvx /begin cvx			currentdict /srcStr get /readstring cvx /pop cvx			/dup cvx /length cvx 0 /gt cvx [				Adobe_AGM_Utils /AGMUTIL_ndx 0 /ddf cvx				names_index Names length currentdict /srcStr get length 1 sub {					1 /index cvx /exch cvx /get cvx					currentdict /dstStr get /AGMUTIL_ndx /load cvx 3 -1 /roll cvx /put cvx					Adobe_AGM_Utils /AGMUTIL_ndx /AGMUTIL_ndx /load cvx 1 /add cvx /ddf cvx				} for				currentdict /dstStr get 0 /AGMUTIL_ndx /load cvx /getinterval cvx			] cvx /if cvx			/end cvx		] cvx		bind		/exec cvx	] cvx	end} bdf/AGMUTIL_imagefile nd/read_image_file{	AGMUTIL_imagefile 0 setfileposition	10 dict begin	/imageDict xdf	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def	/imbufIdx 0 def	/origDataSource imageDict /DataSource get def	/origMultipleDataSources imageDict /MultipleDataSources get def	/origDecode imageDict /Decode get def	/dstDataStr imageDict /Width get colorSpaceElemCnt mul string def	/srcDataStrs [ imageDict begin		currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse		{			Width Decode length 2 div mul cvi string		} repeat		end ] def	imageDict /MultipleDataSources known {MultipleDataSources}{false} ifelse	{		/imbufCnt imageDict /DataSource get length def		/imbufs imbufCnt array def		0 1 imbufCnt 1 sub {			/imbufIdx xdf			imbufs imbufIdx imbufLen string put			imageDict /DataSource get imbufIdx [ AGMUTIL_imagefile imbufs imbufIdx get /readstring cvx /pop cvx ] cvx put		} for		DeviceN_PS2 {			imageDict begin		 	/DataSource [ DataSource /devn_sep_datasource cvx ] cvx def			/MultipleDataSources false def			/Decode [0 1] def			end		} if	}{		/imbuf imbufLen string def		Indexed_DeviceN level3 not and DeviceN_NoneName or {			imageDict begin		 	/DataSource [AGMUTIL_imagefile Decode BitsPerComponent false 1 /filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource /exec cvx] cvx def			/Decode [0 1] def			end		}{			imageDict /DataSource {AGMUTIL_imagefile imbuf readstring pop} put		} ifelse	} ifelse	imageDict exch	load exec	imageDict /DataSource origDataSource put	imageDict /MultipleDataSources origMultipleDataSources put	imageDict /Decode origDecode put		end} bdf/write_image_file{	begin	{ (AGMUTIL_imagefile) (w+) file } stopped{		false	}{		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 		2 dict begin		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def		MultipleDataSources {DataSource 0 get}{DataSource}ifelse type /filetype eq {			/imbuf imbufLen string def		}if		1 1 Height { 			pop			MultipleDataSources {			 	0 1 DataSource length 1 sub {					DataSource type dup					/arraytype eq {						pop DataSource exch get exec					}{						/filetype eq {							DataSource exch get imbuf readstring pop						}{							DataSource exch get						} ifelse					} ifelse					AGMUTIL_imagefile exch writestring				} for			}{				DataSource type dup				/arraytype eq {					pop DataSource exec				}{					/filetype eq {						DataSource imbuf readstring pop					}{						DataSource					} ifelse				} ifelse				AGMUTIL_imagefile exch writestring			} ifelse		}for		end		true	}ifelse	end} bdf/close_image_file{	AGMUTIL_imagefile closefile (AGMUTIL_imagefile) deletefile}defstatusdict /product known userdict /AGMP_current_show known not and{	/pstr statusdict /product get def	pstr (HP LaserJet 2200) eq 		pstr (HP LaserJet 4000 Series) eq or	pstr (HP LaserJet 4050 Series ) eq or	pstr (HP LaserJet 8000 Series) eq or	pstr (HP LaserJet 8100 Series) eq or	pstr (HP LaserJet 8150 Series) eq or	pstr (HP LaserJet 5000 Series) eq or	pstr (HP LaserJet 5100 Series) eq or	pstr (HP Color LaserJet 4500) eq or	pstr (HP Color LaserJet 4600) eq or	pstr (HP LaserJet 5Si) eq or	pstr (HP LaserJet 1200 Series) eq or	pstr (HP LaserJet 1300 Series) eq or	pstr (HP LaserJet 4100 Series) eq or 	{ 		userdict /AGMP_current_show /show load put		userdict /show {		  currentcolorspace 0 get		  /Pattern eq		  {false charpath f}		  {AGMP_current_show} ifelse		} put	}if	currentdict /pstr undef} if/consumeimagedata{	begin	currentdict /MultipleDataSources known not		{/MultipleDataSources false def} if	MultipleDataSources		{		1 dict begin		/flushbuffer Width cvi string def		1 1 Height cvi			{			pop			0 1 DataSource length 1 sub				{				DataSource exch get				dup type dup 				/filetype eq					{					exch flushbuffer readstring pop pop					}if				/arraytype eq					{					exec pop					}if				}for			}for		end		}		{		/DataSource load type dup 		/filetype eq			{			1 dict begin			/flushbuffer Width Decode length 2 div mul cvi string def			1 1 Height { pop DataSource flushbuffer readstring pop pop} for			end			}if		/arraytype eq			{			1 1 Height { pop DataSource pop } for			}if		}ifelse	end}bdf/addprocs{	  2{/exec load}repeat	  3 1 roll	  [ 5 1 roll ] bind cvx}def/modify_halftone_xfer{	currenthalftone dup length dict copy begin	 currentdict 2 index known{	 	1 index load dup length dict copy begin		currentdict/TransferFunction known{			/TransferFunction load		}{			currenttransfer		}ifelse		 addprocs /TransferFunction xdf 		 currentdict end def		currentdict end sethalftone	}{ 		currentdict/TransferFunction known{			/TransferFunction load 		}{			currenttransfer		}ifelse		addprocs /TransferFunction xdf		currentdict end sethalftone				pop	}ifelse}def/clonearray{	dup xcheck exch	dup length array exch	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 	{	Adobe_AGM_Core/AGMCORE_tmp AGMCORE_tmp 1 add ddf 	dup type /dicttype eq		{			AGMCORE_tmp			exch			clonedict			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 		} if	dup type /arraytype eq		{			AGMCORE_tmp exch			clonearray			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 		} if	exch dup	AGMCORE_tmp 4 -1 roll put	}forall	exch {cvx} if}bdf/clonedict{	dup length dict	begin		{		dup type /dicttype eq			{				clonedict			} if		dup type /arraytype eq			{				clonearray			} if		def		}forall	currentdict	end}bdf/DeviceN_PS2{	/currentcolorspace AGMCORE_gget 0 get /DeviceN eq level3 not and} bdf/Indexed_DeviceN{	/indexed_colorspace_dict AGMCORE_gget dup null ne {		/CSD known	}{		pop false	} ifelse} bdf/DeviceN_NoneName{		/Names where {		pop		false Names		{			(None) eq or		} forall	}{		false	}ifelse} bdf/DeviceN_PS2_inRip_seps{	/AGMCORE_in_rip_sep where	{		pop dup type dup /arraytype eq exch /packedarraytype eq or		{			dup 0 get /DeviceN eq level3 not and AGMCORE_in_rip_sep and			{				/currentcolorspace exch AGMCORE_gput				false			}			{				true			}ifelse		}		{			true		} ifelse	}	{		true	} ifelse} bdf/base_colorspace_type{	dup type /arraytype eq {0 get} if} bdf/doc_setup{	Adobe_AGM_Utils begin}bdf/doc_trailer{	currentdict Adobe_AGM_Utils eq{		end	}if}bdfsystemdict /setpacking known{	setpacking} if%%EndResource%%BeginResource: procset Adobe_AGM_Core 2.0 0%%Version: 2.0 0%%Copyright: Copyright (C) 1997-2003 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Core 216 dict dup begin put/nd{	null def}bind def/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def/AGMCORE_str256 256 string def/AGMCORE_save nd/AGMCORE_graphicsave nd/AGMCORE_c 0 def/AGMCORE_m 0 def/AGMCORE_y 0 def/AGMCORE_k 0 def/AGMCORE_cmykbuf 4 array def/AGMCORE_screen [currentscreen] cvx def/AGMCORE_tmp 0 def/AGMCORE_&setgray nd/AGMCORE_&setcolor nd/AGMCORE_&setcolorspace nd/AGMCORE_&setcmykcolor nd/AGMCORE_cyan_plate nd/AGMCORE_magenta_plate nd/AGMCORE_yellow_plate nd/AGMCORE_black_plate nd/AGMCORE_plate_ndx nd/AGMCORE_get_ink_data nd/AGMCORE_is_cmyk_sep nd/AGMCORE_host_sep nd/AGMCORE_avoid_L2_sep_space nd/AGMCORE_distilling nd/AGMCORE_composite_job nd/AGMCORE_producing_seps nd/AGMCORE_ps_level -1 def/AGMCORE_ps_version -1 def/AGMCORE_environ_ok nd/AGMCORE_CSA_cache 0 dict def/AGMCORE_CSD_cache 0 dict def/AGMCORE_pattern_cache 0 dict def/AGMCORE_currentoverprint false def/AGMCORE_deltaX nd/AGMCORE_deltaY nd/AGMCORE_name nd/AGMCORE_sep_special nd/AGMCORE_err_strings 4 dict def/AGMCORE_cur_err nd/AGMCORE_ovp nd/AGMCORE_current_spot_alias false def/AGMCORE_inverting false def/AGMCORE_feature_dictCount nd/AGMCORE_feature_opCount nd/AGMCORE_feature_ctm nd/AGMCORE_ConvertToProcess false def/AGMCORE_Default_CTM matrix def/AGMCORE_Default_PageSize nd/AGMCORE_currentbg nd/AGMCORE_currentucr nd/AGMCORE_gradientcache 32 dict def/AGMCORE_in_pattern false def/knockout_unitsq nd/AGMCORE_CRD_cache where{	pop}{	/AGMCORE_CRD_cache 0 dict def}ifelse/AGMCORE_key_known{	where{		/Adobe_AGM_Core_Id known	}{		false	}ifelse}ndf/flushinput{	save	2 dict begin	/CompareBuffer 3 -1 roll def	/readbuffer 256 string def	mark	{	currentfile readbuffer {readline} stopped		{cleartomark mark}		{		not			{pop exit}		if		CompareBuffer eq			{exit}		if		}ifelse	}loop	cleartomark	end	restore}bdf/getspotfunction{	AGMCORE_screen exch pop exch pop	dup type /dicttype eq{		dup /HalftoneType get 1 eq{			/SpotFunction get		}{			dup /HalftoneType get 2 eq{				/GraySpotFunction get			}{ 				pop				{					abs exch abs 2 copy add 1 gt{						1 sub dup mul exch 1 sub dup mul add 1 sub					}{						dup mul exch dup mul add 1 exch sub					}ifelse				}bind			}ifelse		}ifelse	}if} def/clp_npth{	clip newpath} def/eoclp_npth{	eoclip newpath} def/npth_clp{	newpath clip} def/add_grad{	AGMCORE_gradientcache 3 1 roll put}bdf/exec_grad{	AGMCORE_gradientcache exch get exec}bdf/graphic_setup{	/AGMCORE_graphicsave save def	concat	0 setgray	0 setlinecap	0 setlinejoin	1 setlinewidth	[] 0 setdash	10 setmiterlimit	newpath	false setoverprint	false setstrokeadjust	Adobe_AGM_Core/spot_alias get exec	/Adobe_AGM_Image where {		pop		Adobe_AGM_Image/spot_alias 2 copy known{			get exec		}{			pop pop		}ifelse	} if	100 dict begin	/dictstackcount countdictstack def	/showpage {} def	mark} def/graphic_cleanup{	cleartomark	dictstackcount 1 countdictstack 1 sub {end}for	end	AGMCORE_graphicsave restore} def/compose_error_msg{	grestoreall initgraphics		/Helvetica findfont 10 scalefont setfont	/AGMCORE_deltaY 100 def	/AGMCORE_deltaX 310 def	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath	0 AGMCORE_&setgray	gsave 1 AGMCORE_&setgray fill grestore 	1 setlinewidth gsave stroke grestore	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto	/AGMCORE_deltaY 12 def	/AGMCORE_tmp 0 def	AGMCORE_err_strings exch get		{		dup 32 eq			{			pop			AGMCORE_str256 0 AGMCORE_tmp getinterval			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt				{				currentpoint AGMCORE_deltaY sub exch pop				clippath pathbbox pop pop pop 44 add exch moveto				} if			AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show			0 1 AGMCORE_str256 length 1 sub				{				AGMCORE_str256 exch 0 put				}for			/AGMCORE_tmp 0 def			}			{				AGMCORE_str256 exch AGMCORE_tmp xpt				/AGMCORE_tmp AGMCORE_tmp 1 add def			} ifelse		} forall} bdf/doc_setup{	Adobe_AGM_Core begin	/AGMCORE_ps_version xdf	/AGMCORE_ps_level xdf	errordict /AGM_handleerror known not{		errordict /AGM_handleerror errordict /handleerror get put		errordict /handleerror {			Adobe_AGM_Core begin			$error /newerror get AGMCORE_cur_err null ne and{				$error /newerror false put				AGMCORE_cur_err compose_error_msg			}if			$error /newerror true put			end			errordict /AGM_handleerror get exec			} bind put		}if	/AGMCORE_environ_ok 		ps_level AGMCORE_ps_level ge		ps_version AGMCORE_ps_version ge and 		AGMCORE_ps_level -1 eq or	def	AGMCORE_environ_ok not		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if	/AGMCORE_&setgray systemdict/setgray get def	level2{		/AGMCORE_&setcolor systemdict/setcolor get def		/AGMCORE_&setcolorspace systemdict/setcolorspace get def	}if	/AGMCORE_currentbg currentblackgeneration def	/AGMCORE_currentucr currentundercolorremoval def	/AGMCORE_distilling		/product where{			pop systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and		}{			false		}ifelse	def	level2 not{		/xput{			dup load dup length exch maxlength eq{				dup dup load dup				length dup 0 eq {pop 1} if 2 mul dict copy def			}if			load begin				def 			end		}def	}{		/xput{			load 3 1 roll put		}def	}ifelse	/AGMCORE_GSTATE AGMCORE_key_known not{		/AGMCORE_GSTATE 21 dict def		/AGMCORE_tmpmatrix matrix def		/AGMCORE_gstack 32 array def		/AGMCORE_gstackptr 0 def		/AGMCORE_gstacksaveptr 0 def		/AGMCORE_gstackframekeys 10 def		/AGMCORE_&gsave /gsave ldf		/AGMCORE_&grestore /grestore ldf		/AGMCORE_&grestoreall /grestoreall ldf		/AGMCORE_&save /save ldf		/AGMCORE_gdictcopy {			begin			{ def } forall			end		}def		/AGMCORE_gput {			AGMCORE_gstack AGMCORE_gstackptr get			3 1 roll			put		}def		/AGMCORE_gget {			AGMCORE_gstack AGMCORE_gstackptr get			exch			get		}def		/gsave {			AGMCORE_&gsave			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gstackptr 1 add			dup 32 ge {limitcheck} if			Adobe_AGM_Core exch			/AGMCORE_gstackptr xpt			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gdictcopy		}def		/grestore {			AGMCORE_&grestore			AGMCORE_gstackptr 1 sub			dup AGMCORE_gstacksaveptr lt {1 add} if			Adobe_AGM_Core exch			/AGMCORE_gstackptr xpt		}def		/grestoreall {			AGMCORE_&grestoreall			Adobe_AGM_Core			/AGMCORE_gstackptr AGMCORE_gstacksaveptr put 		}def		/save {			AGMCORE_&save			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gstackptr 1 add			dup 32 ge {limitcheck} if			Adobe_AGM_Core begin				/AGMCORE_gstackptr exch def				/AGMCORE_gstacksaveptr AGMCORE_gstackptr def			end			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gdictcopy		}def		0 1 AGMCORE_gstack length 1 sub {				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put		} for	}if	level3 /AGMCORE_&sysshfill AGMCORE_key_known not and	{		/AGMCORE_&sysshfill systemdict/shfill get def		/AGMCORE_&usrshfill /shfill load def		/AGMCORE_&sysmakepattern systemdict/makepattern get def		/AGMCORE_&usrmakepattern /makepattern load def	}if	/currentcmykcolor [0 0 0 0] AGMCORE_gput	/currentstrokeadjust false AGMCORE_gput	/currentcolorspace [/DeviceGray] AGMCORE_gput	/sep_tint 0 AGMCORE_gput	/devicen_tints [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] AGMCORE_gput	/sep_colorspace_dict null AGMCORE_gput	/devicen_colorspace_dict null AGMCORE_gput	/indexed_colorspace_dict null AGMCORE_gput	/currentcolor_intent () AGMCORE_gput	/customcolor_tint 1 AGMCORE_gput	<<	/MaxPatternItem currentsystemparams /MaxPatternCache get	>>	setuserparams	end}def/page_setup{	/setcmykcolor where{		pop		Adobe_AGM_Core/AGMCORE_&setcmykcolor /setcmykcolor load put	}if	Adobe_AGM_Core begin	/setcmykcolor	{		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput		1 sub 4 1 roll		3 {			3 index add neg dup 0 lt {				pop 0			} if			3 1 roll		} repeat		setrgbcolor pop	}ndf	/currentcmykcolor	{		/currentcmykcolor AGMCORE_gget aload pop	}ndf	/setoverprint	{		pop	}ndf	/currentoverprint	{		false	}ndf	/AGMCORE_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def	/AGMCORE_plate_ndx 		AGMCORE_cyan_plate{ 			0		}{			AGMCORE_magenta_plate{				1			}{				AGMCORE_yellow_plate{					2				}{					AGMCORE_black_plate{						3					}{						4					}ifelse				}ifelse			}ifelse		}ifelse		def	/AGMCORE_have_reported_unsupported_color_space false def	/AGMCORE_report_unsupported_color_space	{		AGMCORE_have_reported_unsupported_color_space false eq		{			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.) ==			Adobe_AGM_Core /AGMCORE_have_reported_unsupported_color_space true ddf		} if	}def	/AGMCORE_composite_job		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def	/AGMCORE_in_rip_sep		/AGMCORE_in_rip_sep where{			pop AGMCORE_in_rip_sep		}{			AGMCORE_distilling 			{				false			}{				userdict/Adobe_AGM_OnHost_Seps known{					false				}{					level2{						currentpagedevice/Separations 2 copy known{							get						}{							pop pop false						}ifelse					}{						false					}ifelse				}ifelse			}ifelse		}ifelse	def	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def	/AGM_preserve_spots 		/AGM_preserve_spots where{			pop AGM_preserve_spots		}{			AGMCORE_distilling AGMCORE_producing_seps or		}ifelse	def	/AGM_is_distiller_preserving_spotimages	{		currentdistillerparams/PreserveOverprintSettings known		{			currentdistillerparams/PreserveOverprintSettings get				{					currentdistillerparams/ColorConversionStrategy known					{						currentdistillerparams/ColorConversionStrategy get						/LeaveColorUnchanged eq					}{						true					}ifelse				}{					false				}ifelse		}{			false		}ifelse	}def	/convert_spot_to_process where {pop}{		/convert_spot_to_process		{			dup map_alias {				/Name get exch pop			} if			dup dup (None) eq exch (All) eq or				{				pop false				}{				AGMCORE_host_sep				{ 					gsave					1 0 0 0 setcmykcolor currentgray 1 exch sub					0 1 0 0 setcmykcolor currentgray 1 exch sub					0 0 1 0 setcmykcolor currentgray 1 exch sub					0 0 0 1 setcmykcolor currentgray 1 exch sub					add add add 0 eq					{						pop false					}{						false setoverprint						1 1 1 1 5 -1 roll findcmykcustomcolor 1 setcustomcolor						currentgray 0 eq					}ifelse					grestore				}{					AGMCORE_distilling					{						pop AGM_is_distiller_preserving_spotimages not					}{						Adobe_AGM_Core/AGMCORE_name xddf						false						Adobe_AGM_Core/AGMCORE_in_pattern known {Adobe_AGM_Core/AGMCORE_in_pattern get}{false} ifelse						not currentpagedevice/OverrideSeparations known and							{							currentpagedevice/OverrideSeparations get								{								/HqnSpots /ProcSet resourcestatus									{									pop pop pop true									}if								}if							}if												{							AGMCORE_name /HqnSpots /ProcSet findresource /TestSpot get exec not							}{							gsave							[/Separation AGMCORE_name /DeviceGray {}]setcolorspace							false							currentpagedevice/SeparationColorNames 2 copy known							{								get								{ AGMCORE_name eq or}forall							not							}{								pop pop pop true							}ifelse							grestore						}ifelse					}ifelse				}ifelse			}ifelse		}def	}ifelse	/convert_to_process where {pop}{		/convert_to_process		{			dup length 0 eq				{				pop false				}{				AGMCORE_host_sep				{ 				dup true exch					{					dup (Cyan) eq exch					dup (Magenta) eq 3 -1 roll or exch					dup (Yellow) eq 3 -1 roll or exch					dup (Black) eq 3 -1 roll or						{pop}						{convert_spot_to_process and}ifelse					}				forall					{					true exch						{						dup (Cyan) eq exch						dup (Magenta) eq 3 -1 roll or exch						dup (Yellow) eq 3 -1 roll or exch						(Black) eq or and						}forall						not					}{pop false}ifelse				}{				false exch					{					dup (Cyan) eq exch					dup (Magenta) eq 3 -1 roll or exch					dup (Yellow) eq 3 -1 roll or exch					dup (Black) eq 3 -1 roll or					{pop}					{convert_spot_to_process or}ifelse					}				forall				}ifelse			}ifelse		}def	}ifelse		/AGMCORE_avoid_L2_sep_space  		version cvr 2012 lt 		level2 and 		AGMCORE_producing_seps not and	def	/AGMCORE_is_cmyk_sep		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or	def	/AGM_avoid_0_cmyk where{		pop AGM_avoid_0_cmyk	}{		AGM_preserve_spots 		userdict/Adobe_AGM_OnHost_Seps known 		userdict/Adobe_AGM_InRip_Seps known or		not and	}ifelse	{		/setcmykcolor[			{				4 copy add add add 0 eq currentoverprint and{					pop 0.0005				}if			}/exec cvx			/AGMCORE_&setcmykcolor load dup type/operatortype ne{				/exec cvx			}if		]cvx def	}if	AGMCORE_host_sep{		/setcolortransfer		{ 			AGMCORE_cyan_plate{				pop pop pop			}{			  	AGMCORE_magenta_plate{			  		4 3 roll pop pop pop			  	}{			  		AGMCORE_yellow_plate{			  			4 2 roll pop pop pop			  		}{			  			4 1 roll pop pop pop			  		}ifelse			  	}ifelse			}ifelse			settransfer  		}			def		/AGMCORE_get_ink_data			AGMCORE_cyan_plate{				{pop pop pop}			}{			  	AGMCORE_magenta_plate{			  		{4 3 roll pop pop pop}			  	}{			  		AGMCORE_yellow_plate{			  			{4 2 roll pop pop pop}			  		}{			  			{4 1 roll pop pop pop}			  		}ifelse			  	}ifelse			}ifelse		def		/AGMCORE_RemoveProcessColorNames			{			1 dict begin			/filtername				{				dup /Cyan eq 1 index (Cyan) eq or					{pop (_cyan_)}if				dup /Magenta eq 1 index (Magenta) eq or					{pop (_magenta_)}if				dup /Yellow eq 1 index (Yellow) eq or					{pop (_yellow_)}if				dup /Black eq 1 index (Black) eq or					{pop (_black_)}if				}def			dup type /arraytype eq				{[exch {filtername}forall]}				{filtername}ifelse			end			}def		/AGMCORE_IsSeparationAProcessColor			{			dup (Cyan) eq exch dup (Magenta) eq exch dup (Yellow) eq exch (Black) eq or or or			}def		level3 {			/AGMCORE_IsCurrentColor				{				gsave				false setoverprint				1 1 1 1 5 -1 roll findcmykcustomcolor 1 setcustomcolor				currentgray 0 eq 				grestore				}def			/AGMCORE_filter_functiondatasource				{					5 dict begin				/data_in xdf				data_in type /stringtype eq					{					/ncomp xdf					/comp xdf					/string_out data_in length ncomp idiv string def					0 ncomp data_in length 1 sub						{						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put						}for					string_out					}{					string /string_in xdf					/string_out 1 string def					/component xdf					[					data_in string_in /readstring cvx						[component /get cvx 255 /exch cvx /sub cvx string_out /exch cvx 0 /exch cvx /put cvx string_out]cvx						[/pop cvx ()]cvx /ifelse cvx					]cvx /ReusableStreamDecode filter				}ifelse				end				}def			/AGMCORE_separateShadingFunction				{				2 dict begin				/paint? xdf				/channel xdf					begin					FunctionType 0 eq						{						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def						currentdict /Decode known							{/Decode Decode channel 2 mul 2 getinterval def}if						paint? not							{/Decode [1 1]def}if						}if					FunctionType 2 eq						{						paint?							{							/C0 [C0 channel get 1 exch sub] def							/C1 [C1 channel get 1 exch sub] def							}{							/C0 [1] def							/C1 [1] def							}ifelse									}if					FunctionType 3 eq						{						/Functions [Functions {channel paint? AGMCORE_separateShadingFunction} forall] def									}if					currentdict /Range known						{/Range [0 1] def}if					currentdict					end				end				}def			/AGMCORE_separateShading				{				3 -1 roll begin				currentdict /Function known					{					currentdict /Background known						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if					Function 3 1 roll AGMCORE_separateShadingFunction /Function xdf					/ColorSpace [/DeviceGray] def					}{					ColorSpace dup type /arraytype eq {0 get}if /DeviceCMYK eq						{						/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def						}{						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put						}ifelse					ColorSpace 0 get /Separation eq						{							{								[1 /exch cvx /sub cvx]cvx							}{								[/pop cvx 1]cvx							}ifelse							ColorSpace 3 3 -1 roll put							pop						}{							{								[exch ColorSpace 1 get length 1 sub exch sub /index cvx 1 /exch cvx /sub cvx ColorSpace 1 get length 1 add 1 /roll cvx ColorSpace 1 get length{/pop cvx} repeat]cvx							}{								pop [ColorSpace 1 get length {/pop cvx} repeat cvx 1]cvx							}ifelse							ColorSpace 3 3 -1 roll bind put						}ifelse					ColorSpace 2 /DeviceGray put																							}ifelse				end				}def			/AGMCORE_separateShadingDict				{				dup /ColorSpace get				dup type /arraytype ne					{[exch]}if				dup 0 get /DeviceCMYK eq					{					exch begin 					currentdict					AGMCORE_cyan_plate						{0 true}if					AGMCORE_magenta_plate						{1 true}if					AGMCORE_yellow_plate						{2 true}if					AGMCORE_black_plate						{3 true}if					AGMCORE_plate_ndx 4 eq						{0 false}if							dup not currentoverprint and						{/AGMCORE_ignoreshade true def}if					AGMCORE_separateShading					currentdict					end exch					}if				dup 0 get /Separation eq					{					exch begin					ColorSpace 1 get dup /None ne exch /All ne and						{						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and							{							ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 								{								/ColorSpace									[									/Separation									ColorSpace 1 get									/DeviceGray										[										ColorSpace 3 get /exec cvx										4 AGMCORE_plate_ndx sub -1 /roll cvx										4 1 /roll cvx										3 [/pop cvx]cvx /repeat cvx										1 /exch cvx /sub cvx										]cvx																		]def								}{								AGMCORE_report_unsupported_color_space								AGMCORE_black_plate not									{									currentdict 0 false AGMCORE_separateShading									}if								}ifelse							}{							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor							0 exch 							dup not currentoverprint and								{/AGMCORE_ignoreshade true def}if							AGMCORE_separateShading							}ifelse							}if								currentdict					end exch					}if				dup 0 get /DeviceN eq					{					exch begin					ColorSpace 1 get convert_to_process						{						ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 							{							/ColorSpace								[								/DeviceN								ColorSpace 1 get								/DeviceGray									[									ColorSpace 3 get /exec cvx									4 AGMCORE_plate_ndx sub -1 /roll cvx									4 1 /roll cvx									3 [/pop cvx]cvx /repeat cvx									1 /exch cvx /sub cvx									]cvx																	]def							}{							AGMCORE_report_unsupported_color_space							AGMCORE_black_plate not								{								currentdict 0 false AGMCORE_separateShading								/ColorSpace [/DeviceGray] def								}if							}ifelse						}{						currentdict						false -1 ColorSpace 1 get							{							AGMCORE_IsCurrentColor								{								1 add								exch pop true exch exit								}if							1 add							}forall						exch 						dup not currentoverprint and							{/AGMCORE_ignoreshade true def}if						AGMCORE_separateShading						}ifelse					currentdict					end exch					}if				dup 0 get dup /DeviceCMYK eq exch dup /Separation eq exch /DeviceN eq or or not					{					exch begin					ColorSpace dup type /arraytype eq						{0 get}if					/DeviceGray ne						{						AGMCORE_report_unsupported_color_space						AGMCORE_black_plate not							{							ColorSpace 0 get /CIEBasedA eq								{								/ColorSpace [/Separation /_ciebaseda_ /DeviceGray {}] def								}if							ColorSpace 0 get dup /CIEBasedABC eq exch dup /CIEBasedDEF eq exch /DeviceRGB eq or or								{								/ColorSpace [/DeviceN [/_red_ /_green_ /_blue_] /DeviceRGB {}] def								}if							ColorSpace 0 get /CIEBasedDEFG eq								{								/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}]								}if							currentdict 0 false AGMCORE_separateShading							}if						}if					currentdict					end exch					}if				pop				dup /AGMCORE_ignoreshade known					{					begin					/ColorSpace [/Separation (None) /DeviceGray {}] def					currentdict end					}if				}def			/shfill				{				clonedict				AGMCORE_separateShadingDict 				dup /AGMCORE_ignoreshade known					{pop}					{AGMCORE_&sysshfill}ifelse				}def			/makepattern				{				exch				dup /PatternType get 2 eq					{					clonedict					begin					/Shading Shading AGMCORE_separateShadingDict def					currentdict end					exch AGMCORE_&sysmakepattern					}{					exch AGMCORE_&usrmakepattern					}ifelse				}def		}if	}if	AGMCORE_in_rip_sep{		/setcustomcolor		{			exch aload pop			dup 7 1 roll inRip_spot_has_ink not	{ 				4 {4 index mul 4 1 roll}				repeat				/DeviceCMYK setcolorspace				6 -2 roll pop pop			}{ 				Adobe_AGM_Core begin					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf				end				[/Separation 4 -1 roll /DeviceCMYK				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}				]				setcolorspace			}ifelse			setcolor		}ndf		/setseparationgray		{			[/Separation (All) /DeviceGray {}] setcolorspace_opt			1 exch sub setcolor		}ndf	}{		/setseparationgray		{			AGMCORE_&setgray		}ndf	}ifelse	/findcmykcustomcolor	{		5 makereadonlyarray	}ndf	/setcustomcolor	{		exch aload pop pop		4 {4 index mul 4 1 roll} repeat		setcmykcolor pop	}ndf	/has_color		/colorimage where{			AGMCORE_producing_seps{				pop true			}{				systemdict eq			}ifelse		}{			false		}ifelse	def	/map_index	{		1 index mul exch getinterval {255 div} forall	} bdf	/map_indexed_devn	{		Lookup Names length 3 -1 roll cvi map_index	} bdf	/n_color_components	{		base_colorspace_type		dup /DeviceGray eq{			pop 1		}{			/DeviceCMYK eq{				4			}{				3			}ifelse		}ifelse	}bdf	level2{		/mo /moveto ldf		/li /lineto ldf		/cv /curveto ldf		/knockout_unitsq		{			1 setgray			0 0 1 1 rectfill		}def		/level2ScreenFreq{			begin			60			HalftoneType 1 eq{				pop Frequency			}if			HalftoneType 2 eq{				pop GrayFrequency			}if			HalftoneType 5 eq{				pop Default level2ScreenFreq			}if			 end		}def		/currentScreenFreq{			currenthalftone level2ScreenFreq		}def		level2 /setcolorspace AGMCORE_key_known not and{			/AGMCORE_&&&setcolorspace /setcolorspace ldf			/AGMCORE_ReplaceMappedColor			{				dup type dup /arraytype eq exch /packedarraytype eq or				{					dup 0 get dup /Separation eq					{						pop						dup length array copy						dup dup 1 get						current_spot_alias						{							dup map_alias							{								begin								/sep_colorspace_dict currentdict AGMCORE_gput								pop pop	pop								[ 									/Separation Name 									CSA map_csa									dup /MappedCSA xdf 									/sep_colorspace_proc load								]								dup Name								end							}if						}if						map_reserved_ink_name 1 xpt					}{						/DeviceN eq 						{							dup length array copy							dup dup 1 get [ 								exch {									current_spot_alias{										dup map_alias{											/Name get exch pop										}if									}if									map_reserved_ink_name								} forall 							] 1 xpt						}if					}ifelse				}if			}def			/setcolorspace			{				dup type dup /arraytype eq exch /packedarraytype eq or				{					dup 0 get /Indexed eq					{						AGMCORE_distilling						{							/PhotoshopDuotoneList where							{								pop false							}{								true							}ifelse						}{							true						}ifelse						{							aload pop 3 -1 roll							AGMCORE_ReplaceMappedColor							3 1 roll 4 array astore						}if					}{						AGMCORE_ReplaceMappedColor					}ifelse				}if				DeviceN_PS2_inRip_seps {AGMCORE_&&&setcolorspace} if			}def		}if		}{		/adj		{			currentstrokeadjust{				transform				0.25 sub round 0.25 add exch				0.25 sub round 0.25 add exch				itransform			}if		}def		/mo{			adj moveto		}def		/li{			adj lineto		}def		/cv{			6 2 roll adj			6 2 roll adj			6 2 roll adj curveto		}def		/knockout_unitsq		{			1 setgray			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image		}def		/currentstrokeadjust{			/currentstrokeadjust AGMCORE_gget		}def		/setstrokeadjust{			/currentstrokeadjust exch AGMCORE_gput		}def		/currentScreenFreq{			currentscreen pop pop		}def		/setcolorspace		{			/currentcolorspace exch AGMCORE_gput		} def		/currentcolorspace		{			/currentcolorspace AGMCORE_gget		} def		/setcolor_devicecolor		{			base_colorspace_type			dup /DeviceGray eq{				pop setgray			}{				/DeviceCMYK eq{					setcmykcolor				}{					setrgbcolor				}ifelse			}ifelse		}def		/setcolor		{			currentcolorspace 0 get			dup /DeviceGray ne{				dup /DeviceCMYK ne{					dup /DeviceRGB ne{						dup /Separation eq{							pop							currentcolorspace 3 get exec							currentcolorspace 2 get						}{							dup /Indexed eq{								pop								currentcolorspace 3 get dup type /stringtype eq{									currentcolorspace 1 get n_color_components									3 -1 roll map_index								}{									exec								}ifelse								currentcolorspace 1 get							}{								/AGMCORE_cur_err /AGMCORE_invalid_color_space def								AGMCORE_invalid_color_space							}ifelse						}ifelse					}if				}if			}if			setcolor_devicecolor		} def	}ifelse	/sop /setoverprint ldf	/lw /setlinewidth ldf	/lc /setlinecap ldf	/lj /setlinejoin ldf	/ml /setmiterlimit ldf	/dsh /setdash ldf	/sadj /setstrokeadjust ldf	/gry /setgray ldf	/rgb /setrgbcolor ldf	/cmyk /setcmykcolor ldf	/sep /setsepcolor ldf	/devn /setdevicencolor ldf	/idx /setindexedcolor ldf	/colr /setcolor ldf	/csacrd /set_csa_crd ldf	/sepcs /setsepcolorspace ldf	/devncs /setdevicencolorspace ldf	/idxcs /setindexedcolorspace ldf	/cp /closepath ldf	/clp /clp_npth ldf	/eclp /eoclp_npth ldf	/f /fill ldf	/ef /eofill ldf	/@ /stroke ldf	/nclp /npth_clp ldf	/gset /graphic_setup ldf	/gcln /graphic_cleanup ldf	currentdict{		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {			bind		}if		def	}forall	/currentpagedevice currentpagedevice def/getrampcolor {/indx exch def0 1 NumComp 1 sub {dupSamples exch getdup type /stringtype eq { indx get } ifexchScaling exch get aload pop3 1 rollmul add} forColorSpaceFamily /Separation eq	{	sep	}	{	ColorSpaceFamily /DeviceN eq		{		devn		}		{		setcolor		}ifelse	}ifelse} bind def/sssetbackground { aload pop setcolor } bind def/RadialShade {40 dict begin/ColorSpaceFamily exch def/background exch def/ext1 exch def/ext0 exch def/BBox exch def/r2 exch def/c2y exch def/c2x exch def/r1 exch def/c1y exch def/c1x exch def/rampdict exch def/setinkoverprint where {pop /setinkoverprint{pop}def}ifgsaveBBox length 0 gt {newpathBBox 0 get BBox 1 get movetoBBox 2 get BBox 0 get sub 0 rlineto0 BBox 3 get BBox 1 get sub rlinetoBBox 2 get BBox 0 get sub neg 0 rlinetoclosepathclipnewpath} ifc1x c2x eq{c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse}{/slope c2y c1y sub c2x c1x sub div def/theta slope 1 atan defc2x c1x lt c2y c1y ge and { /theta theta 180 sub def} ifc2x c1x lt c2y c1y lt and { /theta theta 180 add def} if}ifelsegsaveclippathc1x c1y translatetheta rotate-90 rotate{ pathbbox } stopped{ 0 0 0 0 } if/yMax exch def/xMax exch def/yMin exch def/xMin exch defgrestorexMax xMin eq yMax yMin eq or{grestoreend}{/max { 2 copy gt { pop } {exch pop} ifelse } bind def/min { 2 copy lt { pop } {exch pop} ifelse } bind deframpdict begin40 dict beginbackground length 0 gt { background sssetbackground gsave clippath fill grestore } ifgsavec1x c1y translatetheta rotate-90 rotate/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def/c1y 0 def/c1x 0 def/c2x 0 defext0 {0 getrampcolorc2y r2 add r1 sub 0.0001 lt{c1x c1y r1 360 0 arcnpathbbox/aymax exch def/axmax exch def/aymin exch def/axmin exch def/bxMin xMin axmin min def/byMin yMin aymin min def/bxMax xMax axmax max def/byMax yMax aymax max defbxMin byMin movetobxMax byMin linetobxMax byMax linetobxMin byMax linetobxMin byMin linetoeofill}{c2y r1 add r2 le{c1x c1y r1 0 360 arcfill}{c2x c2y r2 0 360 arc fillr1 r2 eq{/p1x r1 neg def/p1y c1y def/p2x r1 def/p2y c1y defp1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin linetofill}{/AA r2 r1 sub c2y div def/theta AA 1 AA dup mul sub sqrt div 1 atan def/SS1 90 theta add dup sin exch cos div def/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def/p1y p1x SS1 div neg def/SS2 90 theta sub dup sin exch cos div def/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def/p2y p2x SS2 div neg defr1 r2 gt{/L1maxX p1x yMin p1y sub SS1 div add def/L2maxX p2x yMin p2y sub SS2 div add def}{/L1maxX 0 def/L2maxX 0 def}ifelsep1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add linetoL1maxX L1maxX p1x sub SS1 mul p1y add linetofill}ifelse}ifelse} ifelse} ifc1x c2x sub dup mulc1y c2y sub dup muladd 0.5 exp0 dtransformdup mul exch dup mul add 0.5 exp 72 div0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt1 index 1 index lt { exch } if pop/hires exch defhires mul/numpix exch def/numsteps NumSamples def/rampIndxInc 1 def/subsampling false defnumpix 0 ne{NumSamples numpix div 0.5 gt{/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def/rampIndxInc NumSamples 1 sub numsteps div def/subsampling true def} if} if/xInc c2x c1x sub numsteps div def/yInc c2y c1y sub numsteps div def/rInc r2 r1 sub numsteps div def/cx c1x def/cy c1y def/radius r1 defnewpathxInc 0 eq yInc 0 eq rInc 0 eq and and{0 getrampcolorcx cy radius 0 360 arcstrokeNumSamples 1 sub getrampcolorcx cy radius 72 hires div add 0 360 arc0 setlinewidthstroke}{0numsteps{dupsubsampling { round cvi } ifgetrampcolorcx cy radius 0 360 arc/cx cx xInc add def/cy cy yInc add def/radius radius rInc add defcx cy radius 360 0 arcneofillrampIndxInc add}repeatpop} ifelseext1 {c2y r2 add r1 lt{c2x c2y r2 0 360 arcfill}{c2y r1 add r2 sub 0.0001 le{c2x c2y r2 360 0 arcnpathbbox/aymax exch def/axmax exch def/aymin exch def/axmin exch def/bxMin xMin axmin min def/byMin yMin aymin min def/bxMax xMax axmax max def/byMax yMax aymax max defbxMin byMin movetobxMax byMin linetobxMax byMax linetobxMin byMax linetobxMin byMin linetoeofill}{c2x c2y r2 0 360 arc fillr1 r2 eq{/p1x r2 neg def/p1y c2y def/p2x r2 def/p2y c2y defp1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax linetofill}{/AA r2 r1 sub c2y div def/theta AA 1 AA dup mul sub sqrt div 1 atan def/SS1 90 theta add dup sin exch cos div def/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def/p1y c2y p1x SS1 div sub def/SS2 90 theta sub dup sin exch cos div def/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def/p2y c2y p2x SS2 div sub defr1 r2 lt{/L1maxX p1x yMax p1y sub SS1 div add def/L2maxX p2x yMax p2y sub SS2 div add def}{/L1maxX 0 def/L2maxX 0 def}ifelsep1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add linetoL1maxX L1maxX p1x sub SS1 mul p1y add linetofill}ifelse}ifelse} ifelse} ifgrestoregrestoreendendend} ifelse} bind def/GenStrips {40 dict begin/ColorSpaceFamily exch def/background exch def/ext1 exch def/ext0 exch def/BBox exch def/y2 exch def/x2 exch def/y1 exch def/x1 exch def/rampdict exch def/setinkoverprint where {pop /setinkoverprint{pop}def}ifgsaveBBox length 0 gt {newpathBBox 0 get BBox 1 get movetoBBox 2 get BBox 0 get sub 0 rlineto0 BBox 3 get BBox 1 get sub rlinetoBBox 2 get BBox 0 get sub neg 0 rlinetoclosepathclipnewpath} ifx1 x2 eq{y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse}{/slope y2 y1 sub x2 x1 sub div def/theta slope 1 atan defx2 x1 lt y2 y1 ge and { /theta theta 180 sub def} ifx2 x1 lt y2 y1 lt and { /theta theta 180 add def} if}ifelsegsaveclippathx1 y1 translatetheta rotate{ pathbbox } stopped{ 0 0 0 0 } if/yMax exch def/xMax exch def/yMin exch def/xMin exch defgrestorexMax xMin eq yMax yMin eq or{grestoreend}{rampdict begin20 dict beginbackground length 0 gt { background sssetbackground gsave clippath fill grestore } ifgsavex1 y1 translatetheta rotate/xStart 0 def/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def/ySpan yMax yMin sub def/numsteps NumSamples def/rampIndxInc 1 def/subsampling false defxStart 0 transformxEnd 0 transform3 -1 rollsub dup mul3 1 rollsub dup muladd 0.5 exp 72 div0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt1 index 1 index lt { exch } if popmul/numpix exch defnumpix 0 ne{NumSamples numpix div 0.5 gt{/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def/rampIndxInc NumSamples 1 sub numsteps div def/subsampling true def} if} ifext0 {0 getrampcolorxMin xStart lt{ xMin yMin xMin neg ySpan rectfill } if} if/xInc xEnd xStart sub numsteps div def/x xStart def0numsteps{dupsubsampling { round cvi } ifgetrampcolorx yMin xInc ySpan rectfill/x x xInc add deframpIndxInc add}repeatpopext1 {xMax xEnd gt{ xEnd yMin xMax xEnd sub ySpan rectfill } if} ifgrestoregrestoreendendend} ifelse} bind def}def/page_trailer{	end}def/doc_trailer{}defsystemdict /findcolorrendering known{	/findcolorrendering systemdict /findcolorrendering get def}ifsystemdict /setcolorrendering known{	/setcolorrendering systemdict /setcolorrendering get def}if/test_cmyk_color_plate{	gsave	setcmykcolor currentgray 1 ne	grestore}def/inRip_spot_has_ink{	dup Adobe_AGM_Core/AGMCORE_name xddf	convert_spot_to_process not}def/map255_to_range{	1 index sub	3 -1 roll 255 div mul add}def/set_csa_crd{	/sep_colorspace_dict null AGMCORE_gput	begin		CSA map_csa setcolorspace_opt		set_crd	end}def/setsepcolor{ 	/sep_colorspace_dict AGMCORE_gget begin		dup /sep_tint exch AGMCORE_gput		TintProc	end} def/setdevicencolor{ 	/devicen_colorspace_dict AGMCORE_gget begin		Names length copy		Names length 1 sub -1 0		{			/devicen_tints AGMCORE_gget 3 1 roll xpt		} for		TintProc	end} def/sep_colorspace_proc{	Adobe_AGM_Core/AGMCORE_tmp xddf	/sep_colorspace_dict AGMCORE_gget begin	currentdict/Components known{		Components aload pop 		TintMethod/Lab eq{			2 {AGMCORE_tmp mul NComponents 1 roll} repeat			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll		}{			TintMethod/Subtractive eq{				NComponents{					AGMCORE_tmp mul NComponents 1 roll				}repeat			}{				NComponents{					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll				} repeat			}ifelse		}ifelse	}{		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get		aload pop	}ifelse	end} def/sep_colorspace_gray_proc{	Adobe_AGM_Core/AGMCORE_tmp xddf	/sep_colorspace_dict AGMCORE_gget begin	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get	end} def/sep_proc_name{	dup 0 get 	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{		pop [/DeviceGray]		/sep_colorspace_gray_proc	}{		/sep_colorspace_proc	}ifelse} def/setsepcolorspace{ 	current_spot_alias{		dup begin			Name map_alias{				exch pop			}if		end	}if	dup /sep_colorspace_dict exch AGMCORE_gput	begin	/MappedCSA CSA map_csa def	Adobe_AGM_Core/AGMCORE_sep_special Name dup () eq exch (All) eq or ddf	AGMCORE_avoid_L2_sep_space{		[/Indexed MappedCSA sep_proc_name 255 exch 			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 		] setcolorspace_opt		/TintProc {			255 mul round cvi setcolor		}bdf	}{		MappedCSA 0 get /DeviceCMYK eq 		currentdict/Components known and 		AGMCORE_sep_special not and{			/TintProc [				Components aload pop Name findcmykcustomcolor 				/exch cvx /setcustomcolor cvx			] cvx bdf		}{ 			AGMCORE_host_sep Name (All) eq and{ 				/TintProc { 					1 exch sub setseparationgray 				}bdf 			}{				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 				AGMCORE_host_sep or				Name () eq and{					/TintProc [						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{							cvx /setcmykcolor cvx						}{							cvx /setgray cvx						}ifelse					] cvx bdf				}{					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{	 					/TintProc [							/dup cvx							MappedCSA sep_proc_name cvx exch							0 get /DeviceGray eq{								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx							}if							/Name cvx /findcmykcustomcolor cvx /exch cvx							AGMCORE_host_sep{								AGMCORE_is_cmyk_sep								/Name cvx 								/AGMCORE_IsSeparationAProcessColor load /exec cvx								/not cvx /and cvx 							}{								Name inRip_spot_has_ink not							}ifelse							[		 						/pop cvx 1							] cvx /if cvx							/setcustomcolor cvx						] cvx bdf 					}{ 						/TintProc /setcolor ldf						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt					}ifelse				}ifelse			}ifelse		}ifelse	}ifelse	set_crd	setsepcolor	end} def/additive_blend{  	3 dict begin  	/numarrays xdf  	/numcolors xdf  	0 1 numcolors 1 sub  		{  		/c1 xdf  		1  		0 1 numarrays 1 sub  			{			1 exch add /index cvx  			c1 /get cvx /mul cvx  			}for 		numarrays 1 add 1 /roll cvx   		}for 	numarrays [/pop cvx] cvx /repeat cvx  	end}def/subtractive_blend{	3 dict begin	/numarrays xdf	/numcolors xdf	0 1 numcolors 1 sub		{		/c1 xdf		1 1		0 1 numarrays 1 sub			{			1 3 3 -1 roll add /index cvx  			c1 /get cvx /sub cvx /mul cvx			}for		/sub cvx		numarrays 1 add 1 /roll cvx		}for	numarrays [/pop cvx] cvx /repeat cvx	end}def/exec_tint_transform{	/TintProc [		/TintTransform cvx /setcolor cvx	] cvx bdf	MappedCSA setcolorspace_opt} bdf/devn_makecustomcolor{	2 dict begin	/names_index xdf	/Names xdf	1 1 1 1 Names names_index get findcmykcustomcolor	/devicen_tints AGMCORE_gget names_index get setcustomcolor	Names length {pop} repeat	end} bdf/setdevicencolorspace{ 	dup /AliasedColorants known {false}{true}ifelse 	current_spot_alias and {		6 dict begin		/names_index 0 def		dup /names_len exch /Names get length def		/new_names names_len array def		/new_LookupTables names_len array def		/alias_cnt 0 def		dup /Names get		{			dup map_alias {				exch pop				dup /ColorLookup known {					dup begin					new_LookupTables names_index ColorLookup put					end				}{					dup /Components known {						dup begin						new_LookupTables names_index Components put						end					}{						dup begin						new_LookupTables names_index [null null null null] put						end					} ifelse				} ifelse				new_names names_index 3 -1 roll /Name get put				/alias_cnt alias_cnt 1 add def 			}{				/name xdf								new_names names_index name put				dup /LookupTables known {					dup begin					new_LookupTables names_index LookupTables names_index get put					end				}{					dup begin					new_LookupTables names_index [null null null null] put					end				} ifelse			} ifelse			/names_index names_index 1 add def 		} forall		alias_cnt 0 gt {			/AliasedColorants true def			0 1 names_len 1 sub {				/names_index xdf				new_LookupTables names_index get 0 get null eq {					dup /Names get names_index get /name xdf					name (Cyan) eq name (Magenta) eq name (Yellow) eq name (Black) eq					or or or not {						/AliasedColorants false def						exit					} if				} if			} for			AliasedColorants {				dup begin				/Names new_names def				/AliasedColorants true def				/LookupTables new_LookupTables def				currentdict /TTTablesIdx known not {					/TTTablesIdx -1 def				} if				currentdict /NComponents known not {					/NComponents TintMethod /Subtractive eq {4}{3}ifelse def				} if				end			} if		}if		end	} if	dup /devicen_colorspace_dict exch AGMCORE_gput	begin	/MappedCSA CSA map_csa def	currentdict /AliasedColorants known {		AliasedColorants	}{		false	} ifelse	/TintTransform load type /nulltype eq or {		/TintTransform [			0 1 Names length 1 sub				{				/TTTablesIdx TTTablesIdx 1 add def				dup LookupTables exch get dup 0 get null eq					{					1 index					Names exch get					dup (Cyan) eq						{						pop exch						LookupTables length exch sub						/index cvx						0 0 0						}						{						dup (Magenta) eq							{							pop exch							LookupTables length exch sub							/index cvx							0 /exch cvx 0 0							}							{							(Yellow) eq								{								exch								LookupTables length exch sub								/index cvx								0 0 3 -1 /roll cvx 0								}								{								exch								LookupTables length exch sub								/index cvx								0 0 0 4 -1 /roll cvx								} ifelse							} ifelse						} ifelse					5 -1 /roll cvx /astore cvx					}					{					dup length 1 sub					LookupTables length 4 -1 roll sub 1 add					/index cvx /mul cvx /round cvx /cvi cvx /get cvx					} ifelse					Names length TTTablesIdx add 1 add 1 /roll cvx				} for			Names length [/pop cvx] cvx /repeat cvx			NComponents Names length  			TintMethod /Subtractive eq  				{  				subtractive_blend  				}  				{  				additive_blend  				} ifelse		] cvx bdf	} if	AGMCORE_host_sep {		Names convert_to_process {			exec_tint_transform		}		{				currentdict /AliasedColorants known {				AliasedColorants not			}{				false			} ifelse			5 dict begin			/AvoidAliasedColorants xdf			/painted? false def			/names_index 0 def			/names_len Names length def			Names {				AvoidAliasedColorants {					/currentspotalias current_spot_alias def					false set_spot_alias				} if				AGMCORE_is_cmyk_sep {					dup (Cyan) eq AGMCORE_cyan_plate and exch					dup (Magenta) eq AGMCORE_magenta_plate and exch					dup (Yellow) eq AGMCORE_yellow_plate and exch					(Black) eq AGMCORE_black_plate and or or or {						/devicen_colorspace_dict AGMCORE_gget /TintProc [							Names names_index /devn_makecustomcolor cvx						] cvx ddf						/painted? true def					} if					painted? {exit} if				}{					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq {					/devicen_colorspace_dict AGMCORE_gget /TintProc [						Names names_index /devn_makecustomcolor cvx					] cvx ddf					/painted? true def					exit					} if				} ifelse				AvoidAliasedColorants {					currentspotalias set_spot_alias				} if				/names_index names_index 1 add def			} forall			painted? {				/devicen_colorspace_dict AGMCORE_gget /names_index names_index put			}{				/devicen_colorspace_dict AGMCORE_gget /TintProc [					names_len [/pop cvx] cvx /repeat cvx 1 /setseparationgray cvx					0 0 0 0 () /findcmykcustomcolor cvx 0 /setcustomcolor cvx				] cvx ddf			} ifelse			end		} ifelse	}	{		AGMCORE_in_rip_sep {			Names convert_to_process not		}{			level3		} ifelse		{			[/DeviceN Names MappedCSA /TintTransform load] setcolorspace_opt			/TintProc level3 not AGMCORE_in_rip_sep and {				[					Names /length cvx [/pop cvx] cvx /repeat cvx				] cvx bdf			}{				/setcolor ldf			} ifelse		}{			exec_tint_transform		} ifelse	} ifelse	set_crd	/AliasedColorants false def	end} def/setindexedcolorspace{	dup /indexed_colorspace_dict exch AGMCORE_gput	begin		currentdict /CSD known {			CSD get_csd /Names known {				CSD get_csd begin				currentdict devncs				AGMCORE_host_sep{					4 dict begin					/devnCompCnt Names length def					/NewLookup HiVal 1 add string def					0 1 HiVal {						/tableIndex xdf						Lookup dup type /stringtype eq {							devnCompCnt tableIndex map_index						}{							exec						} ifelse						setdevicencolor						currentgray						tableIndex exch						HiVal mul cvi 						NewLookup 3 1 roll put					} for					[/Indexed currentcolorspace HiVal NewLookup] setcolorspace_opt					end				}{					level3					{					[/Indexed [/DeviceN Names MappedCSA /TintTransform load] HiVal Lookup] setcolorspace_opt					}{					[/Indexed MappedCSA HiVal						[						Lookup dup type /stringtype eq							{/exch cvx CSD get_csd /Names get length dup /mul cvx exch /getinterval cvx {255 div} /forall cvx}							{/exec cvx}ifelse							/TintTransform load /exec cvx						]cvx					]setcolorspace_opt					}ifelse				} ifelse				end			}{			} ifelse			set_crd		}		{			/MappedCSA CSA map_csa def			AGMCORE_host_sep level2 not and{				0 0 0 0 setcmykcolor			}{				[/Indexed MappedCSA 				level2 not has_color not and{					dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{						pop [/DeviceGray]					}if					HiVal GrayLookup				}{					HiVal 					currentdict/RangeArray known{						{ 							/indexed_colorspace_dict AGMCORE_gget begin							Lookup exch 							dup HiVal gt{								pop HiVal							}if							NComponents mul NComponents getinterval {} forall							NComponents 1 sub -1 0{								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range								NComponents 1 roll							}for							end						} bind					}{						Lookup					}ifelse				}ifelse				] setcolorspace_opt				set_crd			}ifelse		}ifelse	end}def/setindexedcolor{	AGMCORE_host_sep {		/indexed_colorspace_dict AGMCORE_gget dup /CSD known {			begin			CSD get_csd begin			map_indexed_devn			devn			end			end		}{			AGMCORE_gget/Lookup get 4 3 -1 roll map_index			pop setcmykcolor		} ifelse	}{		level3 not AGMCORE_in_rip_sep and /indexed_colorspace_dict AGMCORE_gget /CSD known and {			/indexed_colorspace_dict AGMCORE_gget /CSD get get_csd begin			map_indexed_devn			devn			end		}		{			setcolor		} ifelse	}ifelse} def/ignoreimagedata{	currentoverprint not{		gsave		dup clonedict begin		1 setgray		/Decode [0 1] def		/DataSource <FF> def		/MultipleDataSources false def		/BitsPerComponent 8 def		currentdict end		systemdict /image get exec		grestore		}if	consumeimagedata}def/add_csa{	Adobe_AGM_Core begin			/AGMCORE_CSA_cache xput	end}def/get_csa_by_name{	dup type dup /nametype eq exch /stringtype eq or{		Adobe_AGM_Core begin		1 dict begin		/name xdf		AGMCORE_CSA_cache		{			0 get name eq {				exit			}{				pop			} ifelse		}forall		end		end	}{		pop	} ifelse}def/map_csa{	dup type /nametype eq{		Adobe_AGM_Core/AGMCORE_CSA_cache get exch get	}if}def/add_csd{	Adobe_AGM_Core begin		/AGMCORE_CSD_cache xput	end}def/get_csd{	dup type /nametype eq{		Adobe_AGM_Core/AGMCORE_CSD_cache get exch get	}if}def/pattern_buf_init{	/count get 0 0 put} def/pattern_buf_next{	dup /count get dup 0 get	dup 3 1 roll	1 add 0 xpt	get				} def/cachepattern_compress{	5 dict begin	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def	/patarray 20 dict def	/string_size 16000 def	/readbuffer string_size string def	currentglobal true setglobal 	patarray 1 array dup 0 1 put /count xpt	setglobal	/LZWFilter 	{		exch		dup length 0 eq {			pop		}{			patarray dup length 1 sub 3 -1 roll put		} ifelse		{string_size}{0}ifelse string	} /LZWEncode filter def	{ 				ReadFilter readbuffer readstring		exch LZWFilter exch writestring		not {exit} if	} loop	LZWFilter closefile	patarray					end}def/cachepattern{	2 dict begin	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def	/patarray 20 dict def	currentglobal true setglobal 	patarray 1 array dup 0 1 put /count xpt	setglobal	{		ReadFilter 16000 string readstring exch		patarray dup length 1 sub 3 -1 roll put		not {exit} if	} loop	patarray dup dup length 1 sub () put						end	}def/add_pattern{	Adobe_AGM_Core begin		/AGMCORE_pattern_cache xput	end}def/get_pattern{	dup type /nametype eq{		Adobe_AGM_Core/AGMCORE_pattern_cache get exch get		dup wrap_paintproc	}if}def/wrap_paintproc{   statusdict /currentfilenameextend known{	  begin		/OldPaintProc /PaintProc load def		/PaintProc		{		  mark exch		  dup /OldPaintProc get stopped		  {closefile restore end} if		  cleartomark		}  def	  end  } {pop} ifelse} def/make_pattern{	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform	exch 3 index /XStep get 1 index exch 2 copy div cvi mul sub sub	exch 3 index /YStep get 1 index exch 2 copy div cvi mul sub sub	matrix translate exch matrix concatmatrix			  1 index begin		BBox 0 get XStep div cvi XStep mul /xshift exch neg def		BBox 1 get YStep div cvi YStep mul /yshift exch neg def		BBox 0 get xshift add		BBox 1 get yshift add		BBox 2 get xshift add		BBox 3 get yshift add		4 array astore		/BBox exch def		[ xshift yshift /translate load null /exec load ] dup		3 /PaintProc load put cvx /PaintProc exch def		end	gsave 0 setgray	makepattern	grestore}def/set_pattern{	dup /PatternType get 1 eq{		dup /PaintType get 1 eq{			currentoverprint sop [/DeviceGray] setcolorspace 0 setgray		}if	}if	setpattern}def/setcolorspace_opt{	dup currentcolorspace eq{		pop	}{		setcolorspace	}ifelse}def/updatecolorrendering{	currentcolorrendering/Intent known{		currentcolorrendering/Intent get	}{		null	}ifelse	Intent ne{		false  		Intent		AGMCORE_CRD_cache {			exch pop 			begin				dup Intent eq{					currentdict setcolorrendering_opt					end 					exch pop true exch						exit				}if			end		} forall		pop		not{			systemdict /findcolorrendering known{				Intent findcolorrendering pop				/ColorRendering findresource 				dup length dict copy				setcolorrendering_opt			}if		}if	}if} def/add_crd{	AGMCORE_CRD_cache 3 1 roll put}def/set_crd{	AGMCORE_host_sep not level2 and{		currentdict/CRD known{			AGMCORE_CRD_cache CRD get dup null ne{				setcolorrendering_opt			}{				pop			}ifelse		}{			currentdict/Intent known{				updatecolorrendering			}if		}ifelse		currentcolorspace dup type /arraytype eq			{0 get}if		/DeviceRGB eq			{			currentdict/UCR known				{/UCR}{/AGMCORE_currentucr}ifelse			load setundercolorremoval			currentdict/BG known 				{/BG}{/AGMCORE_currentbg}ifelse			load setblackgeneration			}if	}if}def/setcolorrendering_opt{	dup currentcolorrendering eq{		pop	}{		begin			/Intent Intent def			currentdict		end		setcolorrendering	}ifelse}def/cpaint_gcomp{	convert_to_process Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf	Adobe_AGM_Core/AGMCORE_ConvertToProcess get not	{		(%end_cpaint_gcomp) flushinput	}if}def/cpaint_gsep{	Adobe_AGM_Core/AGMCORE_ConvertToProcess get	{			(%end_cpaint_gsep) flushinput	}if}def/cpaint_gend{	newpath}def/path_rez{	dup 0 ne{		AGMCORE_deviceDPI exch div 		dup 1 lt{			pop 1		}if		setflat	}{		pop	}ifelse 	}def/set_spot_alias_ary{	/AGMCORE_SpotAliasAry where{		pop pop	}{		Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf		true set_spot_alias	}ifelse}def/set_spot_alias{	/AGMCORE_SpotAliasAry where{		/AGMCORE_current_spot_alias 3 -1 roll put	}{		pop	}ifelse}def/current_spot_alias{	/AGMCORE_SpotAliasAry where{		/AGMCORE_current_spot_alias get	}{		false	}ifelse}def/map_alias{	/AGMCORE_SpotAliasAry where{		begin			/AGMCORE_name xdf			false				AGMCORE_SpotAliasAry{				dup/Name get AGMCORE_name eq{					save exch					/Adobe_AGM_Core currentdict def					/CSD get get_csd					exch restore					exch pop true					exit				}{					pop				}ifelse			}forall		end	}{		pop false	}ifelse}bdf/spot_alias{	true set_spot_alias	/AGMCORE_&setcustomcolor AGMCORE_key_known not {		Adobe_AGM_Core/AGMCORE_&setcustomcolor /setcustomcolor load put	} if	/customcolor_tint 1 AGMCORE_gput	Adobe_AGM_Core begin	/setcustomcolor	{		dup /customcolor_tint exch AGMCORE_gput		current_spot_alias{			1 index 4 get map_alias{				mark 3 1 roll				setsepcolorspace				counttomark 0 ne{					setsepcolor				}if				pop				pop			}{				AGMCORE_&setcustomcolor			}ifelse		}{			AGMCORE_&setcustomcolor		}ifelse	}bdf	end}def/begin_feature{	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if}def/end_feature{	2 dict begin	/spd /setpagedevice load def	/setpagedevice { get_gstate spd set_gstate } def	stopped{$error/newerror false put}if	end	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if}def/set_negative{	Adobe_AGM_Core begin	/AGMCORE_inverting exch def	level2{		currentpagedevice/NegativePrint known{			currentpagedevice/NegativePrint get Adobe_AGM_Core/AGMCORE_inverting get ne{				true begin_feature true{						bdict /NegativePrint Adobe_AGM_Core/AGMCORE_inverting get edict setpagedevice				}end_feature			}if			/AGMCORE_inverting false def		}if	}if	AGMCORE_inverting{		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer		gsave newpath clippath 1 /setseparationgray where{pop setseparationgray}{setgray}ifelse 		/AGMIRS_&fill where {pop AGMIRS_&fill}{fill} ifelse grestore	}if	end}def/lw_save_restore_override {	/md where {		pop		md begin		initializepage		/initializepage{}def		/pmSVsetup{} def		/endp{}def		/pse{}def		/psb{}def		/orig_showpage where			{pop}			{/orig_showpage /showpage load def}		ifelse		/showpage {orig_showpage gR} def		end	}if}def/pscript_showpage_override {	/NTPSOct95 where	{		begin		showpage		save		/showpage /restore load def		/restore {exch pop}def		end	}if}def/driver_media_override{	/md where {		pop		md /initializepage known {			md /initializepage {} put		} if		md /rC known {			md /rC {4{pop}repeat} put		} if	}if	/mysetup where {		/mysetup [1 0 0 1 0 0] put	}if	Adobe_AGM_Core /AGMCORE_Default_CTM matrix currentmatrix put	level2		{Adobe_AGM_Core /AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if}def/driver_check_media_override{	/PrepsDict where		{pop}		{		Adobe_AGM_Core /AGMCORE_Default_CTM get matrix currentmatrix ne		Adobe_AGM_Core /AGMCORE_Default_PageSize get type /arraytype eq			{			Adobe_AGM_Core /AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and			Adobe_AGM_Core /AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and			}if			{			Adobe_AGM_Core /AGMCORE_Default_CTM get setmatrix			}if		}ifelse}defAGMCORE_err_strings begin	/AGMCORE_bad_environ (Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. ) def	/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate with on-host methods. ) def	/AGMCORE_invalid_color_space (This job contains an invalid color space. ) defendendsystemdict /setpacking known{	setpacking} if%%EndResource%%BeginResource: procset Adobe_CoolType_Core 2.23 0%%Copyright: Copyright 1997-2003 Adobe Systems Incorporated.  All Rights Reserved.%%Version: 2.23 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict /Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{ /Adobe_CoolType_Core userdict /Adobe_CoolType_Core get def }ifuserdict /Adobe_CoolType_Core 60 dict dup begin put/Adobe_CoolType_Version 2.23 def/Level2?	systemdict /languagelevel known dup		{ pop systemdict /languagelevel get 2 ge }	if defLevel2? not	{	/currentglobal false def	/setglobal /pop load def	/gcheck { pop false } bind def	/currentpacking false def	/setpacking /pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpacking/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel		2 copy known not			{ 2 copy 3 dict dup /args 7 index 5 add array put put get }			{			get dup /args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch /args exch put				}				{ pop }			ifelse			}		ifelse			begin			count 2 sub 1 index lt				{ pop count 1 sub }			if			dup /argCount exch def			dup 0 gt				{				exch 1 index 2 add 1 roll				args exch 0 exch getinterval 			astore pop				}				{ pop }			ifelse			count 1 sub /restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		end	} bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{ { pop } repeat }				{ pop }			ifelse			args 0 argCount getinterval {} forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{ { end } repeat }		{ pop }	ifelse	} bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	} bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	} bind def/@ReRaise	{	cvx $error /errorname get errordict exch get exec	stop	} bind def/@Stopped	{	0 @#Stopped	} bind def/@#Stopped	{	@_SaveStackLevels	stopped		{ @_RestoreStackLevels true }		{ @_PopStackLevels false }	ifelse	} bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get /args get exch get		end	} bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup begin		mark			{				(*) { pop stop } 128 string /Category			resourceforall			}		stopped		cleartomark		currentdict eq dup			{ end }		if		not		}		{ false }	ifelse	def/CTHasResourceStatusBug	Level2?		{		mark			{ /steveamerige /Category resourcestatus }		stopped			{ cleartomark true }			{ cleartomark currentglobal not }		ifelse		}		{ false }	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec				{ cleartomark false }				{ { 3 2 roll pop true } { cleartomark false } ifelse }			ifelse			end		} bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad /ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup /CMap CTHasResourceStatusBug						{ CTResourceStatus }						{ resourcestatus }					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup /CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{ exit }								{ stop }							ifelse							}						ifelse						}						{ pop }					ifelse					}				128 string /CMap resourceforall				}			stopped				{ cleartomark }			stopped pop			setglobal			}		if		}	if	} bind def/doc_setup	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mov /moveto load def		/nfnt /newencodedfont load def		/mfnt /makefont load def		/sfnt /setfont load def		/ufnt /undefinefont load def		/chp /charpath load def		/awsh /awidthshow load def		/wsh /widthshow load def		/ash /ashow load def		/sh /show load def		end	userdict /Adobe_CoolType_Data 10 dict dup		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end put	} bind def/doc_trailer	{	currentdict Adobe_CoolType_Core eq		{ end }	if	} bind def/page_setup	{	Adobe_CoolType_Core begin	} bind def/page_trailer	{	end	} bind def/unload	{	systemdict /languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{ undef }				{ pop pop }			ifelse			}		if		}	if	} bind def/ndf	{	1 index where		{ pop pop pop }		{ dup xcheck { bind } if def }	ifelse	} def/findfont systemdict	begin	userdict		begin		/globaldict where { /globaldict get begin } if			dup where pop exch get		/globaldict where { pop end } if		end	endAdobe_CoolType_Core_Defined	{ /systemfindfont exch def }	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{ pop } ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq { 0 } { dup length } ifelse	2 index length add 1 add dict		begin		exch			{			1 index /FID eq				{ pop pop }				{ def }			ifelse			}		forall		dup null eq			{ pop }			{ { def } forall }		ifelse		currentdict		end	exch setglobal	} bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	} bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index  known			{ SharedFontDirectory 3 index get /FontReferenced known }			{ false }		ifelse		}		{		FontDirectory 3 index known			{ FontDirectory 3 index get /FontReferenced known }			{			SharedFontDirectory 3 index known				{ SharedFontDirectory 3 index get /FontReferenced known }				{ false }			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont /FontReferenced get		2 index dup type /nametype eq			{findfont}		if ne			{ pop false }		if		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{ 2 copy get 3 index 3 1 roll put }		for		pop pop pop		}		{		dup type /nametype eq		  { findfont }	  if		dup dup maxlength 2 add dict			begin			exch				{				1 index /FID ne					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type /stringtype eq { cvn } if def dup			currentdict			end		definefont def		}	ifelse	} bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type /dicttype ne			{ 0 dict }		if		currentdict /$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{ def } forall					{ def } forall					currentdict					dup /$Init known						{ dup /$Init get exec }					if					end				/$Strategy exch def				}				{ pop pop pop }			ifelse			}			{ pop pop }		ifelse		end	} bind def/scff	{	$SubstituteFont		begin		dup type /stringtype eq			{ dup length exch }			{ null }		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{ $sname }			ifelse def		end		{ findfont }	@Stopped		{		dup length 8 add string exch		1 index 0 (BadFont:) putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{ findfont }		@Stopped			{ pop /Courier findfont }		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	} bind def/isWidthsOnlyFont	{	dup /WidthsOnly known		{ pop pop true }		{		dup /FDepVector known			{ /FDepVector get { isWidthsOnlyFont dup { exit } if } forall }			{			dup /FDArray known				{ /FDArray get { isWidthsOnlyFont dup { exit } if } forall }				{ pop }			ifelse			}		ifelse		}	ifelse	} bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 4 index def		/$doSmartSub false def		end	3 index	currentglobal false setglobal exch	/CompatibleFonts /ProcSet resourcestatus		{		pop pop		/CompatibleFonts /ProcSet findresource			begin			dup /CompatibleFont currentexception			1 index /CompatibleFont true setexception			1 index /Font resourcestatus				{				pop pop				3 2 roll setglobal				end				exch				dup findfont				/CompatibleFonts /ProcSet findresource					begin					3 1 roll exch /CompatibleFont exch setexception					end				}				{				3 2 roll setglobal				1 index exch /CompatibleFont exch setexception				end				findfont				$SubstituteFont /$substituteFound true put				}			ifelse		}		{ exch setglobal findfont }	ifelse	$SubstituteFont		begin		$substituteFound			{		 false		 (%%[Using embedded font ) print		 5 index ?str1 cvs print		 ( to avoid the font substitution problem noted earlier.]%%\n) print		 }			{			dup /FontName known				{				dup /FontName get $fontname eq				1 index /DistillerFauxFont known not and				/currentdistillerparams where					{ pop false 2 index isWidthsOnlyFont not and }				if				}				{ false }			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		exch pop exch pop exch		2 dict dup /Found 3 index put		exch findfont exch		}		{		exch exec		exch dup findfont		dup /FontType get 3 eq	  {		  exch ?str1 cvs		  dup length 1 sub		  -1 0		{			  exch dup 2 index get 42 eq			{				 exch 0 exch getinterval cvn 4 1 roll 3 2 roll pop				 exit			  }			  {exch pop} ifelse		  }for		}		{		 exch pop	  } ifelse		2 dict dup /Downloaded 6 5 roll put		}	ifelse	dup /FontName 4 index put copyfont definefont pop	} bind def/?str2 256 string def/?add	{	1 index type /integertype eq		{ exch true 4 2 }		{ false 3 1 }	ifelse	roll	1 index findfont	dup /Widths known		{		Adobe_CoolType_Data /AddWidths? true put		gsave dup 1000 scalefont setfont		}	if	/Downloaded known		{		exec		exch			{			exch ?str2 cvs exch			findfont /Downloaded get 1 dict begin /Downloaded 1 index def ?str1 cvs length			?str1 1 index 1 add 3 index putinterval			exch length 1 add 1 index add			?str1 2 index (*) putinterval			?str1 0 2 index getinterval cvn findfont 			?str1 3 index (+) putinterval			2 dict dup /FontName ?str1 0 6 index getinterval cvn put			dup /Downloaded Downloaded put end copyfont			dup /FontName get exch definefont pop pop pop			}			{			pop			}		ifelse		}		{		pop		exch			{			findfont			dup /Found get			dup length exch ?str1 cvs pop			?str1 1 index (+) putinterval			?str1 1 index 1 add 4 index ?str2 cvs putinterval			?str1 exch 0 exch 5 4 roll ?str2 cvs length 1 add add getinterval cvn			1 dict exch 1 index exch /FontName exch put copyfont			dup /FontName get exch definefont pop			}			{			pop			}		ifelse		}	ifelse	Adobe_CoolType_Data /AddWidths? get		{ grestore Adobe_CoolType_Data /AddWidths? false put }	if	} bind def/?sh	{	currentfont /Downloaded known { exch } if pop	} bind def/?chp	{	currentfont /Downloaded known { pop } { false chp } ifelse	} bind def/?mv 	{	currentfont /Downloaded known { moveto pop pop } { pop pop moveto } ifelse	} bind defsetpackinguserdict /$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{ get }			{ pop pop { pop /Courier } bind }		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams /CannotEmbedFontPolicy 2 copy known			{ get /Error eq }			{ pop pop false }		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup /WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type /stringtype eq { cvn } if def								/FontType 3 def								/FontMatrix [ .001 0 0 .001 0 0 ] def								/Encoding 256 array dup 0 1 255 { /.notdef put dup } for pop def								/FontBBox [ 0 0 0 0 ] def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth /y exch def /x exch def											x y setcharwidth											$SubstituteFont /$Strategy get /$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									} bind def								currentdict								end							exch setglobal							} bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup /WMode known										{ dup /WMode get }										{ 0 }									ifelse									/$WMode exch def									$fontname exch									dup /FontName known										{										dup /FontName get										dup type /stringtype eq { cvn } if										}										{ /unnamedfont }									ifelse									exch									Adobe_CoolType_Data /InVMDeepCopiedFonts get									1 index /FontName get known										{										pop										Adobe_CoolType_Data /InVMDeepCopiedFonts get										1 index get										null copyfont										}										{ $deepcopyfont }									ifelse									exch 1 index exch /FontBasedOn exch put									dup /FontName $fontname dup type /stringtype eq { cvn } if put									definefont									Adobe_CoolType_Data /InVMDeepCopiedFonts get										begin										dup /FontBasedOn get 1 index def										end									} bind def								/$Underprint									{									gsave									x abs y abs gt										{ /y 1000 def }										{ /x -1000 def 500 120 translate }									ifelse									Level2?										{										[ /Separation (All) /DeviceCMYK { 0 0 0 1 pop } ]										setcolorspace										}										{ 0 setgray }									ifelse									10 setlinewidth									x .8 mul									[ 7 3 ]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{ .2 setcolor }											{ .8 setgray }										ifelse										fill grestore										stroke										}									forall									pop									grestore									} bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict /FontName known											{											FontName											dup type /stringtype eq { cvn } if											}											{ /unnamedfont }										ifelse										def										/FontName $fontname dup type /stringtype eq { cvn } if def										/currentdistillerparams where											{ pop }											{											/FontInfo currentdict /FontInfo known												{ FontInfo null copyfont }												{ 2 dict }											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[ 1 0 ItalicAngle dup sin exch cos div 1 0 0 ]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									} bind def								end def						/$None							1 dict dup								begin								/$BuildFont {} bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type /stringtype eq { cvn } if						dup /$fontname exch def						$sname null eq							{ $str cvs dup length $slen sub $slen getinterval }							{ pop $sname }						ifelse						$fontpat dup 0 (fonts/*) putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont /$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{ /$match exch def exit }							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont /$dstack get								{								exch									{									1 index eq										{ pop false }										{ true }									ifelse									}									{ begin false }								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{ $match (fonts/) anchorsearch pop pop cvn }							{ /Courier }						ifelse						} bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1  [ /Ryumin-Light /HeiseiMin-W3										  /GothicBBB-Medium /HeiseiKakuGo-W5										  /HeiseiMaruGo-W4 /Jun101-Light ] def							/Korea1  [ /HYSMyeongJo-Medium /HYGoThic-Medium ] def							/GB1	  [ /STSong-Light /STHeiti-Regular ] def							/CNS1	 [ /MKai-Medium /MHei-Medium ] def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup /FontType get 0 eq							{							1 dict dup /FontName /copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup /FontName /copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{ $Strategies /$Type3Underprint get exec }						ifelse						} bind def					/$buildfontname						{						dup /CIDFont findresource /CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index (-) putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy (-) putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{ pop pop 3 2 roll putinterval cvn /$cmapname exch def }							{ pop pop pop pop pop }						ifelse						length						$str 1 index (-) putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						} bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{ get }								{ pop pop [] }							ifelse							}							{ pop pop [] }						ifelse						false exch							{							dup /CIDFont resourcestatus								{								pop pop								save								1 index /CIDFont findresource								dup /WidthsOnly known									{ dup /WidthsOnly get }									{ false }								ifelse								exch pop								exch restore									{ pop }									{ exch pop true exit }								ifelse								}								{ pop }							ifelse							}						forall							{ $str cvs $buildfontname }							{							false (*)								{								save exch								dup /CIDFont findresource								dup /WidthsOnly known									{ dup /WidthsOnly get not }									{ true }								ifelse								exch /CIDSystemInfo get								dup /Registry get Registry eq								exch /Ordering get Ordering eq and and									{ exch restore exch pop true exit }									{ pop restore }								ifelse								}							$str /CIDFont resourceforall								{ $buildfontname }								{ $fontname $findfontByEnum }							ifelse							}						ifelse						} bind def					end				end				currentdict /$error known currentdict /languagelevel known and dup					{ pop $error /SubstituteFont known }				if				dup					{ $error }					{ Adobe_CoolType_Core }				ifelse				begin					{					/SubstituteFont					/CMap /Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{ dup $str cvs dup length $slen sub $slen getinterval cvn }									{ $sname }								ifelse								Adobe_CoolType_Data /InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{ exch pop true exit }												{ pop }											ifelse											}											{											FontDirectory 1 index known												{ exch pop true exit }												{												GlobalFontDirectory 1 index known													{ exch pop true exit }													{ pop }												ifelse												}											ifelse											}										ifelse										}									forall									}									{ pop pop false }								ifelse									{									exch pop exch pop									}									{									dup /CMap resourcestatus										{										pop pop										dup /$cmapname exch def										/CMap findresource /CIDSystemInfo get { def } forall										$findfontByROS										}										{										128 string cvs										dup (-) search											{											3 1 roll search												{												3 1 roll pop													{ dup cvi }												stopped													{ pop pop pop pop pop $findfontByEnum }													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup /CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup /$cmapname exch def															/CMap findresource /CIDSystemInfo get { def } forall															$findfontByROS															true exit															}															{ pop }														ifelse														}													for													dup type /booleantype eq														{ pop }														{ pop pop pop $findfontByEnum }													ifelse													}												ifelse												}												{ pop pop pop $findfontByEnum }											ifelse											}											{ pop pop $findfontByEnum }										ifelse										}									ifelse									}								ifelse								}								{ //SubstituteFont exec }							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{ $findfontByEnum }								{ //SubstituteFont exec }							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core /scfindfont /systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup /FontName known								{ dup /FontName get dup 3 index ne }								{ /noname true }							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def /$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{ 1 index /FID eq { pop pop } { def } ifelse }										forall										currentdict										end									definefont									dup /FontName known { dup /FontName get } { null } ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using ) print										dup /FontName known											{ dup /FontName get } { (unspecified font) }										ifelse										$str cvs print (.\n) print										}									if									}									{ exch pop }								ifelse								}								{ exch pop }							ifelse							end						} bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core /findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type /stringtype ne { $str cvs } if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{ dup $inVMIndex $AddInVMFont }						if						$doSmartSub							{							currentdict /$Strategy known								{ $Strategy /$BuildFont get exec }							if							}						if						}					if					end				} bind put			}		if		}	if	end/$AddInVMFont	{	exch /FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data /InVMFontsByCMap get exch		$DictAdd		}		{ pop pop pop }	ifelse	} bind def/$DictAdd	{	2 copy known not		{ 2 copy 4 index length dict put }	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get { forall } def				2 copy currentdict put				end			}			{ pop }		ifelse		}	if	get		begin			{ def }		forall		end	} bind defendend%%EndResource%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.19 0%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated.%%Version: 1.19 0systemdict /languagelevel known dup	{ currentglobal false setglobal }	{ false }ifelseexchuserdict /Adobe_CoolType_Utility 2 copy known	{ 2 copy get dup maxlength 25 add dict copy }	{ 25 dict }ifelse putAdobe_CoolType_Utility	begin	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch /eCCRun known not			ct_Level2? and or defct_Level2?	{ globaldict begin currentglobal true setglobal }if	/ct_AddStdCIDMap		ct_Level2?			{ {			((Hex) 57 StartData			0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0			7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60			d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8			cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec			} }			{ {			<BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C			4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> eexec			} }		ifelse bind defuserdict /cid_extensions knowndup { cid_extensions /cid_UpdateDB known and } if	 {	 cid_extensions	 begin	 /cid_GetCIDSystemInfo		 {		 1 index type /stringtype eq			 { exch cvn exch }		 if		 cid_extensions			 begin			 dup load 2 index known				 {				 2 copy				 cid_GetStatusInfo				 dup null ne					 {					 1 index load					 3 index get					 dup null eq						  { pop pop cid_UpdateDB }						  {						  exch						  1 index /Created get eq							  { exch pop exch pop }							  { pop cid_UpdateDB }						  ifelse						  }					 ifelse					 }					 { pop cid_UpdateDB }				 ifelse				 }				 { cid_UpdateDB }			 ifelse			 end		 } bind def	 end	 }ifct_Level2?	{ end setglobal }if	/ct_UseNativeCapability?  systemdict /composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring () def		/usewidths? true def		end def	ct_Level2? { setglobal } { pop } ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict /languagelevel known				{ pop /CIDFont findresource /GlyphDirectory get }				{				1 index /CIDFont findresource /GlyphDirectory				get dup type /dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			} def		/+			{			systemdict /languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{ 1 dict begin }			ifelse			/$ exch def			systemdict /languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			? { $ begin } if			} def		/? { $ type /dicttype eq } def		/| {			userdict /Adobe_CoolType_Data known				{			Adobe_CoolType_Data /AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					  begin						AddWidths?								{								Adobe_CoolType_Data /CC 3 index put								? { def } { $ 3 1 roll put } ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont /Widths get exch CC exch put								}								{ ? { def } { $ 3 1 roll put } ifelse }							ifelse					end				end				}				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse				}				{ ? { def } { $ 3 1 roll put } ifelse }			ifelse			} def		/!			{			? { end } if			systemdict /languagelevel known				{ gvm setglobal }			if			end			} def		/: { string currentfile exch readstring pop } executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx [.001 0 0 .001 0 0] def		/ct_1000Mtx [1000 0 0 1000 0 0] def		/ct_raise {exch cvx exch errordict exch get exec stop} bind def		/ct_reraise			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print					errordict exch get exec stop			} bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			} bind def		/ct_GetInterval			{			Adobe_CoolType_Utility /ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{ dup string /dst_string exch def }				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex  get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string  dst_index 2 index putinterval						length dst_index add /dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string  dst_index 2 index putinterval						pop dup dst_index add /dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							  { arrayIndex get }							  {							  pop							  exit							  }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			} bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{ /unknowninstancename /Category resourcestatus }			stopped				{ cleartomark setglobal true }				{ cleartomark currentglobal not exch setglobal }			ifelse				{					{					mark 3 1 roll /Category findresource						begin						ct_Vars /vm currentglobal put						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec							{ cleartomark false }							{ { 3 2 roll pop true } { cleartomark false } ifelse }						ifelse						ct_Vars /vm get setglobal						end					}				}				{ { resourcestatus } }			ifelse bind def			/CIDFont /Category ct_resourcestatus				{ pop pop }				{				currentglobal  true setglobal				/Generic /Category findresource				dup length dict copy				dup /InstanceType /dicttype put				/CIDFont exch /Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit /ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				  /Registry (Adobe) def				  /Ordering (Identity) def				  /Supplement 0 def				end def				/CMapName /Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000> <FFFF>				endcodespacerange				1 begincidrange				<0000> <FFFF> 0				endcidrange				endcmap				CMapName currentdict /CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont  10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{ pop pop /defineresource /undefined ct_raise }				ifelse				} bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{ get 3 1 roll pop pop}						{ pop pop /findresource /undefinedresource ct_raise }					ifelse					}					{ pop pop /findresource /undefined ct_raise }				ifelse				} bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{ pop pop /findresource /undefined ct_raise }				ifelse				} bind def			/ct_resourcestatus /resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup (Binary) eq						{						pop						null						currentfile						ct_Level2?							{								{ cid_BYTE_COUNT () /SubFileDecode filter }							stopped								{ pop pop pop }							if							}						if						/readstring load						exit						}					if					dup (Hex) eq						{						pop						currentfile						ct_Level2?							{								{ null exch /ASCIIHexDecode filter /readstring }							stopped								{ pop exch pop (>) exch /readhexstring }							if							}							{ (>) exch /readhexstring }						ifelse						load						exit						}					if					/StartData /typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch /GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop /readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				} bind def			/StartData				{				mark					{					currentdict					dup /FDArray get 0 get /FontMatrix get					0 get 0.001 eq						{						dup /CDevProc known not							{							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known								{ get }								{								pop pop								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }								}							ifelse							def							}						if						}						{						 /CDevProc							 {							 pop pop pop pop pop							 0							 1 cid_temp /cid_CIDFONT get							 /FDArray get 0 get							 /FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							 } def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup /cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup /SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup /SubrMapOffset undef										dup /SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{ pop }								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict /CIDFont defineresource pop					end end					}				stopped					{ cleartomark /StartData ct_reraise }				if				} bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit /ProcSet ct_resourcestatus				{ true }				{ /CIDInitC /ProcSet ct_resourcestatus }			ifelse				{				pop pop				/CIDInit /ProcSet findresource				ct_UseNativeCapability?					{ pop null }					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }				ifelse				}				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }			ifelse			ct_Vars exch /ct_oldCIDInit exch put			} bind def		/ct_restoreCIDInit			{			ct_Vars /ct_oldCIDInit get dup null ne				{ /CIDInit exch /ProcSet defineresource pop }				{ pop }			ifelse			} bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility /ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{ pop 0 }						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{ get }								{ pop pop nullstring }							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{ 0 FDBytes ct_cvnsi }									{ pop 0 }								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{ /charstring nullstring def exit }								if								/cid 0 def								}							ifelse							}						loop			} def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			} def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont /Widths get cid					2 copy known						{ get exch pop aload pop }						{ pop pop stringwidth }					ifelse					}					{ stringwidth }				ifelse				setcharwidth				0 0 moveto				}			ifelse			} def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{ get }				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup /FontMatrix 2 copy known						{ get }						{ pop pop ct_defaultFontMtx }					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont /Widths get def					/CharStrings 1 dict dup /.notdef						<d841272cf18f54fc13> dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup /CharStrings get 1 index /Encoding get			ct_dfCharCode get charstring put			rootfont /WMode 2 copy known				{ get }				{ pop pop 0 }			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ ct_str1 show }			ifelse			} def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ ct_1000Mtx matrix concatmatrix concat }				{ pop }			ifelse			/Private get			Adobe_CoolType_Utility /ct_Level2? get not				{				ct_dfDict /Private				3 -1 roll					{ put }				1183615869 internaldict /superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility /ct_Level2? get				{ 1 index }				{ 3 index /Private get mark 6 1 roll }			ifelse			dup /RunInt known				{ /RunInt get }				{ pop /CCRun }			ifelse			get exec			Adobe_CoolType_Utility /ct_Level2? get not				{ cleartomark }			if			} bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility /ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{ stop }			if			end			end			end			end			} bind def		/BaseFontNameStr (BF00) def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix  [0.001 0 0 0.001 0 0] def			/FontBBox  [-250 -250 1250 1250] def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix  [0.001 0 0 0.001 0 0] def			/FontBBox  [-250 -250 1250 1250] def			/Encoding ct_cHexEncoding def			/BuildChar /ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString /ct_Type3ShowCharString load def				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup /lenIV 4 put def				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def				/PaintType 0 def				/ct_ShowCharString /ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{ exit }				if				}			for			exch pop exch pop			} bind def		/ct_makeocf			{			15 dict				begin				exch /WMode exch def				exch /FontName exch def				/FontType 0 def				/FMapType 2 def			dup /FontMatrix known				{ dup /FontMatrix get /FontMatrix exch def }				{ /FontMatrix matrix def }			ifelse				/bfCount 1 index /CIDCount get 256 idiv 1 add					dup 256 gt { pop 256} if def				/Encoding					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for					bfCount 1 255 { 2 copy bfCount put pop } for					def				/FDepVector bfCount dup 256 lt { 1 add } if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont /FontBBox known						{ CIDFont /FontBBox get /FontBBox exch def }					if					CIDFont /CDevProc known						{ CIDFont /CDevProc get /CDevProc exch def }					if					currentdict					end				BaseFontNameStr 3 (0) putinterval				0 1 bfCount dup 256 eq { 1 sub } if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup /CIDFirstByte exch 256 mul def						FontType 3 eq							{ /ct_FDDict 2 dict def }						if						currentdict						end					1 index  16					BaseFontNameStr  2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont /Widths get						begin						exch /CIDFont get /GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{ exch pop }			ifelse			} bind def		/ct_ComposeFont			{			ct_UseNativeCapability?				{				2 index /CMap ct_resourcestatus					{ pop pop exch pop }					{					/CIDInit /ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch /WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry (Adobe) def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-) search									{									pop pop									(-) search										{										dup length string copy										exch pop exch pop										}										{ pop (Identity)}									ifelse									}									{ pop  (Identity)  }								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000> <FFFF>							endcodespacerange							1 begincidrange							<0000> <FFFF> 0							endcidrange							endcmap							CMapName currentdict /CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get /CIDFont findresource				ct_makeocf				}			ifelse			} bind def		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index /CMap ct_resourcestatus					{ pop pop }					{					/CIDInit /ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry (Adobe) def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-) search							{							pop pop							(-) search								{ dup length string copy exch pop exch pop }								{ pop (Identity) }							ifelse							}							{ pop (Identity) }						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000> <FFFF>					endcodespacerange					1 begincidrange					<0000> <FFFF> 0					endcidrange					endcmap					CMapName currentdict /CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get /CIDFont findresource				ct_makeocf				}			ifelse			} bind def		currentdict readonly pop		end	end%%EndResource%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated.%%Version: 1.0 0userdict /ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{  version  cvi  2015  ge} bind def/AllocGlyphStorage{  Is2015?  {			pop  }   { 		{string} forall  } ifelse} bind def/Type42DictBegin{	25 dict begin  /FontName exch def  /CharStrings 256 dict 	begin		  /.notdef 0 def		  currentdict 	end def  /Encoding exch def  /PaintType 0 def  /FontType 42 def  /FontMatrix [1 0 0 1 0 0] def  4 array  astore cvx /FontBBox exch def  /sfnts} bind def/Type42DictEnd  {	 currentdict dup /FontName get exch definefont end	ct_T42Dict exch	dup /FontName get exch put} bind def/RD {string currentfile exch readstring pop} executeonly def/PrepFor2015{	Is2015?	{		  		 /GlyphDirectory 		 16		 dict def		 sfnts 0 get		 dup		 2 index		 (glyx)		 putinterval		 2 index  		 (locx)		 putinterval		 pop		 pop	}	{		 pop		 pop	} ifelse			} bind def/AddT42Char{	Is2015?	{		/GlyphDirectory get 		begin		def		end		pop		pop	}	{		/sfnts get		4 index		get		3 index	  2 index		putinterval		pop		pop		pop		pop	} ifelse} bind defend%%EndResourceAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0%%Version: 1.0 0%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Image 75 dict dup begin put/Adobe_AGM_Image_Id /Adobe_AGM_Image_1.0_0 def/nd{	null def}bind def/AGMIMG_&image nd/AGMIMG_&colorimage nd/AGMIMG_&imagemask nd/AGMIMG_mbuf () def/AGMIMG_ybuf () def/AGMIMG_kbuf () def/AGMIMG_c 0 def/AGMIMG_m 0 def/AGMIMG_y 0 def/AGMIMG_k 0 def/AGMIMG_tmp nd/AGMIMG_imagestring0 nd/AGMIMG_imagestring1 nd/AGMIMG_imagestring2 nd/AGMIMG_imagestring3 nd/AGMIMG_imagestring4 nd/AGMIMG_imagestring5 nd/AGMIMG_cnt nd/AGMIMG_fsave nd/AGMIMG_colorAry nd/AGMIMG_override nd/AGMIMG_name nd/AGMIMG_maskSource nd/invert_image_samples nd/knockout_image_samples	nd/img nd/sepimg nd/devnimg nd/idximg nd/doc_setup{ 	Adobe_AGM_Core begin	Adobe_AGM_Image begin	/AGMIMG_&image systemdict/image get def	/AGMIMG_&imagemask systemdict/imagemask get def	/colorimage where{		pop		/AGMIMG_&colorimage /colorimage ldf	}if	end	end}def/page_setup{	Adobe_AGM_Image begin	/AGMIMG_ccimage_exists {/customcolorimage where 		{			pop			/Adobe_AGM_OnHost_Seps where			{			pop false			}{			/Adobe_AGM_InRip_Seps where				{				pop false				}{					true				 }ifelse			 }ifelse			}{			false		}ifelse 	}bdf	level2{		/invert_image_samples		{			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf			/Decode [ Decode 1 get Decode 0 get] def		}def		/knockout_image_samples		{			Operator/imagemask ne{				/Decode [1 1] def			}if		}def	}{			/invert_image_samples		{			{1 exch sub} currenttransfer addprocs settransfer		}def		/knockout_image_samples		{			{ pop 1 } currenttransfer addprocs settransfer		}def	}ifelse	/img /imageormask ldf	/sepimg /sep_imageormask ldf	/devnimg /devn_imageormask ldf	/idximg /indexed_imageormask ldf	/_ctype 7 def	currentdict{		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and{			bind		}if		def	}forall}def/page_trailer{	end}def/doc_trailer{}def/imageormask_sys{	begin		save mark		level2{			currentdict			Operator /imagemask eq{				AGMIMG_&imagemask			}{				use_mask {					level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse				}{					AGMIMG_&image				}ifelse			}ifelse		}{			Width Height			Operator /imagemask eq{				Decode 0 get 1 eq Decode 1 get 0 eq	and				ImageMatrix /DataSource load				AGMIMG_&imagemask			}{				BitsPerComponent ImageMatrix /DataSource load				AGMIMG_&image			}ifelse		}ifelse		cleartomark restore	end}def/overprint_plate{	currentoverprint {		0 get dup type /nametype eq {			dup /DeviceGray eq{				pop AGMCORE_black_plate not			}{				/DeviceCMYK eq{					AGMCORE_is_cmyk_sep not				}if			}ifelse		}{			false exch			{				 AGMOHS_sepink eq or			} forall			not		} ifelse	}{		pop false	}ifelse}def/process_mask_L3{	dup begin	/ImageType 1 def	end	4 dict begin		/DataDict exch def		/ImageType 3 def		/InterleaveType 3 def		/MaskDict 9 dict begin			/ImageType 1 def			/Width DataDict dup /MaskWidth known {/MaskWidth}{/Width} ifelse get def			/Height DataDict dup /MaskHeight known {/MaskHeight}{/Height} ifelse get def			/ImageMatrix [Width 0 0 Height neg 0 Height] def			/NComponents 1 def			/BitsPerComponent 1 def			/Decode [0 1] def			/DataSource AGMIMG_maskSource def		currentdict end def	currentdict end}def/use_mask{	dup type /dicttype eq	{		dup /Mask known	{			dup /Mask get {				level3				{true}				{					dup /MaskWidth known {dup /MaskWidth get 1 index /Width get eq}{true}ifelse exch					dup /MaskHeight known {dup /MaskHeight get 1 index /Height get eq}{true}ifelse					3 -1 roll and				} ifelse			}			{false} ifelse		}		{false} ifelse	}	{false} ifelse}def/make_line_source{	begin	MultipleDataSources {		[		Decode length 2 div cvi {Width string} repeat		]	}{		Width Decode length 2 div mul cvi string	}ifelse	end}def/datasource_to_str{	exch dup type	dup /filetype eq {		pop exch readstring	}{		/arraytype eq {			exec exch copy		}{			pop		}ifelse	}ifelse	pop}def/masked_image_simulation{	3 dict begin	dup make_line_source /line_source xdf	/mask_source AGMIMG_maskSource /LZWDecode filter def	dup /Width get 8 div ceiling cvi string /mask_str xdf	begin	gsave	0 1 translate 1 -1 Height div scale	1 1 Height {		pop		gsave		MultipleDataSources {			0 1 DataSource length 1 sub {				dup DataSource exch get				exch line_source exch get				datasource_to_str			} for		}{			DataSource line_source datasource_to_str		} ifelse		<<			/PatternType 1			/PaintProc [				/pop cvx				<<					/ImageType 1					/Width Width					/Height 1					/ImageMatrix Width 1.0 sub 1 matrix scale 0.5 0 matrix translate matrix concatmatrix					/MultipleDataSources MultipleDataSources					/DataSource line_source					/BitsPerComponent BitsPerComponent					/Decode Decode				>>				/image cvx			] cvx			/BBox [0 0 Width 1]			/XStep Width			/YStep 1			/PaintType 1			/TilingType 2		>>		matrix makepattern set_pattern		<<			/ImageType 1			/Width Width			/Height 1			/ImageMatrix Width 1 matrix scale			/MultipleDataSources false			/DataSource mask_source mask_str readstring pop			/BitsPerComponent 1			/Decode [0 1]		>>		imagemask		grestore		0 1 translate	} for	grestore	end	end}def/imageormask{	begin		SkipImageProc {			currentdict consumeimagedata		}		{			save mark			level2 AGMCORE_host_sep not and{				currentdict				Operator /imagemask eq DeviceN_PS2 not and {					imagemask				}{					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{						[/Separation /Black /DeviceGray {}] setcolorspace						/Decode [ Decode 1 get Decode 0 get ] def					}if					use_mask {						level3 {process_mask_L3 image}{masked_image_simulation}ifelse					}{						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 						{							Names convert_to_process not {								2 dict begin								/imageDict xdf								/names_index 0 def								gsave								imageDict write_image_file {									Names {										dup (None) ne {											[/Separation 3 -1 roll /DeviceGray {1 exch sub}] setcolorspace											Operator imageDict read_image_file											names_index 0 eq {true setoverprint} if											/names_index names_index 1 add def										}{											pop										} ifelse									} forall									close_image_file								} if								grestore								end							}{								Operator /imagemask eq {									imagemask								}{									image								} ifelse							} ifelse						}{							Operator /imagemask eq {								imagemask							}{								image							} ifelse						} ifelse					}ifelse				}ifelse			}{				Width Height				Operator /imagemask eq{					Decode 0 get 1 eq Decode 1 get 0 eq	and					ImageMatrix /DataSource load					/Adobe_AGM_OnHost_Seps where {						pop imagemask					}{						currentgray 1 ne{							currentdict imageormask_sys						}{							currentoverprint not{								1 AGMCORE_&setgray								currentdict imageormask_sys							}{								currentdict ignoreimagedata							}ifelse				 								}ifelse					}ifelse				}{					BitsPerComponent ImageMatrix 					MultipleDataSources{						0 1 NComponents 1 sub{							DataSource exch get						}for					}{						/DataSource load					}ifelse					Operator /colorimage eq{						AGMCORE_host_sep{							MultipleDataSources level2 or NComponents 4 eq and{								AGMCORE_is_cmyk_sep{									MultipleDataSources{										/DataSource [											DataSource 0 get /exec cvx											DataSource 1 get /exec cvx											DataSource 2 get /exec cvx											DataSource 3 get /exec cvx											/AGMCORE_get_ink_data cvx										] cvx def									}{										/DataSource 										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 										/DataSource load										filter_cmyk 0 () /SubFileDecode filter def									}ifelse									/Decode [ Decode 0 get Decode 1 get ] def									/MultipleDataSources false def									/NComponents 1 def									/Operator /image def									invert_image_samples						 			1 AGMCORE_&setgray									currentdict imageormask_sys								}{									currentoverprint not Operator/imagemask eq and{  			 							1 AGMCORE_&setgray  			 							currentdict imageormask_sys  			 						}{  			 							currentdict ignoreimagedata  			 						}ifelse								}ifelse							}{									MultipleDataSources NComponents AGMIMG_&colorimage													}ifelse						}{							true NComponents colorimage						}ifelse					}{						Operator /image eq{							AGMCORE_host_sep{								/DoImage true def								HostSepColorImage{									invert_image_samples								}{									AGMCORE_black_plate not Operator/imagemask ne and{										/DoImage false def										currentdict ignoreimagedata					 				}if								}ifelse						 		1 AGMCORE_&setgray								DoImage									{currentdict imageormask_sys} if							}{								use_mask {									level3 {process_mask_L3 image}{masked_image_simulation}ifelse								}{									image								}ifelse							}ifelse						}{							Operator/knockout eq{								pop pop pop pop pop								currentcolorspace overprint_plate not{									knockout_unitsq								}if							}if						}ifelse					}ifelse				}ifelse			}ifelse			cleartomark restore		}ifelse	end}def/sep_imageormask{ 	/sep_colorspace_dict AGMCORE_gget begin	/MappedCSA CSA map_csa def	begin	SkipImageProc {		currentdict consumeimagedata	}	{		save mark 		AGMCORE_avoid_L2_sep_space{			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def		}if 		AGMIMG_ccimage_exists 		MappedCSA 0 get /DeviceCMYK eq and		currentdict/Components known and 		Name () ne and 		Name (All) ne and 		Operator /image eq and		AGMCORE_producing_seps not and		level2 not and		{			Width Height BitsPerComponent ImageMatrix 			[			/DataSource load /exec cvx			{				0 1 2 index length 1 sub{					1 index exch					2 copy get 255 xor put				}for			} /exec cvx			] cvx bind			MappedCSA 0 get /DeviceCMYK eq{				Components aload pop			}{				0 0 0 Components aload pop 1 exch sub			}ifelse			Name findcmykcustomcolor			customcolorimage		}{			AGMCORE_producing_seps not{				level2{					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt						/sep_tint AGMCORE_gget setcolor					}if					currentdict imageormask				}{ 					currentdict					Operator /imagemask eq{						imageormask					}{						sep_imageormask_lev1					}ifelse				}ifelse 			}{				AGMCORE_host_sep{					Operator/knockout eq{						currentdict/ImageMatrix get concat						knockout_unitsq					}{						currentgray 1 ne{ 							AGMCORE_is_cmyk_sep Name (All) ne and{ 								level2{	 								[ /Separation Name [/DeviceGray]	 								{ 	 									sep_colorspace_proc AGMCORE_get_ink_data										1 exch sub	 								} bind									] AGMCORE_&setcolorspace									/sep_tint AGMCORE_gget AGMCORE_&setcolor 									currentdict imageormask_sys	 							}{	 								currentdict									Operator /imagemask eq{										imageormask_sys									}{										sep_image_lev1_sep									}ifelse	 							}ifelse 							}{ 								Operator/imagemask ne{									invert_image_samples 								}if		 						currentdict imageormask_sys 							}ifelse 						}{ 							currentoverprint not Name (All) eq or Operator/imagemask eq and{								currentdict imageormask_sys 								}{								currentoverprint not									{ 									gsave  									knockout_unitsq 									grestore									}if								currentdict consumeimagedata 		 					}ifelse 						}ifelse		 			}ifelse 				}{					currentcolorspace 0 get /Separation ne{						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt						/sep_tint AGMCORE_gget setcolor					}if					currentoverprint 					MappedCSA 0 get /DeviceCMYK eq and 					Name inRip_spot_has_ink not and 					Name (All) ne and {						imageormask_l2_overprint					}{						currentdict imageormask 					}ifelse				}ifelse			}ifelse		}ifelse		cleartomark restore	}ifelse	end	end}def/decode_image_sample{	4 1 roll exch dup 5 1 roll	sub 2 4 -1 roll exp 1 sub div mul add} bdf/colorSpaceElemCnt{	currentcolorspace 0 get dup /DeviceCMYK eq {		pop 4	}	{		/DeviceRGB eq {			pop 3		}{			1		} ifelse	} ifelse} bdf/devn_sep_datasource{	1 dict begin	/dataSource xdf	[		0 1 dataSource length 1 sub {			dup currentdict /dataSource get /exch cvx /get cvx /exec cvx			/exch cvx names_index /ne cvx [ /pop cvx ] cvx /if cvx		} for	] cvx bind	end} bdf		/devn_alt_datasource{	11 dict begin	/srcDataStrs xdf	/dstDataStr xdf	/convProc xdf	/origcolorSpaceElemCnt xdf	/origMultipleDataSources xdf	/origBitsPerComponent xdf	/origDecode xdf	/origDataSource xdf	/dsCnt origMultipleDataSources {origDataSource length}{1}ifelse def	/samplesNeedDecoding		0 0 1 origDecode length 1 sub {			origDecode exch get add		} for		origDecode length 2 div div		dup 1 eq {			/decodeDivisor 2 origBitsPerComponent exp 1 sub def		} if		2 origBitsPerComponent exp 1 sub ne	def	[		0 1 dsCnt 1 sub [			currentdict /origMultipleDataSources get {				dup currentdict /origDataSource get exch get dup type			}{				currentdict /origDataSource get dup type			} ifelse			dup /filetype eq {				pop currentdict /srcDataStrs get 3 -1 /roll cvx /get cvx /readstring cvx /pop cvx			}{				/stringtype ne {					/exec cvx				} if				currentdict /srcDataStrs get /exch cvx 3 -1 /roll cvx /xpt cvx			} ifelse		] cvx /for cvx		currentdict /srcDataStrs get 0 /get cvx /length cvx 0 /ne cvx [			0 1 Width 1 sub [				Adobe_AGM_Utils /AGMUTIL_ndx /xddf cvx				currentdict /origMultipleDataSources get {					0 1 dsCnt 1 sub [						Adobe_AGM_Utils /AGMUTIL_ndx1 /xddf cvx						currentdict /srcDataStrs get /AGMUTIL_ndx1 /load cvx /get cvx /AGMUTIL_ndx /load cvx /get cvx						samplesNeedDecoding {							currentdict /decodeDivisor known {								currentdict /decodeDivisor get /div cvx							}{								currentdict /origDecode get /AGMUTIL_ndx1 /load cvx 2 /mul cvx 2 /getinterval cvx /aload cvx /pop cvxs								BitsPerComponent /decode_image_sample load /exec cvx							} ifelse						} if					] cvx /for cvx				}{					Adobe_AGM_Utils /AGMUTIL_ndx1 0 /ddf cvx					currentdict /srcDataStrs get 0 /get cvx /AGMUTIL_ndx /load cvx							currentdict /origDecode get length 2 idiv dup 3 1 /roll cvx /mul cvx /exch cvx /getinterval cvx 					[						samplesNeedDecoding {							currentdict /decodeDivisor known {								currentdict /decodeDivisor get /div cvx							}{								currentdict /origDecode get /AGMUTIL_ndx1 /load cvx 2 /mul cvx 2 /getinterval cvx /aload cvx /pop cvx								BitsPerComponent /decode_image_sample load /exec cvx								Adobe_AGM_Utils /AGMUTIL_ndx1 /AGMUTIL_ndx1 /load cvx 1 /add cvx /ddf cvx							} ifelse						} if					] cvx /forall cvx				} ifelse				currentdict /convProc get /exec cvx				currentdict /origcolorSpaceElemCnt get 1 sub -1 0 [					currentdict /dstDataStr get 3 1 /roll cvx /AGMUTIL_ndx /load cvx currentdict /origcolorSpaceElemCnt get /mul cvx /add cvx /exch cvx					currentdict /convProc get /filter_indexed_devn load ne {						255 /mul cvx /cvi cvx 					} if					/put cvx 				] cvx /for cvx			] cvx /for cvx			currentdict /dstDataStr get		] cvx /if cvx	] cvx bind	end} bdf/devn_imageormask{ 	/devicen_colorspace_dict AGMCORE_gget begin	/MappedCSA CSA map_csa def	2 dict begin	dup dup	/dstDataStr exch /Width get colorSpaceElemCnt mul string def	/srcDataStrs [ 3 -1 roll begin		currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse		{			Width Decode length 2 div mul cvi string		} repeat		end ] def	begin	SkipImageProc {		currentdict consumeimagedata	}	{		save mark 		AGMCORE_producing_seps not {			level3 not {				Operator /imagemask ne {					/DataSource [						DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse						colorSpaceElemCnt /devicen_colorspace_dict AGMCORE_gget /TintTransform get 						dstDataStr srcDataStrs devn_alt_datasource /exec cvx						] cvx 0 () /SubFileDecode filter def					/MultipleDataSources false def					/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def				} if			}if			currentdict imageormask 		}{			AGMCORE_host_sep{				Names convert_to_process {					CSA map_csa 0 get /DeviceCMYK eq {						/DataSource							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 							[							DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse							4 /devicen_colorspace_dict AGMCORE_gget /TintTransform get 							dstDataStr srcDataStrs devn_alt_datasource /exec cvx							] cvx						filter_cmyk 0 () /SubFileDecode filter def						/MultipleDataSources false def						/Decode [1 0] def						/DeviceGray setcolorspace			 			currentdict imageormask_sys 					}{						AGMCORE_report_unsupported_color_space						AGMCORE_black_plate {							/DataSource [								DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse								CSA map_csa 0 get /DeviceRGB eq{3}{1}ifelse /devicen_colorspace_dict AGMCORE_gget /TintTransform get								dstDataStr srcDataStrs devn_alt_datasource /exec cvx								] cvx 0 () /SubFileDecode filter def							/MultipleDataSources false def							/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def				 			currentdict imageormask_sys				 		}						{	 						gsave 	 						knockout_unitsq	 						grestore							currentdict consumeimagedata 						} ifelse 					} ifelse				}				{						/devicen_colorspace_dict AGMCORE_gget /names_index known {	 					Operator/imagemask ne{	 						MultipleDataSources {		 						/DataSource [ DataSource devn_sep_datasource /exec cvx ] cvx def								/MultipleDataSources false def	 						}{								/DataSource /DataSource load dstDataStr srcDataStrs 0 get filter_devn def	 						} ifelse							invert_image_samples	 					} if			 			currentdict imageormask_sys	 				}{	 					currentoverprint not Operator/imagemask eq and{							currentdict imageormask_sys 							}{							currentoverprint not								{	 							gsave 	 							knockout_unitsq	 							grestore								}if							currentdict consumeimagedata 			 			}ifelse	 				}ifelse	 			}ifelse 			}{				currentdict imageormask			}ifelse		}ifelse		cleartomark restore	}ifelse	end	end	end}def/imageormask_l2_overprint{	currentdict	currentcmykcolor add add add 0 eq{		currentdict consumeimagedata	}{		level3{ 						currentcmykcolor 			/AGMIMG_k xdf 			/AGMIMG_y xdf 			/AGMIMG_m xdf 			/AGMIMG_c xdf			Operator/imagemask eq{				[/DeviceN [				AGMIMG_c 0 ne {/Cyan} if				AGMIMG_m 0 ne {/Magenta} if				AGMIMG_y 0 ne {/Yellow} if				AGMIMG_k 0 ne {/Black} if				] /DeviceCMYK {}] setcolorspace				AGMIMG_c 0 ne {AGMIMG_c} if				AGMIMG_m 0 ne {AGMIMG_m} if				AGMIMG_y 0 ne {AGMIMG_y} if				AGMIMG_k 0 ne {AGMIMG_k} if				setcolor						}{					/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def				[/Indexed 									[						/DeviceN [							AGMIMG_c 0 ne {/Cyan} if							AGMIMG_m 0 ne {/Magenta} if							AGMIMG_y 0 ne {/Yellow} if							AGMIMG_k 0 ne {/Black} if						] 						/DeviceCMYK {							AGMIMG_k 0 eq {0} if							AGMIMG_y 0 eq {0 exch} if							AGMIMG_m 0 eq {0 3 1 roll} if							AGMIMG_c 0 eq {0 4 1 roll} if												}					]					255					{						255 div 						mark exch						dup	dup dup						AGMIMG_k 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_y 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_m 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_c 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop									counttomark 1 roll						}{							pop						}ifelse						counttomark 1 add -1 roll pop					}				] setcolorspace			}ifelse			imageormask_sys		}{	write_image_file{		currentcmykcolor		0 ne{			[/Separation /Black /DeviceGray {}] setcolorspace			gsave			/Black			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Yellow /DeviceGray {}] setcolorspace			gsave			/Yellow			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Magenta /DeviceGray {}] setcolorspace			gsave			/Magenta			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Cyan /DeviceGray {}] setcolorspace			gsave			/Cyan 			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		} if				close_image_file			}{				imageormask			}ifelse		}ifelse	}ifelse} def/indexed_imageormask{	begin		save mark  		currentdict 		AGMCORE_host_sep{			Operator/knockout eq{				/indexed_colorspace_dict AGMCORE_gget dup /CSA known {					/CSA get map_csa				}{					/CSD get get_csd /Names get				} ifelse				overprint_plate not{					knockout_unitsq				}if			}{				Indexed_DeviceN {					/devicen_colorspace_dict AGMCORE_gget /names_index known {			 			indexed_image_lev2_sep					}{						currentoverprint not{							knockout_unitsq			 			}if			 			currentdict consumeimagedata					} ifelse				}{		 			AGMCORE_is_cmyk_sep{						Operator /imagemask eq{							imageormask_sys						}{							level2{								indexed_image_lev2_sep							}{								indexed_image_lev1_sep							}ifelse						}ifelse					}{						currentoverprint not{							knockout_unitsq			 			}if			 			currentdict consumeimagedata					}ifelse				}ifelse			}ifelse 		}{			level2{				Indexed_DeviceN {					/indexed_colorspace_dict AGMCORE_gget begin					CSD get_csd begin				}{					/indexed_colorspace_dict AGMCORE_gget begin					CSA map_csa 0 get /DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and {						[/Indexed [/DeviceN [/Cyan /Magenta /Yellow /Black] /DeviceCMYK {}] HiVal Lookup]						setcolorspace					} if					end				} ifelse				imageormask				Indexed_DeviceN {					end					end				} if			}{ 				Operator /imagemask eq{					imageormask				}{					indexed_imageormask_lev1				}ifelse			}ifelse 		}ifelse		cleartomark restore	end}def/indexed_image_lev2_sep{	/indexed_colorspace_dict AGMCORE_gget begin	begin		Indexed_DeviceN not {			currentcolorspace 			dup 1 /DeviceGray put			dup 3			currentcolorspace 2 get 1 add string			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub			{			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put			}for 			put	setcolorspace		} if		currentdict 		Operator /imagemask eq{			AGMIMG_&imagemask		}{			use_mask {				level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse			}{				AGMIMG_&image			}ifelse		}ifelse	end end}def  /OPIimage  {  	dup type /dicttype ne{  		10 dict begin  			/DataSource xdf  			/ImageMatrix xdf  			/BitsPerComponent xdf  			/Height xdf  			/Width xdf  			/ImageType 1 def  			/Decode [0 1 def]  			currentdict  		end  	}if  	dup begin  		/NComponents 1 cdndf  		/MultipleDataSources false cdndf  		/SkipImageProc {false} cdndf  		/HostSepColorImage false cdndf  		/Decode [  				0   				currentcolorspace 0 get /Indexed eq{  					2 BitsPerComponent exp 1 sub  				}{  					1  				}ifelse  		] cdndf  		/Operator /image cdndf  	end  	/sep_colorspace_dict AGMCORE_gget null eq{  		imageormask  	}{  		gsave  		dup begin invert_image_samples end  		sep_imageormask  		grestore  	}ifelse  }def/cachemask_level2{	3 dict begin	/LZWEncode filter /WriteFilter xdf	/readBuffer 256 string def	/ReadFilter		currentfile		0 (%EndMask) /SubFileDecode filter		/ASCII85Decode filter		/RunLengthDecode filter	def	{		ReadFilter readBuffer readstring exch		WriteFilter exch writestring		not {exit} if	}loop	WriteFilter closefile	end}def/cachemask_level3{	currentfile	<<		/Filter [ /SubFileDecode /ASCII85Decode /RunLengthDecode ]		/DecodeParms [ << /EODCount 0 /EODString (%EndMask) >> null null ]		/Intent 1	>>	/ReusableStreamDecode filter}def/spot_alias{	/mapto_sep_imageormask 	{		dup type /dicttype ne{			12 dict begin				/ImageType 1 def				/DataSource xdf				/ImageMatrix xdf				/BitsPerComponent xdf				/Height xdf				/Width xdf				/MultipleDataSources false def		}{			begin		}ifelse				/Decode [/customcolor_tint AGMCORE_gget 0] def				/Operator /image def				/HostSepColorImage false def				/SkipImageProc {false} def				currentdict 			end		sep_imageormask	}bdf	/customcolorimage	{		Adobe_AGM_Image/AGMIMG_colorAry xddf		/customcolor_tint AGMCORE_gget		bdict			/Name AGMIMG_colorAry 4 get			/CSA [ /DeviceCMYK ] 			/TintMethod /Subtractive			/TintProc null			/MappedCSA null			/NComponents 4 			/Components [ AGMIMG_colorAry aload pop pop ] 		edict		setsepcolorspace		mapto_sep_imageormask	}ndf	Adobe_AGM_Image/AGMIMG_&customcolorimage /customcolorimage load put	/customcolorimage	{		Adobe_AGM_Image/AGMIMG_override false put		dup 4 get map_alias{			/customcolor_tint AGMCORE_gget exch setsepcolorspace			pop			mapto_sep_imageormask		}{			AGMIMG_&customcolorimage		}ifelse				}bdf}def/snap_to_device{	6 dict begin	matrix currentmatrix	dup 0 get 0 eq 1 index 3 get 0 eq and	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop	{		1 1 dtransform 0 gt exch 0 gt /AGMIMG_xSign? exch def /AGMIMG_ySign? exch def		0 0 transform		AGMIMG_ySign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch		AGMIMG_xSign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch		itransform /AGMIMG_llY exch def /AGMIMG_llX exch def		1 1 transform		AGMIMG_ySign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch		AGMIMG_xSign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch		itransform /AGMIMG_urY exch def /AGMIMG_urX exch def					[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub  AGMIMG_llX AGMIMG_llY] concat	}{	}ifelse	end} deflevel2 not{	/colorbuf	{		0 1 2 index length 1 sub{			dup 2 index exch get 			255 exch sub 			2 index 			3 1 roll 			put		}for	}def	/tint_image_to_color	{		begin			Width Height BitsPerComponent ImageMatrix 			/DataSource load		end		Adobe_AGM_Image begin			/AGMIMG_mbuf 0 string def			/AGMIMG_ybuf 0 string def			/AGMIMG_kbuf 0 string def			{				colorbuf dup length AGMIMG_mbuf length ne					{					dup length dup dup					/AGMIMG_mbuf exch string def					/AGMIMG_ybuf exch string def					/AGMIMG_kbuf exch string def					} if				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop			}			addprocs			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf} true 4 colorimage			end	} def				/sep_imageormask_lev1	{		begin			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{				{					255 mul round cvi GrayLookup exch get				} currenttransfer addprocs settransfer				currentdict imageormask			}{				/sep_colorspace_dict AGMCORE_gget/Components known{					MappedCSA 0 get /DeviceCMYK eq{						Components aload pop					}{						0 0 0 Components aload pop 1 exch sub					}ifelse					Adobe_AGM_Image/AGMIMG_k xddf 					Adobe_AGM_Image/AGMIMG_y xddf 					Adobe_AGM_Image/AGMIMG_m xddf 					Adobe_AGM_Image/AGMIMG_c xddf 					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{						{AGMIMG_k mul 1 exch sub} currenttransfer addprocs settransfer						currentdict imageormask					}{ 						currentcolortransfer						{AGMIMG_k mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_y mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_m mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_c mul 1 exch sub} exch addprocs 4 1 roll						setcolortransfer						currentdict tint_image_to_color					}ifelse				}{					MappedCSA 0 get /DeviceGray eq {						{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer						currentdict imageormask					}{						MappedCSA 0 get /DeviceCMYK eq {							currentcolortransfer							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll							setcolortransfer 							currentdict tint_image_to_color						}{ 							currentcolortransfer							{pop 1} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll							setcolortransfer 							currentdict tint_image_to_color						}ifelse					}ifelse				}ifelse			}ifelse		end	}def	/sep_image_lev1_sep	{		begin			/sep_colorspace_dict AGMCORE_gget/Components known{				Components aload pop				Adobe_AGM_Image/AGMIMG_k xddf 				Adobe_AGM_Image/AGMIMG_y xddf 				Adobe_AGM_Image/AGMIMG_m xddf 				Adobe_AGM_Image/AGMIMG_c xddf 				{AGMIMG_c mul 1 exch sub}				{AGMIMG_m mul 1 exch sub}				{AGMIMG_y mul 1 exch sub}				{AGMIMG_k mul 1 exch sub}			}{ 				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}			}ifelse			AGMCORE_get_ink_data currenttransfer addprocs settransfer			currentdict imageormask_sys		end	}def	/indexed_imageormask_lev1	{		/indexed_colorspace_dict AGMCORE_gget begin		begin			currentdict			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{				{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer				imageormask			}{				MappedCSA 0 get /DeviceGray eq {					{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer					imageormask				}{					MappedCSA 0 get /DeviceCMYK eq {						currentcolortransfer						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						setcolortransfer 						tint_image_to_color					}{ 						currentcolortransfer						{pop 1} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div} exch addprocs 4 1 roll						setcolortransfer 						tint_image_to_color					}ifelse				}ifelse			}ifelse		end end	}def	/indexed_image_lev1_sep	{		/indexed_colorspace_dict AGMCORE_gget begin		begin			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}			AGMCORE_get_ink_data currenttransfer addprocs settransfer			currentdict imageormask_sys		end end	}def}ifendsystemdict /setpacking known{	setpacking} if%%EndResourcecurrentdict Adobe_AGM_Utils eq {end} if%%EndProlog%%BeginSetupAdobe_AGM_Utils begin2 2010 Adobe_AGM_Core/doc_setup get execAdobe_CoolType_Core/doc_setup get execAdobe_AGM_Image/doc_setup get execcurrentdict Adobe_AGM_Utils eq {end} if%%EndSetup%%Page: (Ford Free Sunday logoSmall [Con.eps) 1%%EndPageComments%%BeginPageSetup/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?><x:xmpmeta xmlns:x='adobe:ns:meta/' x:xmptk='XMP toolkit 3.0-29, framework 1.6'>
<rdf:RDF xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#' xmlns:iX='http://ns.adobe.com/iX/1.0/'>

 <rdf:Description rdf:about=''
  xmlns:pdf='http://ns.adobe.com/pdf/1.3/'>
 </rdf:Description>

 <rdf:Description rdf:about=''
  xmlns:tiff='http://ns.adobe.com/tiff/1.0/'>
 </rdf:Description>

 <rdf:Description rdf:about=''
  xmlns:xap='http://ns.adobe.com/xap/1.0/'
  xmlns:xapGImg='http://ns.adobe.com/xap/1.0/g/img/'>
  <xap:CreateDate>2004-05-18T21:15:45Z</xap:CreateDate>
  <xap:ModifyDate>2004-05-18T21:27:39Z</xap:ModifyDate>
  <xap:CreatorTool>Illustrator</xap:CreatorTool>
  <xap:Thumbnails>
   <rdf:Alt>
    <rdf:li rdf:parseType='Resource'>
     <xapGImg:format>JPEG</xapGImg:format>
     <xapGImg:width>176</xapGImg:width>
     <xapGImg:height>256</xapGImg:height>
     <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAACwAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq+f/APnM17y2&#xA;/L/RdQtJ3t5odXSISRMyOBLbTt9pSNv3eKvki28+eeLUAW3mLU4AG5AR3lwnxePwuN9sVTOD84vz&#xA;YhBCecNZPLrzvriTp4c3amKph/yv785P+psvv+CX/mnFXf8AK/vzk/6my+/4Jf8AmnFXf8r+/OT/&#xA;AKmy+/4Jf+acVd/yv785P+psvv8Agl/5pxVdF/zkF+c0bh1813pK9A3puPpVkIOKon/oZD87f+pp&#xA;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&#xA;p33xV//Z</xapGImg:image>
    </rdf:li>
   </rdf:Alt>
  </xap:Thumbnails>
 </rdf:Description>

 <rdf:Description rdf:about=''
  xmlns:dc='http://purl.org/dc/elements/1.1/'>
  <dc:format>application/postscript</dc:format>
 </rdf:Description>

</rdf:RDF>
</x:xmpmeta>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                <?xpacket end='w'?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5Adobe_AGM_Utils beginAdobe_AGM_Core/page_setup get execAdobe_CoolType_Core/page_setup get execAdobe_AGM_Image/page_setup get exec%%EndPageSetupAdobe_AGM_Core/AGMCORE_save save ddf1 -1 scale 0 -115.89 translate[1 0 0 1 0 0 ]  concat% page clipgsavenewpathgsave % PSGState0 0 mo0 115.89 li78.6597 115.89 li78.6597 0 liclp[1 0 0 1 0 0 ] concat64.813 100.615 mo54.2525 100.91 li43.9126 100.586 li33.6651 101.059 li23.2842 99.8316 li13.4258 100.299 li13.7989 83.6519 li14.7813 68.4371 li14.1866 57.7569 li14.4786 47.2061 li13.7891 35.1426 li14.4815 23.7867 li13.9043 11.918 li12.9883 0.182129 li23.6563 0.789063 li33.9942 0.707032 li44.2466 0.88086 li54.6255 0 li65.0064 0.123047 li63.9693 12.3917 li63.9966 24.4214 li65.2154 36.4698 li64.2095 48.4795 li64.9712 60.3921 li64.6763 72.191 li63.6002 81.3941 li64.813 100.615 lifalse sop/0 [/DeviceCMYK] add_csa0 0 0 1 cmykf50.148 50.357 mo42.3199 47.3062 33.9302 51.2466 26.0738 49.5201 cv26.1216 49.8838 26.169 50.2476 26.2164 50.6114 cv29.9556 48.6446 33.8604 46.9449 37.6587 45.0904 cv42.4654 42.7442 49.4576 49.4795 54.2867 50.4947 cv55.2447 50.6958 55.6675 49.5347 54.9244 48.9815 cv52.2632 47.001 48.6109 45.8873 45.5894 44.5484 cv43.0699 43.4322 40.8824 42.1143 38.128 42.8619 cv33.8414 44.025 29.5152 47.4664 25.6138 49.5801 cv25.1744 49.8179 25.2486 50.5665 25.7564 50.6714 cv28.7549 51.2925 32.1211 50.731 35.1358 50.4747 cv40.1929 50.0445 45.1197 50.6168 50.1392 50.4239 cv50.1792 50.4224 50.1832 50.3707 50.148 50.357 cv0 0 0 0.25 cmykf53.3785 52.1036 mo51.8668 51.296 49.8785 51.483 48.2095 51.3668 cv44.1392 51.0826 40.1539 51.0567 36.0728 51.1583 cv32.7408 51.2408 29.2901 51.0982 25.9727 51.4927 cv25.5904 51.5386 25.3482 52.065 25.7584 52.2833 cv27.731 53.3321 31.1617 52.5357 33.2334 52.4683 cv37.439 52.3311 41.649 52.1246 45.8541 52.3355 cv48.2144 52.4537 51.0611 53.1558 53.3414 52.3912 cv53.4634 52.3501 53.5054 52.1714 53.3785 52.1036 cvf51.3824 53.6783 mo50.6109 55.6856 50.9126 57.8658 51.0611 59.9752 cv51.233 62.4273 51.2584 64.8267 51.0435 67.2769 cv50.9683 68.1304 52.4234 68.3316 52.5435 67.48 cv52.8492 65.314 52.7886 63.1958 52.6226 61.0171 cv52.439 58.6138 52.4322 55.9668 51.646 53.6783 cv51.6001 53.5445 51.4302 53.5518 51.3824 53.6783 cvf46.7916 53.6226 mo45.7906 55.1392 46.1451 57.2901 46.2447 59.022 cv46.4087 61.8531 45.9742 64.5992 45.9166 67.4175 cv45.8931 68.5494 47.4966 68.4791 47.6275 67.4175 cv48.1802 62.9195 48.6216 58.0464 47.1255 53.6666 cv47.0738 53.5137 46.8814 53.4874 46.7916 53.6226 cvf41.9117 53.4781 mo41.1334 55.1348 41.3912 56.9683 41.4468 58.772 cv41.5328 61.5894 41.524 64.4107 41.5142 67.23 cv41.5093 68.3179 43.1763 68.315 43.1978 67.23 cv43.2496 64.7632 43.3013 62.2974 43.2623 59.8306 cv43.23 57.7554 43.3453 55.2095 42.0816 53.4781 cv42.0425 53.4244 41.9468 53.4048 41.9117 53.4781 cvf36.9781 53.5445 mo36.1236 55.358 36.4234 57.5044 36.397 59.4732 cv36.3628 62.0884 35.9468 64.7867 36.3628 67.3746 cv36.5308 68.4156 38.0723 68.0943 38.1202 67.1363 cv38.2476 64.5865 38.3497 62.0259 38.2662 59.4732 cv38.2017 57.5225 38.3101 55.2349 37.2369 53.5445 cv37.1812 53.4566 37.0284 53.4371 36.9781 53.5445 cvf32.2388 53.4361 mo31.6187 55.6011 31.8023 58.0269 31.6451 60.2671 cv31.4791 62.6304 31.3848 64.9752 31.8292 67.3101 cv32.0084 68.2505 33.4522 68.0015 33.4581 67.0894 cv33.4751 64.4859 33.6031 61.8951 33.669 59.2935 cv33.7203 57.2794 33.712 55.0992 32.5376 53.397 cv32.459 53.2832 32.2798 53.293 32.2388 53.4361 cvf27.4644 53.2701 mo26.6148 55.0816 26.7652 57.2837 26.648 59.2544 cv26.4786 62.1011 26.6036 64.7466 27.1768 67.5425 cv27.3809 68.5367 28.7037 68.1763 28.8057 67.3218 cv29.1187 64.7046 28.7618 61.9087 28.8238 59.2544 cv28.8697 57.271 28.8116 54.8624 27.5362 53.2608 cv27.5186 53.2388 27.4761 53.2452 27.4644 53.2701 cvf55.9097 68.4283 mo52.48 66.9205 47.4791 67.9214 43.7789 67.814 cv36.8096 67.6109 29.6797 67.6226 22.7403 68.3121 cv22.0445 68.3814 21.7681 69.4732 22.5626 69.6246 cv28.7754 70.8033 35.5503 69.5621 41.8716 69.6734 cv45.8023 69.7427 52.4664 71.1558 55.9097 68.8873 cv56.0591 68.7886 56.106 68.5142 55.9097 68.4283 cvf56.8072 71.233 mo52.6685 69.4458 46.4986 70.1148 42.0572 70.1119 cv35.3892 70.107 28.2369 70.1334 21.67 71.3248 cv20.9034 71.4634 21.1504 72.5591 21.8438 72.608 cv28.4937 73.0796 35.377 71.9419 42.0572 71.8374 cv46.3121 71.771 53.0289 73.7906 56.8072 71.5552 cv56.9175 71.4908 56.941 71.2906 56.8072 71.233 cvf57.3716 73.6919 mo51.6763 72.4244 45.2828 72.7164 39.4703 72.7349 cv33.3711 72.7544 26.9771 72.8492 20.9649 73.9234 cv20.2427 74.0523 20.4424 75.1529 21.1329 75.1646 cv27.2222 75.272 33.3682 74.4439 39.4703 74.3169 cv45.2593 74.1968 51.7076 75.6011 57.3716 74.4126 cv57.731 74.3365 57.7261 73.771 57.3716 73.6919 cvf37.9786 66.8199 mo37.8243 66.8199 37.7735 66.7847 37.7002 66.6832 cv36.584 65.1753 36.9502 62.1636 34.8887 61.2281 cv34.5333 61.0621 34.3301 61.0113 34.0655 60.8472 cv34.42 59.9507 34.6602 58.5938 33.8399 57.7588 cv33.4219 57.4053 32.5596 57.5948 32.1055 57.8096 cv31.8135 57.9366 31.7383 57.9864 31.5606 58.0743 cv31.4981 58.1788 31.3555 58.253 31.3555 58.4307 cv31.5606 60.7457 li30.6876 60.8726 29.8262 61.1382 29.1934 61.8472 cv28.1934 63.1402 27.3184 64.8082 26.9161 66.3902 cv27.0401 66.5289 27.129 66.6695 27.129 66.8199 cv26.6602 67.6832 li26.6602 67.9234 26.5596 68.1617 26.7403 68.3785 cv26.8887 68.48 27.1934 68.4918 27.4454 68.4546 cv27.9786 67.6832 li28.0411 67.5933 28.2442 67.5933 28.5352 67.5933 cv29.6876 66.5679 li30.129 68.3785 li30.17 68.4546 30.3829 68.48 30.459 68.5933 cv30.1172 70.9468 30.129 73.3921 30.75 75.7828 cv30.75 76.0601 30.3321 75.9449 30.2188 76.314 cv30.5469 76.7945 31.459 76.605 32.1055 76.566 cv32.6465 74.441 li32.8624 74.441 32.6465 74.2769 32.8887 74.441 cv33.1817 76.2007 li35.1299 76.2769 li35.2188 76.2769 35.2188 76.2007 35.2813 76.0757 cv35.2813 75.9449 35.2188 75.8218 35.1299 75.7828 cv34.6368 75.605 li34.7754 73.1617 35.6465 70.4937 34.8887 67.9234 cv35.0762 67.3902 34.9903 66.8863 35.2813 66.48 cv35.8653 66.3902 36.3301 66.7847 36.7383 67.1753 cv36.8126 67.3531 36.8126 67.4292 37.0137 67.5425 cv37.2735 67.6128 37.5655 67.6695 37.8448 67.6578 cv0 0 0 0 cmykf1.7766 lw1 lc1 lj4 ml[] 0 dshtrue sadj37.9786 66.8199 mo37.8243 66.8199 37.7735 66.7847 37.7002 66.6832 cv36.584 65.1753 36.9502 62.1636 34.8887 61.2281 cv34.5333 61.0621 34.3301 61.0113 34.0655 60.8472 cv34.42 59.9507 34.6602 58.5938 33.8399 57.7588 cv33.4219 57.4053 32.5596 57.5948 32.1055 57.8096 cv31.8135 57.9366 31.7383 57.9864 31.5606 58.0743 cv31.4981 58.1788 31.3555 58.253 31.3555 58.4307 cv31.5606 60.7457 li30.6876 60.8726 29.8262 61.1382 29.1934 61.8472 cv28.1934 63.1402 27.3184 64.8082 26.9161 66.3902 cv27.0401 66.5289 27.129 66.6695 27.129 66.8199 cv26.6602 67.6832 li26.6602 67.9234 26.5596 68.1617 26.7403 68.3785 cv26.8887 68.48 27.1934 68.4918 27.4454 68.4546 cv27.9786 67.6832 li28.0411 67.5933 28.2442 67.5933 28.5352 67.5933 cv29.6876 66.5679 li30.129 68.3785 li30.17 68.4546 30.3829 68.48 30.459 68.5933 cv30.1172 70.9468 30.129 73.3921 30.75 75.7828 cv30.75 76.0601 30.3321 75.9449 30.2188 76.314 cv30.5469 76.7945 31.459 76.605 32.1055 76.566 cv32.6465 74.441 li32.8624 74.441 32.6465 74.2769 32.8887 74.441 cv33.1817 76.2007 li35.1299 76.2769 li35.2188 76.2769 35.2188 76.2007 35.2813 76.0757 cv35.2813 75.9449 35.2188 75.8218 35.1299 75.7828 cv34.6368 75.605 li34.7754 73.1617 35.6465 70.4937 34.8887 67.9234 cv35.0762 67.3902 34.9903 66.8863 35.2813 66.48 cv35.8653 66.3902 36.3301 66.7847 36.7383 67.1753 cv36.8126 67.3531 36.8126 67.4292 37.0137 67.5425 cv37.2735 67.6128 37.5655 67.6695 37.8448 67.6578 cv@37.752 67.5425 mo37.9864 68.4292 li37.8145 69.6382 39.5552 70.4292 38.9615 71.8082 cv39.6021 72.6109 38.2725 73.7203 39.0611 74.3374 cv38.837 74.9664 38.9029 75.8179 38.2227 76.1636 cv38.0596 76.15 37.9766 76.2261 37.8887 76.3472 cv37.8887 76.3589 37.8887 76.4449 37.9024 76.482 cv38.2227 76.7046 38.7403 76.7046 39.1724 76.6324 cv39.9361 74.7437 li40.108 74.6675 40.5044 74.4605 40.7759 74.523 cv40.5044 76.0894 li40.5044 76.1636 40.5044 76.2867 40.6021 76.3472 cv41.8111 76.4097 li41.9849 76.4097 42.0201 76.2261 41.9712 76.0894 cv41.9205 76.0035 41.7388 76.0523 41.565 76.0132 cv41.147 75.732 41.8345 75.2144 41.6626 74.7437 cv41.6626 74.6207 41.7603 74.6089 41.9361 74.5347 cv42.858 73.7691 42.0708 72.5601 42.3033 71.5992 cv42.3638 70.6011 43.438 69.8257 42.9927 68.8238 cv43.6373 68.4664 43.6978 67.6265 43.9322 66.9878 cv43.9087 66.8511 43.8697 66.8062 43.858 66.7418 cv43.8091 66.7164 43.7466 66.691 43.6626 66.691 cv43.5884 66.691 43.5123 66.7164 43.4751 66.7886 cv43.0201 67.2457 43.0201 68.1226 42.3033 68.4292 cv41.8345 68.4292 li42.1314 67.7515 41.9849 66.9878 41.4771 66.5054 cv41.2427 66.4195 41.0845 66.3199 40.8873 66.2808 cv40.3052 66.3707 39.8248 66.5054 39.5806 66.9878 cv39.5552 67.6168 40.0455 68.0855 39.9869 68.6519 cv39.8365 68.6519 39.9869 68.775 39.8248 68.6773 cv39.0611 67.8882 li38.9615 67.8257 38.9029 67.8882 38.7618 67.8257 cv38.168 66.7437 li38.0684 66.6578 37.8711 66.6832 37.7002 66.6832 cv37.752 67.5425 lif37.752 67.5425 mo37.9864 68.4292 li37.8145 69.6382 39.5552 70.4292 38.9615 71.8082 cv39.6021 72.6109 38.2725 73.7203 39.0611 74.3374 cv38.837 74.9664 38.9029 75.8179 38.2227 76.1636 cv38.0596 76.15 37.9766 76.2261 37.8887 76.3472 cv37.8887 76.3589 37.8887 76.4449 37.9024 76.482 cv38.2227 76.7046 38.7403 76.7046 39.1724 76.6324 cv39.9361 74.7437 li40.108 74.6675 40.5044 74.4605 40.7759 74.523 cv40.5044 76.0894 li40.5044 76.1636 40.5044 76.2867 40.6021 76.3472 cv41.8111 76.4097 li41.9849 76.4097 42.0201 76.2261 41.9712 76.0894 cv41.9205 76.0035 41.7388 76.0523 41.565 76.0132 cv41.147 75.732 41.8345 75.2144 41.6626 74.7437 cv41.6626 74.6207 41.7603 74.6089 41.9361 74.5347 cv42.858 73.7691 42.0708 72.5601 42.3033 71.5992 cv42.3638 70.6011 43.438 69.8257 42.9927 68.8238 cv43.6373 68.4664 43.6978 67.6265 43.9322 66.9878 cv43.9087 66.8511 43.8697 66.8062 43.858 66.7418 cv43.8091 66.7164 43.7466 66.691 43.6626 66.691 cv43.5884 66.691 43.5123 66.7164 43.4751 66.7886 cv43.0201 67.2457 43.0201 68.1226 42.3033 68.4292 cv41.8345 68.4292 li42.1314 67.7515 41.9849 66.9878 41.4771 66.5054 cv41.2427 66.4195 41.0845 66.3199 40.8873 66.2808 cv40.3052 66.3707 39.8248 66.5054 39.5806 66.9878 cv39.5552 67.6168 40.0455 68.0855 39.9869 68.6519 cv39.8365 68.6519 39.9869 68.775 39.8248 68.6773 cv39.0611 67.8882 li38.9615 67.8257 38.9029 67.8882 38.7618 67.8257 cv38.168 66.7437 li38.0684 66.6578 37.8711 66.6832 37.7002 66.6832 cv37.752 67.5425 licp@37.9786 66.8199 mo37.8243 66.8199 37.7735 66.7847 37.7002 66.6832 cv36.584 65.1753 36.9502 62.1636 34.8887 61.2281 cv34.5333 61.0621 34.3301 61.0113 34.0655 60.8472 cv34.42 59.9507 34.6602 58.5938 33.8399 57.7588 cv33.4219 57.4053 32.5596 57.5948 32.1055 57.8096 cv31.8135 57.9366 31.7383 57.9864 31.5606 58.0743 cv31.4981 58.1788 31.3555 58.253 31.3555 58.4307 cv31.5606 60.7457 li30.6876 60.8726 29.8262 61.1382 29.1934 61.8472 cv28.1934 63.1402 27.3184 64.8082 26.9161 66.3902 cv27.0401 66.5289 27.129 66.6695 27.129 66.8199 cv26.6602 67.6832 li26.6602 67.9234 26.5596 68.1617 26.7403 68.3785 cv26.8887 68.48 27.1934 68.4918 27.4454 68.4546 cv27.9786 67.6832 li28.0411 67.5933 28.2442 67.5933 28.5352 67.5933 cv29.6876 66.5679 li30.129 68.3785 li30.17 68.4546 30.3829 68.48 30.459 68.5933 cv30.1172 70.9468 30.129 73.3921 30.75 75.7828 cv30.75 76.0601 30.3321 75.9449 30.2188 76.314 cv30.5469 76.7945 31.459 76.605 32.1055 76.566 cv32.6465 74.441 li32.8624 74.441 32.6465 74.2769 32.8887 74.441 cv33.1817 76.2007 li35.1299 76.2769 li35.2188 76.2769 35.2188 76.2007 35.2813 76.0757 cv35.2813 75.9449 35.2188 75.8218 35.1299 75.7828 cv34.6368 75.605 li34.7754 73.1617 35.6465 70.4937 34.8887 67.9234 cv35.0762 67.3902 34.9903 66.8863 35.2813 66.48 cv35.8653 66.3902 36.3301 66.7847 36.7383 67.1753 cv36.8126 67.3531 36.8126 67.4292 37.0137 67.5425 cv37.2735 67.6128 37.5655 67.6695 37.8448 67.6578 cv0 0 0 1 cmykf27.9024 66.1636 mo28.1172 66.5679 li29.9668 64.9214 li30.0547 64.8082 30.2696 64.8082 30.4844 64.8082 cv31.004 65.1539 li30.9649 67.896 li33.8399 67.771 li34.4825 64.2925 li34.4825 64.1636 34.711 63.9234 34.8887 63.8472 cv35.4092 64.0503 li36.001 65.4683 li35.8653 64.3921 35.4473 62.8707 34.6368 61.9996 cv33.6485 61.4058 32.459 61.8472 31.4083 61.6089 cv29.1319 62.4058 28.7383 64.3414 27.8282 66.1011 cv27.9024 66.1636 li0 0 0 0 cmykf31.1797 70.2398 mo31.5606 74.7574 li32.6231 70.7828 li32.7129 70.6812 32.9415 70.6812 33.1817 70.6812 cv33.3965 70.7203 33.5733 70.9234 33.712 71.15 cv33.8526 73.0718 li34.0655 68.7945 li31.6983 68.7945 li31.1797 70.2398 lif32.3575 58.7457 mo32.4854 60.5054 li32.5352 60.7066 32.7129 60.5816 32.8887 60.6343 cv33.4219 60.1636 33.5333 59.2789 33.3321 58.6695 cv33.2579 58.4688 33.2051 58.3663 33.129 58.3663 cv32.3575 58.5938 li32.3575 58.6578 32.3575 58.6695 32.3575 58.7457 cvf/0 <</Name (PANTONE 121 CVC)/1 [/DeviceCMYK] add_csa/CSA /1 /TintMethod /Subtractive/TintProc null/MappedCSA null/NComponents 4 /Components [ 0 0.09 0.69 0 ] >>add_csd1 /0 get_csdsepcs0 sep%%IncludeResource: font MIATRAJAN-Regular/BKDDAB+MIATRAJAN-Regular /MIATRAJAN-Regular findfont def/BKDDAB+MIATRAJAN-Regular*1 [68{/.notdef}repeat /D /.notdef /F 8{/.notdef}repeat /O 2{/.notdef}repeat /R 173{/.notdef}repeat] BKDDAB+MIATRAJAN-Regular nfntBKDDAB+MIATRAJAN-Regular*1  [13.0794 0 -0 -11.8904 0 0 ]mfnt sfnt19.499 15.2446 mov(F) sh26.6144 15.2446 mov-0.522995 0 (OR) ash48.1952 15.2446 mov(D) sh1 /0 get_csdsepcs0 sep%%IncludeResource: font MIATRAJAN-Regular/BKDDAB+MIATRAJAN-Regular*1 [68{/.notdef}repeat /D /E /F 8{/.notdef}repeat /O 2{/.notdef}repeat /R 173{/.notdef}repeat] BKDDAB+MIATRAJAN-Regular nfntBKDDAB+MIATRAJAN-Regular*1  [13.0794 0 -0 -11.8904 0 0 ]mfnt sfnt21.145 29.6372 mov(F) sh29.4374 29.6372 mov(R) sh40.8165 29.6372 mov(E) sh50.8876 29.6372 mov(E) sh1 /0 get_csdsepcs0 sep%%IncludeResource: font MIATRAJAN-Regular/BKDDAB+MIATRAJAN-Regular*1 [65{/.notdef}repeat /A 2{/.notdef}repeat /D /E /F 7{/.notdef}repeat /N /O 2{/.notdef}repeat /R /S /.notdef /U 3{/.notdef}repeat /Y 166{/.notdef}repeat] BKDDAB+MIATRAJAN-Regular nfntBKDDAB+MIATRAJAN-Regular*1  [7.39149 0 -0 -7.39149 0 0 ]mfnt sfnt19.0176 40.3099 mov0.443542 0 (SUND) ash44.3702 40.3099 mov(A) sh50.2094 40.3099 mov0.443497 0 (YS) ash17.188 32.7315 mo18.2994 32.9556 18.9034 33.1226 20.0708 32.9791 cv20.607 32.9131 26.9009 32.4039 26.7486 32.6221 cv26.6275 32.7955 26.8501 32.8668 26.9883 32.8643 cv28.4932 32.8355 37.0738 30.6607 37.4878 32.25 cv37.5254 32.3941 37.7725 32.3736 37.8765 32.3619 cv41.5806 31.9458 45.0142 30.9517 48.3472 32.2398 cv49.7212 32.771 57.315 30.7271 57.315 32.25 cv57.315 32.3941 57.6304 32.3697 57.7027 32.3619 cv58.8531 32.2408 60.0025 32.1182 61.1519 31.9947 cv61.5806 31.9493 61.9205 31.459 61.2867 31.5269 cv60.2613 31.7808 59.2408 31.7774 58.2252 31.5166 cv58.2252 31.4424 58.0982 31.417 58.0523 31.4043 cv56.7886 31.0621 48.4292 31.9639 48.525 30.9625 cv48.5396 30.8096 48.3726 30.7837 48.2525 30.7823 cv44.4986 30.7378 40.8443 31.9869 37.273 31.2339 cv36.1275 30.9927 34.6382 31.3399 33.5123 31.4961 cv32.9961 31.5679 27.9805 32.0655 28.021 32.0069 cv28.1465 31.8277 27.9146 31.772 27.7813 31.7647 cv24.4292 31.5875 21.0958 32.9385 17.7535 32.2627 cv17.4854 32.209 16.6812 32.629 17.188 32.7315 cv0 0 0 0.25 cmykf17.0962 18.8233 mo18.4908 19.1045 26.4673 19.2154 26.7208 18.8526 cv26.6626 18.9356 26.8394 18.9556 26.8741 18.9551 cv28.6006 18.9224 37.0582 16.751 37.4878 18.4034 cv37.5093 18.4854 37.6924 18.4673 37.7452 18.4615 cv41.4566 18.0416 44.7906 17.5831 48.3375 18.3531 cv49.9019 18.6929 57.315 16.8599 57.315 18.4034 cv57.315 18.4839 57.5376 18.4654 57.5718 18.4615 cv58.7212 18.3375 59.8716 18.2139 61.021 18.0909 cv61.2515 18.0665 62.0152 17.6666 61.4175 17.7305 cv60.3443 18.0035 59.2808 17.982 58.2252 17.6661 cv58.2085 17.6343 58.1822 17.6168 58.1451 17.6133 cv56.4146 17.1451 48.3834 18.5396 48.5259 17.0523 cv48.5318 16.9976 48.3873 16.9913 48.3668 16.9908 cv44.6705 16.9463 40.9039 18.1939 37.3653 17.4454 cv36.5035 17.2632 35.397 17.4571 34.5577 17.5733 cv33.9756 17.6543 28.0015 18.1431 28.0489 18.0757 cv28.108 17.9913 27.9288 17.9751 27.8956 17.9732 cv24.6128 17.7994 21.0323 19.1158 17.8453 18.4737 cv17.6338 18.4312 16.8453 18.7725 17.0962 18.8233 cvf42.9517 68.4566 mo43.233 68.4429 43.5064 68.3589 43.7251 68.1519 cv44.1822 67.7847 45.7291 66.3824 46.1373 66.4976 cv45.9615 68.6246 43.9673 72.0269 44.5376 74.1148 cv44.6626 74.2398 44.9654 74.2906 45.1919 74.2906 cv45.2584 74.2398 46.1568 73.7281 46.4048 73.8863 cv46.6021 75.7769 li46.5748 75.9429 46.1275 76.4292 45.9869 76.5953 cv45.9361 76.6968 46.0142 76.8296 46.2994 76.7378 cv47.149 76.3609 li47.2603 76.2906 47.3248 76.0386 47.2212 75.8804 cv47.0025 74.9566 47.2701 74.2476 47.3423 73.4781 cv47.4732 73.3921 47.6939 73.396 48.1236 73.2574 cv48.3619 75.6558 li47.7994 76.4078 li47.7994 76.4195 47.9517 76.5484 48.063 76.6246 cv48.231 76.7242 48.5084 76.2925 48.688 76.191 cv48.9908 75.9644 48.9556 75.9605 48.9732 75.8062 cv49.0201 72.9722 li49.1353 72.8218 49.7271 72.7925 50.0435 72.7066 cv50.0435 72.7066 50.1275 72.5054 50.1392 72.4039 cv49.606 70.9878 48.8287 69.0894 49.5728 67.6968 cv49.5962 67.6968 49.5708 66.6519 49.7115 66.7027 cv50.2896 69.8316 li50.2759 69.8101 50.4263 70.3414 50.4791 70.3863 cv50.7037 70.5699 50.9048 69.8707 50.9634 69.6148 cv51.4986 67.5093 51.524 64.5914 51.2466 64.273 cv50.9693 63.9546 49.9185 63.4761 49.9185 63.4761 cv50.7056 62.5542 51.5591 60.6734 50.7681 59.8804 cv50.2212 59.3238 49.1255 59.5289 49.1255 59.5289 cv47.9556 60.1949 47.9068 61.9332 48.0611 63.146 cv47.5669 63.146 46.856 63.0523 46.5376 63.3316 cv46.2173 63.6109 43.2818 67.191 43.2818 67.191 cv43.2818 67.2789 43.2818 67.3687 43.272 67.4839 cv43.272 67.5191 43.1705 67.5835 43.0806 67.6207 cv/1 <</Name (PANTONE 2766 CVC)/CSA /0 /TintMethod /Subtractive/TintProc null/MappedCSA null/NComponents 4 /Components [ 1 0.87 0 0.34 ] >>add_csd1 /1 get_csdsepcs0 sepf1.7773 lw0 lc0 lj1 ml42.9517 68.4566 mo43.233 68.4429 43.5064 68.3589 43.7251 68.1519 cv44.1822 67.7847 45.7291 66.3824 46.1373 66.4976 cv45.9615 68.6246 43.9673 72.0269 44.5376 74.1148 cv44.6626 74.2398 44.9654 74.2906 45.1919 74.2906 cv45.2584 74.2398 46.1568 73.7281 46.4048 73.8863 cv46.6021 75.7769 li46.5748 75.9429 46.1275 76.4292 45.9869 76.5953 cv45.9361 76.6968 46.0142 76.8296 46.2994 76.7378 cv47.149 76.3609 li47.2603 76.2906 47.3248 76.0386 47.2212 75.8804 cv47.0025 74.9566 47.2701 74.2476 47.3423 73.4781 cv47.4732 73.3921 47.6939 73.396 48.1236 73.2574 cv48.3619 75.6558 li47.7994 76.4078 li47.7994 76.4195 47.9517 76.5484 48.063 76.6246 cv48.231 76.7242 48.5084 76.2925 48.688 76.191 cv48.9908 75.9644 48.9556 75.9605 48.9732 75.8062 cv49.0201 72.9722 li49.1353 72.8218 49.7271 72.7925 50.0435 72.7066 cv50.0435 72.7066 50.1275 72.5054 50.1392 72.4039 cv49.606 70.9878 48.8287 69.0894 49.5728 67.6968 cv49.5962 67.6968 49.5708 66.6519 49.7115 66.7027 cv50.2896 69.8316 li50.2759 69.8101 50.4263 70.3414 50.4791 70.3863 cv50.7037 70.5699 50.9048 69.8707 50.9634 69.6148 cv51.4986 67.5093 51.524 64.5914 51.2466 64.273 cv50.9693 63.9546 49.9185 63.4761 49.9185 63.4761 cv50.7056 62.5542 51.5591 60.6734 50.7681 59.8804 cv50.2212 59.3238 49.1255 59.5289 49.1255 59.5289 cv47.9556 60.1949 47.9068 61.9332 48.0611 63.146 cv47.5669 63.146 46.856 63.0523 46.5376 63.3316 cv46.2173 63.6109 43.2818 67.191 43.2818 67.191 cv43.2818 67.2789 43.2818 67.3687 43.272 67.4839 cv43.272 67.5191 43.1705 67.5835 43.0806 67.6207 cv1 /1 get_csdsepcs0 sep@42.9517 68.4566 mo43.233 68.4429 43.5064 68.3589 43.7251 68.1519 cv44.1822 67.7847 45.7291 66.3824 46.1373 66.4976 cv45.9615 68.6246 43.9673 72.0269 44.5376 74.1148 cv44.6626 74.2398 44.9654 74.2906 45.1919 74.2906 cv45.2584 74.2398 46.1568 73.7281 46.3677 73.7281 cv46.522 75.6558 li46.5357 75.9839 46.0103 76.5484 45.8677 76.7144 cv45.8189 76.814 45.8814 77.0855 46.1666 76.9937 cv47.149 76.3609 li47.2603 76.2906 47.3248 76.0386 47.2212 75.8804 cv47.0025 74.9566 47.2701 74.2476 47.3423 73.4781 cv47.4732 73.3921 47.6939 73.396 48.1236 73.2574 cv48.3619 75.6558 li47.9087 76.4468 li47.9087 76.4644 47.7427 76.8414 48.0669 76.8453 cv48.3931 76.8511 49.0611 76.1792 49.0181 75.9332 cv49.0201 72.9722 li49.1353 72.8218 49.7271 72.7925 50.0435 72.7066 cv50.0435 72.7066 50.1275 72.5054 50.1392 72.4039 cv49.733 70.9781 48.9048 68.4664 49.6138 66.7203 cv49.6373 66.7203 50.2896 69.8316 50.2896 69.8316 cv50.2759 69.8101 50.3521 70.1148 50.4048 70.1597 cv50.6275 70.3453 50.9048 69.8707 50.9634 69.6148 cv51.4986 67.5093 51.524 64.5914 51.2466 64.273 cv50.9693 63.9546 49.9185 63.4761 49.9185 63.4761 cv50.7056 62.5542 51.7681 60.7378 50.7681 59.8804 cv50.2212 59.3238 49.1255 59.5289 49.1255 59.5289 cv47.9556 60.1949 47.9068 61.9332 48.0611 63.146 cv47.5669 63.146 46.856 63.0523 46.5376 63.3316 cv46.2173 63.6109 43.2818 67.191 43.2818 67.191 cv43.2818 67.2789 43.2818 67.3687 43.272 67.4839 cv43.272 67.5191 43.1705 67.5835 43.0806 67.6207 cv0 0 0 1 cmykf45.5064 73.15 mo48.9771 71.9078 li48.233 68.691 li46.8267 68.5757 li46.0533 69.1304 45.5064 73.15 45.5064 73.15 cv0 0 0 0 cmykf44.9556 66.1734 mo45.4224 65.9468 46.4771 65.1753 47.0044 65.2945 cv47.3834 65.7476 47.0611 67.9292 47.0611 67.9292 cv47.0611 67.9292 48.4263 68.3296 48.4888 68.0503 cv48.481 67.0406 49.8169 64.9566 49.9908 65.4097 cv50.2466 66.0757 50.5767 68.7515 50.6451 68.3296 cv51.3169 64.1617 49.5533 64.0445 49.5533 64.0445 cv49.5533 64.0445 48.0181 63.6441 47.4732 63.8882 cv46.9263 64.1304 44.9556 66.1734 44.9556 66.1734 cvf50.1822 61.8121 mo50.4576 61.0035 50.3873 60.5152 49.9517 60.3687 cv49.522 60.2222 49.0962 60.5679 48.8208 61.3765 cv48.649 61.8804 48.6802 62.2183 48.7974 62.5523 cv48.8677 62.7535 49.0084 62.8374 49.1685 62.8921 cv49.3619 62.9585 50.0298 62.2652 50.1822 61.8121 cvf37.752 67.5425 mo37.9864 68.4292 li37.8145 69.6382 39.5552 70.4292 38.9615 71.8082 cv39.6021 72.6109 38.2725 73.7203 39.0611 74.3374 cv38.837 74.9664 38.9029 75.8179 38.2227 76.1636 cv38.0596 76.15 37.9766 76.2261 37.8887 76.3472 cv37.8887 76.3589 37.8887 76.4449 37.9024 76.482 cv38.2227 76.7046 38.7403 76.7046 39.1724 76.6324 cv39.9361 74.7437 li40.108 74.6675 40.5044 74.4605 40.7759 74.523 cv40.5044 76.0894 li40.5044 76.1636 40.5044 76.2867 40.6021 76.3472 cv41.8111 76.4097 li41.9849 76.4097 42.0201 76.2261 41.9712 76.0894 cv41.9205 76.0035 41.7388 76.0523 41.565 76.0132 cv41.147 75.732 41.8345 75.2144 41.6626 74.7437 cv41.6626 74.6207 41.7603 74.6089 41.9361 74.5347 cv42.858 73.7691 42.0708 72.5601 42.3033 71.5992 cv42.3638 70.6011 43.438 69.8257 42.9927 68.8238 cv43.6373 68.4664 43.6978 67.6265 43.9322 66.9878 cv43.9087 66.8511 43.8697 66.8062 43.858 66.7418 cv43.8091 66.7164 43.7466 66.691 43.6626 66.691 cv43.5884 66.691 43.5123 66.7164 43.4751 66.7886 cv43.0201 67.2457 43.0201 68.1226 42.3033 68.4292 cv41.8345 68.4292 li42.1314 67.7515 41.9849 66.9878 41.4771 66.5054 cv41.2427 66.4195 41.0845 66.3199 40.8873 66.2808 cv40.3052 66.3707 39.8248 66.5054 39.5806 66.9878 cv39.5552 67.6168 40.0455 68.0855 39.9869 68.6519 cv39.8365 68.6519 39.9869 68.775 39.8248 68.6773 cv39.0611 67.8882 li38.9615 67.8257 38.9029 67.8882 38.7618 67.8257 cv38.168 66.7437 li38.0684 66.6578 37.8711 66.6832 37.7002 66.6832 cv37.752 67.5425 li0 0 0 1 cmykf38.504 68.8238 mo38.9263 69.6128 39.9869 70.4292 39.6548 71.5132 cv39.6548 71.5503 39.69 71.6128 39.7251 71.6226 cv41.4771 71.8941 li42.3638 69.2085 li40.4166 69.5171 li40.1841 69.5035 40.0962 69.2691 39.9361 69.1949 cv38.7403 68.4429 li38.5293 68.4664 38.6407 68.6382 38.4805 68.775 cv38.504 68.8238 li0 0 0 0 cmykf39.4947 73.646 mo39.4947 73.6695 39.4947 73.7574 39.4947 73.7828 cv40.108 74.0035 li40.6021 73.0933 li40.7505 72.9566 41.0943 73.0152 41.2427 73.1558 cv41.1822 73.9546 li41.2427 74.0035 41.3423 74.0425 41.4771 74.0425 cv41.565 73.9664 41.4771 74.0425 41.5884 73.9546 cv41.5884 72.525 li39.8365 72.314 li39.4947 73.646 lif40.3052 67.2105 mo40.8248 68.8511 li41.1822 68.5542 41.3306 67.8257 41.1822 67.4175 cv41.147 67.2105 41.0943 67.0874 41.0591 66.9878 cv40.8873 66.8257 40.5787 66.9878 40.4166 67.0601 cv40.3423 67.1226 40.3052 67.1734 40.3052 67.1734 cv40.3052 67.2105 lif50.7603 70.3472 mo50.6001 70.6109 50.2994 70.6695 50.1861 70.6011 cv50.0748 70.5347 50.1138 70.2652 50.272 70.0054 cv50.4322 69.7437 50.649 69.5874 50.7623 69.6558 cv50.8736 69.7222 50.9166 70.0855 50.7603 70.3472 cv1 /1 get_csdsepcs1 sepf24.3946 79.0171 mo24.3809 79.0152 24.377 79.0171 24.3692 79.0132 cv24.3282 79.0015 li24.2676 78.9996 li24.2227 78.9937 li24.2227 78.9937 24.209 78.9976 24.1924 79.0015 cv24.0733 79.0328 li24.0323 79.0523 li23.9854 79.0679 li23.9522 79.0914 li23.877 79.1226 li23.8711 79.1246 23.836 79.148 23.794 79.189 cv23.6807 79.273 li23.6348 79.3374 li23.5792 79.3941 li23.5704 79.4019 23.5547 79.4234 23.5293 79.4644 cv23.4688 79.5503 23.4288 79.6089 23.4161 79.6246 cv23.3584 79.7222 li23.3204 79.7808 li23.2872 79.8628 li23.1651 80.1246 li23.1045 80.2476 23.0352 80.4292 23.0176 80.4918 cv22.959 80.7574 li22.9415 80.8257 li22.9258 80.9156 li22.9014 81.025 li22.8848 81.2124 li22.8711 81.3374 li22.8643 81.4312 22.8887 81.6089 22.9102 81.6675 cv22.9317 81.7203 22.9532 81.732 23.0674 81.7652 cv23.0811 81.771 23.1084 81.7808 23.1407 81.7906 cv23.1661 81.7789 23.1876 81.773 23.1983 81.7671 cv23.2305 81.7593 li23.2364 81.7593 23.2364 81.7593 23.2403 81.7554 cv23.2618 81.7183 li23.2891 81.7066 li23.293 81.7046 23.3086 81.6949 23.3204 81.6773 cv23.3848 81.6011 23.4239 81.5894 23.4327 81.5718 cv23.4463 81.5445 li23.4512 81.5445 23.4649 81.5269 23.4844 81.5015 cv23.4903 81.4898 23.5079 81.4722 23.5215 81.4429 cv23.5372 81.4195 23.543 81.4039 23.5459 81.4 cv23.6055 81.3335 li23.6036 81.3296 23.6133 81.314 23.625 81.2925 cv23.6329 81.2789 23.6426 81.2574 23.6602 81.2281 cv23.6778 81.2242 li23.7247 81.146 li23.7305 81.1324 li23.7403 81.1128 23.7647 81.0464 23.8946 80.8238 cv23.9063 80.775 li23.9532 80.6988 li23.9786 80.65 li24.0215 80.5972 li24.0352 80.564 li24.0352 80.564 24.0391 80.5582 24.043 80.5582 cv24.0528 80.5542 24.0684 80.5601 24.0733 80.5738 cv24.0743 80.5777 li24.0567 80.9371 li24.0752 81.1363 li24.0801 81.1792 24.0801 81.2124 24.0879 81.232 cv24.0899 81.2339 24.1006 81.2437 24.1055 81.2515 cv24.128 81.2789 li24.1329 81.3042 li24.1368 81.314 24.1583 81.3238 24.1758 81.3355 cv24.2442 81.3628 li24.2862 81.3609 li24.3418 81.3589 li24.3477 81.355 24.3477 81.355 24.3555 81.355 cv24.3624 81.3531 24.3848 81.3453 24.4034 81.3316 cv24.4141 81.3238 24.4258 81.314 24.4454 81.3003 cv24.5469 81.2242 24.5977 81.1558 24.6543 81.0347 cv24.7852 80.7593 li24.8614 80.6207 li24.8946 80.5328 li24.959 80.4039 li24.9629 80.398 24.9698 80.3687 24.9825 80.3238 cv24.9903 80.3179 li25.002 80.2847 25.0157 80.2574 25.0206 80.2359 cv25.0333 80.1949 25.0333 80.1792 25.0313 80.1402 cv25.0186 80.1363 li25.0137 80.1207 li25.002 80.1285 24.9932 80.1363 24.9981 80.1402 cv24.9629 80.2261 li24.7383 80.6558 li24.6778 80.7769 24.5704 80.9507 24.5303 80.9996 cv24.4297 81.105 li24.3907 81.15 24.3848 81.1558 24.3702 81.1617 cv24.3418 81.1675 24.3165 81.1617 24.3126 81.146 cv24.3047 81.1285 24.3028 81.0855 24.294 81.0367 cv24.2862 80.9527 li24.2862 80.8082 li24.2813 80.775 li24.2891 80.7183 li24.2735 80.6656 24.2813 80.65 24.2911 80.6324 cv24.3047 80.5074 li24.336 80.2925 li24.3438 80.1871 li24.3624 80.1402 li24.3692 80.1226 24.377 80.0933 24.378 80.0542 cv24.3809 80.0289 24.3848 80.0074 24.3907 79.9918 cv24.4297 79.8003 li24.4668 79.7339 li24.4795 79.6519 li24.5137 79.6265 24.5137 79.6109 24.5215 79.5972 cv24.5176 79.5542 24.5215 79.5621 24.5352 79.521 cv24.5723 79.4292 li24.6153 79.3394 li24.6485 79.273 li24.7188 79.1636 li24.7325 79.1441 24.7325 79.1148 24.7188 79.0796 cv24.6954 79.0152 24.6573 78.9957 24.5196 78.9898 cv24.4922 79.0035 24.4795 79.0191 24.4708 79.0503 cv24.4376 79.0503 24.4219 79.0406 24.3946 79.0171 cvcp23.2051 81.5171 mo23.1797 81.4957 li23.1778 81.4898 li23.1778 81.4859 23.1778 81.4585 23.1758 81.4195 cv23.1622 81.3531 li23.1661 81.2437 li23.1661 81.1753 li23.1797 81.0972 li23.1866 80.9859 li23.1876 80.9488 23.1973 80.9058 23.2305 80.8179 cv23.2129 80.7925 23.2149 80.7808 23.2325 80.7632 cv23.2364 80.7398 23.2393 80.7183 23.2383 80.7144 cv23.295 80.5074 li23.3301 80.4039 23.3243 80.3824 23.3204 80.355 cv23.3536 80.3414 23.3633 80.3218 23.3672 80.2847 cv23.3799 80.2242 23.3887 80.1832 23.3868 80.1773 cv23.4297 80.0894 li23.4297 80.0562 li23.4961 79.9351 li23.4961 79.9156 li23.5704 79.7808 li23.6124 79.6851 li23.6124 79.6851 23.628 79.6675 23.6563 79.6168 cv23.7383 79.4976 li23.7754 79.439 li23.8477 79.3687 li23.8868 79.3238 li23.9239 79.2984 li23.9532 79.2671 li24.043 79.2105 li24.084 79.1851 li24.0879 79.1832 24.0879 79.1832 24.0938 79.1832 cv24.1055 79.1773 24.1094 79.1773 24.1192 79.1753 cv24.1876 79.1675 li24.1973 79.1773 24.2032 79.1753 24.254 79.1675 cv24.2725 79.1675 24.2862 79.1714 24.2959 79.1714 cv24.3702 79.1949 li24.377 79.1968 24.3985 79.1988 24.4297 79.2046 cv24.4161 79.2222 24.4122 79.2378 24.4083 79.2476 cv24.3848 79.3257 li24.3565 79.3765 li24.2911 79.5816 li24.251 79.6851 li24.2325 79.7261 li24.2188 79.7867 li24.1758 79.9664 24.168 79.9566 24.168 79.9566 cv24.0792 80.189 li24.0704 80.2183 li24.0489 80.2535 li24.0215 80.3218 li24.0137 80.3492 24 80.3668 24 80.3668 cv24 80.3668 24.0088 80.3648 24.0088 80.3687 cv23.9942 80.3941 23.9805 80.4078 23.9786 80.4156 cv23.8868 80.6128 li23.8614 80.6695 li23.834 80.7281 li23.836 80.73 23.8243 80.7457 23.8057 80.7632 cv23.7969 80.7867 23.7852 80.8082 23.7813 80.8179 cv23.7071 80.9429 li23.5645 81.1441 li23.5098 81.2339 li23.4737 81.2671 li23.3301 81.4527 li23.2989 81.4839 23.2872 81.4996 23.2442 81.525 cv23.2208 81.5113 li23.2051 81.5171 li0 0 0 0.25 cmykf25.334 79.7261 mo25.377 79.4976 li25.5 79.0328 li25.629 78.6421 li25.6329 78.6382 25.6329 78.6226 25.6309 78.6187 cv25.626 78.6089 25.6055 78.5972 25.585 78.605 cv25.5391 78.6285 li25.4581 78.6617 li25.295 78.7515 li25.2852 78.7535 25.2637 78.7632 25.2432 78.773 cv25.2227 78.7457 li25.212 78.7515 li25.1993 78.7398 25.1934 78.7281 25.1905 78.7242 cv25.1827 78.7027 25.1973 78.6617 25.2334 78.6148 cv25.2334 78.5855 li25.7149 78.3668 li25.7305 78.3648 25.7422 78.3453 25.7481 78.316 cv25.7833 78.189 25.9668 77.5679 26.0098 77.5074 cv26.043 77.4605 26.0938 77.4097 26.1172 77.4019 cv26.125 77.398 26.1348 77.4058 26.1602 77.4273 cv26.1641 77.4292 26.1768 77.439 26.2012 77.4566 cv26.2168 77.4644 26.2393 77.48 26.2657 77.4996 cv26.2559 77.525 26.2491 77.5406 26.2481 77.5484 cv26.2295 77.5953 26.0723 78.1792 26.0762 78.1929 cv26.0782 78.1968 26.086 78.2046 26.0918 78.2124 cv26.1387 78.2124 26.17 78.2085 26.1856 78.2027 cv26.1915 78.2027 26.2295 78.1871 26.2881 78.1597 cv26.2881 78.1597 26.3428 78.1441 26.4278 78.1148 cv26.5333 78.0835 li26.6114 78.0562 26.6504 78.064 26.709 78.1226 cv26.7188 78.1343 26.7286 78.146 26.7442 78.1597 cv26.7139 78.1695 26.6993 78.1695 26.6768 78.1617 cv26.668 78.1734 li26.6075 78.1675 26.5938 78.1675 26.5137 78.189 cv26.4981 78.1949 26.4825 78.2027 26.4727 78.2046 cv26.3829 78.2496 li26.4073 78.2378 26.2139 78.3101 26.2051 78.3121 cv26.1993 78.3121 26.168 78.3316 26.125 78.3531 cv26.0469 78.4 li25.9932 78.4273 25.9424 78.4703 25.9317 78.5093 cv25.7481 79.0269 li25.7061 79.2007 li25.6622 79.3218 25.6622 79.3824 25.6563 79.4019 cv25.6309 79.4722 li25.5938 79.6402 li25.5733 79.689 25.585 79.7144 25.5635 79.7867 cv25.545 79.9488 li25.5147 80.0269 li25.5206 80.0855 li25.5 80.1402 li25.4922 80.2613 25.4922 80.2769 25.4922 80.2945 cv25.4825 80.2984 25.4795 80.3042 25.4795 80.3218 cv25.4844 80.355 25.4883 80.3765 25.4844 80.3824 cv25.4668 80.607 li25.4766 80.6656 li25.4903 80.8277 li25.4922 80.8316 li25.504 80.8668 25.5235 80.8843 25.5489 80.8765 cv25.5762 80.8668 25.6329 80.816 25.6817 80.7496 cv25.8536 80.4996 li25.8809 80.4488 25.8965 80.4097 25.9063 80.4019 cv25.9239 80.3746 25.9395 80.355 25.9395 80.355 cv26.1084 80.0054 li26.2754 79.6304 li26.4942 79.1187 li26.5176 79.0542 li26.5293 79.0699 26.5391 79.0835 26.545 79.0953 cv26.5479 79.1089 26.5508 79.1265 26.545 79.1421 cv26.4903 79.2964 li26.4336 79.4585 li26.4161 79.4976 li26.4063 79.5035 26.4024 79.525 26.3965 79.5542 cv26.3848 79.6011 26.3575 79.6656 26.3184 79.7476 cv26.2911 79.8023 26.2735 79.8511 26.2735 79.8804 cv26.2657 79.9058 26.2686 79.9097 26.2374 79.9234 cv26.2305 79.9585 26.2295 79.9839 26.2227 79.9957 cv26.1895 80.0542 li26.1602 80.1363 li26.1192 80.2183 li26.086 80.2847 li26.0655 80.3238 25.9864 80.4898 25.9766 80.5074 cv25.9053 80.6695 25.7208 80.9175 25.585 81.0367 cv25.5528 81.066 25.4942 81.0953 25.4512 81.107 cv25.4043 81.1226 25.3594 81.1246 25.2618 81.1246 cv25.2305 81.1031 25.212 81.0835 25.2071 81.0757 cv25.2071 81.0757 25.2071 81.0425 25.2051 80.9996 cv25.1944 80.8179 li25.2149 80.6597 li25.211 80.5855 li25.2325 80.4703 li25.2481 80.357 25.2432 80.3492 25.2432 80.3296 cv25.2422 80.3238 25.2579 80.189 25.2696 80.1089 cv25.334 79.7261 lif8.47852 110.697 mo7.99219 111.346 7.51758 111.959 6.70899 112.396 cv6.5625 112.447 6.38086 112.516 6.23047 112.414 cv6.0293 112.252 6.20313 111.879 6.3418 111.584 cv6.61426 111.119 li6.94336 110.652 7.76758 109.629 8.6543 109.479 cv8.77149 109.479 8.86719 109.525 8.91602 109.623 cv8.98438 110.051 8.66407 110.412 8.47852 110.697 cvcp13.129 109.539 mo13.0645 109.391 12.9844 109.33 12.7667 109.291 cv12.2227 109.262 11.9463 109.855 11.586 110.188 cv11.5528 110.139 li11.5186 109.906 11.5333 109.707 11.3077 109.502 cv10.5235 108.98 9.92383 110.063 9.28321 110.426 cv9.25 110.443 9.20118 110.477 9.16993 110.445 cv9.23243 110.182 9.29883 109.867 9.21485 109.604 cv9.14649 109.357 8.9336 109.246 8.6504 109.23 cv8.0625 109.27 7.83985 109.396 7.28321 109.686 cv6.62891 110.09 6.11915 110.594 5.53516 111.133 cv4.89454 111.777 4.28907 112.391 3.6504 113.018 cv3.60352 113.084 3.57032 113.15 3.58594 113.232 cv3.6211 113.266 3.667 113.313 3.7168 113.297 cv4.35743 112.801 4.81446 112.156 5.42579 111.662 cv5.46973 111.695 li5.52344 111.906 5.52344 112.141 5.65626 112.303 cv5.8379 112.598 6.06836 112.768 6.42969 112.727 cv6.95997 112.678 7.78223 112.063 8.35743 111.535 cv9.01368 111.008 9.57911 110.457 10.2198 109.963 cv10.3848 109.83 10.5293 109.648 10.7598 109.648 cv10.8614 109.695 10.8614 109.795 10.8418 109.877 cv10.4532 110.801 9.75 111.609 9.16016 112.469 cv9.14649 112.516 9.11036 112.58 9.14649 112.633 cv9.39063 112.682 9.65626 112.633 9.90332 112.648 cv10.0977 112.496 10.2676 112.297 10.4161 112.098 cv11.0782 111.346 11.586 110.617 12.1954 109.904 cv12.2598 109.789 12.4063 109.641 12.5215 109.574 cv12.6299 109.535 12.7188 109.525 12.7852 109.592 cv12.8321 109.645 12.8868 109.766 12.7696 109.799 cv12.5538 109.764 12.4297 109.82 12.2969 109.994 cv12.2696 110.043 12.1094 110.402 12.2852 110.539 cv12.3223 110.582 12.4454 110.719 12.7071 110.66 cv12.7071 110.66 12.7813 110.66 12.8516 110.588 cv13.129 110.484 13.3458 109.902 13.129 109.539 cv0 0 0 1 cmykf3.12891 106.342 mo5.95313 105.143 8.64258 106.859 11.6036 106.533 cv12.5079 106.445 13.3106 106.164 14.0528 105.732 cv14.1348 105.766 14.0528 105.799 14.0528 105.85 cv12.8887 107.068 11.0948 107.26 9.44922 107.002 cv7.90235 106.666 6.4043 106.029 4.67188 106.236 cv3.77149 106.385 2.60157 106.654 2.39454 107.729 cv2.36133 107.957 2.47852 108.152 2.66016 108.266 cv3.23829 108.432 3.77735 108.084 4.1211 107.602 cv4.1543 107.588 4.20313 107.57 4.23438 107.57 cv4.31836 107.619 4.26758 107.701 4.25586 107.752 cv3.84376 108.377 3.2461 108.773 2.48243 108.84 cv2.18653 108.873 2.00293 108.9 1.67579 108.658 cv1.49415 108.447 1.39258 108.156 1.47364 107.877 cv1.63477 107.088 2.47168 106.639 3.12891 106.342 cvf7.15528 108.426 mo7.12305 108.445 7.05079 108.412 7.02344 108.412 cv6.94239 108.297 7.04297 108.104 7.11524 107.99 cv7.2002 107.877 7.33985 107.791 7.41407 107.766 cv7.48438 107.744 7.60352 107.736 7.60938 107.861 cv7.62891 108.113 7.24805 108.41 7.15528 108.426 cvcp7.38282 108.627 mo7.66407 108.377 8.00586 108.082 7.875 107.688 cv7.83985 107.588 7.74024 107.537 7.64454 107.504 cv7.54297 107.486 7.49024 107.467 7.38868 107.496 cv7.06446 107.525 6.81836 107.891 6.81836 107.891 cv6.50196 108.523 6.92774 108.486 6.34766 108.646 cv6.23047 108.664 5.85547 108.789 5.96973 108.65 cv6.17969 108.201 6.57422 107.807 6.9336 107.459 cv7.09961 107.275 7.37794 107.195 7.42579 106.965 cv7.40821 106.896 7.3125 106.898 7.26172 106.914 cv6.6543 107.23 6.08204 107.742 5.57227 108.24 cv5.26758 108.543 5.16407 108.797 4.86719 109.014 cv4.25977 109.215 3.60352 109.348 3.04493 109.695 cv2.70704 109.867 2.4502 110.111 2.4502 110.111 cv2.38477 110.174 2.31836 110.234 2.29297 110.324 cv2.30665 110.391 2.38868 110.457 2.45508 110.439 cv2.93165 110.125 3.39063 109.795 3.89942 109.629 cv4.09766 109.578 4.29688 109.463 4.47461 109.51 cv4.37891 109.809 4.13282 110.055 3.95411 110.32 cv3.29493 111.098 2.51368 112.068 1.39258 111.879 cv1.01368 111.777 0.814454 111.385 0.777344 111.023 cv0.710938 110.414 1.1875 110.002 1.62989 109.672 cv1.7129 109.621 1.79297 109.539 1.77833 109.439 cv1.76075 109.406 1.72657 109.391 1.67579 109.391 cv1.6504 109.371 1.33301 109.557 1.16797 109.656 cv0.465821 110.203 -0.173829 110.932 0.0429688 111.85 cv0.195313 112.326 0.704102 112.686 1.18165 112.766 cv3.3379 113.068 4.44825 110.793 5.47461 109.377 cv5.70606 108.963 6.18458 109.008 6.5625 108.877 cv6.84278 108.811 7.07618 109.057 7.37012 108.971 cv7.54981 108.92 7.78223 108.818 7.81544 108.639 cv7.79297 108.465 7.51758 108.658 7.38282 108.627 cvf15.9209 110.332 mo15.4493 111.189 14.2208 112.473 13.8233 112.482 cv13.712 112.496 13.5469 112.516 13.4786 112.369 cv13.379 112.039 13.5918 111.775 13.7247 111.51 cv14.1329 110.914 li14.5723 110.322 15.0782 109.596 15.8165 109.41 cv15.918 109.396 16 109.41 16.084 109.479 cv16.3301 109.772 16.0333 110.068 15.9209 110.332 cvcp18.6797 107.4 mo18.418 107.436 18.0333 107.33 17.9356 107.525 cv16.7715 109.227 li16.6895 109.309 16.625 109.49 16.4766 109.475 cv16.3477 109.311 16.1797 109.197 15.9649 109.164 cv15.1944 109.152 14.6094 109.654 13.959 110.023 cv13.7364 110.154 13.5245 110.301 13.2969 110.457 cv12.5567 110.969 li12.0518 111.301 11.5362 111.584 11.043 111.916 cv11.043 111.916 10.9961 111.99 11.0245 112.022 cv11.0547 112.061 11.0879 112.08 11.1583 112.063 cv11.7813 111.814 12.3711 111.354 12.9786 111.084 cv13.0127 111.234 12.8321 111.383 12.8184 111.529 cv12.7403 111.959 12.8555 112.42 13.2344 112.613 cv13.8438 113.006 14.3995 112.461 14.8926 112.145 cv14.9981 112.086 li15.129 112.264 15.1749 112.527 15.4551 112.637 cv15.836 112.814 16.0469 112.732 16.2442 112.582 cv16.669 112.352 17.5108 111.305 18.0977 110.619 cv18.1553 110.496 li18.1602 110.406 18.0606 110.389 18.0118 110.406 cv17.3672 111.059 16.6543 112.156 16.0313 112.422 cv15.9209 112.457 15.8165 112.438 15.75 112.34 cv15.6817 112.209 15.7383 112.094 15.7989 111.928 cv18.2823 108.248 li18.7901 107.539 li18.8165 107.447 li18.8165 107.383 18.7286 107.412 18.6797 107.4 cvf28.6827 114.164 mo28.6329 114.365 28.6192 114.42 28.3868 114.574 cv28.0665 114.746 26.9571 114.746 26.3633 114.482 cv25.8848 114.273 25.4219 113.811 25.2383 113.305 cv25.1543 113.105 25.1397 113.076 25.3868 113.076 cv26.503 113.006 27.8086 113.105 28.5157 113.734 cv28.6153 113.852 28.6973 114.004 28.6827 114.164 cvcp28.5059 113.408 mo27.9083 113.027 26.8633 112.729 25.9278 112.697 cv25.0127 112.637 25.1172 112.818 25.0918 112.586 cv25.0313 111.805 25.1719 111.242 25.336 110.648 cv25.8536 109.113 26.4981 108.254 27.2198 107.404 cv27.6133 106.867 27.9883 106.529 28.5313 106.053 cv28.5977 106 28.5616 105.9 28.4971 105.854 cv28.2833 105.791 28.086 105.904 27.9063 106.002 cv26.1036 107.197 24.6602 109.014 23.4161 110.764 cv23.3506 110.818 23.336 110.877 23.2872 110.793 cv23.5137 109.922 li23.7911 109.031 23.8018 108.027 24.2286 107.205 cv24.4376 106.793 24.75 106.412 25.0254 106.049 cv25.0606 105.982 25.0782 105.883 24.9932 105.854 cv24.9258 105.803 24.8487 105.838 24.7813 105.854 cv24.1524 106.168 23.6329 106.795 23.1241 107.307 cv21.6836 109.008 20.6543 110.938 18.9004 112.494 cv17.7706 113.518 16.5743 114.512 14.961 114.402 cv14.8799 114.385 14.8126 114.416 14.7793 114.502 cv14.8126 114.584 14.8965 114.617 14.9786 114.648 cv17.8116 115.029 20.2208 112.947 21.4922 110.574 cv22.1133 109.551 22.587 108.445 23.3868 107.504 cv23.4219 107.537 li23.1563 108.063 22.961 108.584 22.753 109.195 cv22.3477 110.58 22.5196 112.232 21.0225 112.893 cv20.961 112.93 20.8155 112.951 20.834 113.031 cv20.8848 113.113 21.042 113.123 21.125 113.107 cv22.1133 112.922 22.8497 111.965 23.4688 111.189 cv24.5176 109.772 25.5333 108.201 26.9424 107.094 cv26.9571 107.113 li26.4317 107.738 25.8438 108.35 25.3868 109.008 cv24.6993 110.002 24.0176 110.9 24.0235 112.313 cv24.0528 112.754 24.1231 112.754 23.9864 112.785 cv23.4102 112.916 22.836 113.006 22.3262 113.301 cv21.8194 113.598 21.0821 114.113 21.1631 114.801 cv21.2305 114.967 21.3643 115.133 21.5303 115.195 cv22.254 115.455 23.0391 115.221 23.668 114.924 cv23.7813 114.84 23.962 114.807 23.9786 114.643 cv23.9786 114.594 23.9102 114.561 23.8633 114.576 cv23.4522 114.762 23.0577 114.943 22.5645 114.912 cv22.3672 114.914 22.1534 114.779 22.086 114.584 cv22.0362 114.402 22.0674 114.207 22.1836 114.057 cv22.6426 113.527 23.2891 113.324 23.9102 113.174 cv24.1329 113.146 24.1895 113.063 24.2598 113.244 cv24.4629 113.543 24.6387 113.787 24.9512 114.061 cv25.7833 114.738 27.1719 115.234 28.4219 114.807 cv28.6329 114.723 28.8555 114.518 28.9161 114.182 cv28.9356 113.898 28.8487 113.674 28.5059 113.408 cvf35.6465 110.387 mo35.1192 111.234 34.1524 112.256 33.4844 112.484 cv33.3907 112.543 33.2334 112.543 33.1368 112.482 cv33.0665 112.447 33.0225 112.408 33.0157 112.285 cv32.9688 112.049 33.379 111.334 33.7022 110.938 cv34.2618 110.324 34.9102 109.436 35.67 109.492 cv35.9004 109.52 35.8887 109.684 35.8897 109.686 cv35.9512 109.883 35.7813 110.174 35.6465 110.387 cvcp29.5372 110.686 mo29.0469 111.395 28.3614 112.172 27.5391 112.473 cv27.4405 112.488 27.3086 112.506 27.2129 112.439 cv26.9922 112.223 27.2071 111.852 27.336 111.561 cv27.6192 111.139 27.879 110.813 28.2247 110.416 cv28.6583 109.973 29.0254 109.67 29.5 109.5 cv29.6631 109.482 29.8223 109.434 29.9454 109.631 cv30.0079 110.061 29.7403 110.381 29.5372 110.686 cvcp39.8501 109.377 mo39.2701 109.209 38.9478 109.871 38.586 110.234 cv38.5704 110.254 38.5196 110.334 38.4883 110.287 cv38.504 110.023 38.4649 109.785 38.2969 109.604 cv38.1651 109.434 37.9083 109.354 37.6602 109.434 cv37.0567 109.689 36.6934 110.178 36.1856 110.508 cv36.1504 110.525 36.1016 110.574 36.0704 110.525 cv36.1504 110.246 36.2461 109.85 36.0977 109.557 cv35.9415 109.289 35.7071 109.262 35.4454 109.262 cv34.6368 109.4 33.9473 109.83 33.3194 110.34 cv32.4942 111.014 32.045 111.959 31.1583 112.473 cv31.0606 112.506 30.9454 112.473 30.8799 112.393 cv30.8301 112.26 30.8301 112.176 30.8926 112.014 cv31.5782 111.006 32.2325 109.967 32.9542 108.961 cv33.0801 108.867 li33.5391 108.855 33.9581 108.873 34.4278 108.855 cv34.4795 108.84 34.5333 108.789 34.5333 108.723 cv34.545 108.652 34.5118 108.611 34.4649 108.594 cv33.4141 108.578 li33.3243 108.547 li33.2676 108.52 33.5254 108.104 33.6563 107.904 cv33.7383 107.758 33.8711 107.648 33.9336 107.467 cv33.9239 107.432 33.9336 107.396 33.8848 107.383 cv33.5489 107.377 33.211 107.313 33.1153 107.436 cv32.375 108.502 li32.2012 108.611 31.6905 108.57 31.3653 108.559 cv31.1836 108.572 31.0254 108.508 30.8438 108.607 cv30.8252 108.658 30.7715 108.793 30.875 108.818 cv30.961 108.855 32.0411 108.779 32.0411 108.889 cv32.0411 108.934 31.9854 109.047 31.9493 109.08 cv31.4131 109.5 30.8536 110.055 30.2618 110.42 cv30.2442 110.406 30.2129 110.387 30.2129 110.369 cv30.2579 110.125 30.3243 109.777 30.1944 109.549 cv30.0577 109.318 29.8663 109.229 29.5547 109.246 cv28.4913 109.336 27.875 109.963 27.0293 110.67 cv26.4649 111.16 25.9395 111.772 25.3848 112.285 cv25.3643 112.334 25.3516 112.432 25.4161 112.465 cv25.4668 112.484 25.5147 112.482 25.5665 112.461 cv26.3497 111.674 li26.3858 111.674 26.4317 111.652 26.4493 111.686 cv26.4844 111.965 26.5215 112.256 26.7227 112.479 cv26.9014 112.658 27.2393 112.723 27.5313 112.709 cv27.9083 112.666 28.4434 112.305 28.8536 111.973 cv29.5762 111.244 30.4083 110.648 31.1797 110.023 cv31.2149 110.002 31.2637 109.955 31.2989 110.002 cv31.0518 110.467 30.7579 110.896 30.461 111.342 cv30.2833 111.604 30.1348 111.934 30.2559 112.277 cv30.3038 112.443 30.4532 112.605 30.6172 112.672 cv31.3086 112.947 31.7676 112.256 32.1934 111.873 cv32.254 111.822 32.3086 111.811 32.3399 111.859 cv32.3907 112.236 32.6739 112.648 33.0674 112.727 cv33.4502 112.803 33.7461 112.66 34.0079 112.51 cv34.7461 112.086 35.127 111.578 35.6836 111.162 cv36.0821 110.877 36.8243 110.195 37.4493 109.748 cv37.5821 109.68 37.7256 109.541 37.834 109.686 cv37.918 109.84 37.7979 109.977 37.7637 110.09 cv37.3047 110.914 36.7012 111.707 36.1114 112.484 cv36.0616 112.547 35.8848 112.666 36.0254 112.686 cv36.2676 112.697 36.5801 112.682 36.8331 112.674 cv36.8926 112.719 37.1543 112.313 37.3008 112.129 cv37.9502 111.385 38.4903 110.744 39.0455 110.055 cv39.2095 109.84 39.4595 109.51 39.7017 109.574 cv39.7837 109.588 39.8345 109.686 39.8189 109.768 cv39.7544 109.936 39.6724 109.813 39.4595 109.857 cv39.233 109.973 39.1353 110.188 39.1216 110.416 cv39.1412 110.531 39.2173 110.627 39.3326 110.676 cv39.4947 110.764 39.5884 110.711 39.7212 110.664 cv40.0318 110.461 40.1822 110.145 40.1646 109.766 cv40.147 109.604 40.0142 109.422 39.8501 109.377 cvf48.0689 107.729 mo47.0181 108.605 45.899 108.977 44.4634 109.215 cv44.3912 109.219 43.9947 109.268 43.9888 109.262 cv44.065 109.129 44.3052 108.844 44.4185 108.682 cv45.4439 107.508 46.6763 106.641 48.1353 106.379 cv48.1353 106.379 48.3814 106.357 48.4888 106.371 cv48.6451 106.416 48.7974 106.445 48.8384 106.65 cv48.8091 107.113 48.3814 107.43 48.0689 107.729 cvcp49.0689 106.387 mo48.5884 105.85 47.7173 106.164 47.1392 106.332 cv45.6119 106.914 44.1021 107.695 42.9927 109.096 cv42.9439 109.178 42.8443 109.277 42.7447 109.277 cv42.1705 109.314 41.6099 109.234 41.2271 108.793 cv40.983 108.531 40.9966 108.119 41.0962 107.807 cv41.4986 106.783 42.5337 105.922 43.6021 105.723 cv43.8169 105.67 44.0435 105.688 44.2251 105.57 cv44.2584 105.535 44.2251 105.486 44.1958 105.457 cv43.438 105.428 42.7447 105.678 42.0884 105.945 cv41.2525 106.373 40.1705 107.266 40.44 108.35 cv40.7212 109.205 41.6783 109.467 42.4849 109.578 cv42.5708 109.574 42.6314 109.596 42.5826 109.691 cv42.4029 110.119 42.2408 110.531 42.2115 111.008 cv42.1958 111.732 42.6099 112.391 43.2544 112.682 cv44.4244 113.174 45.5084 112.41 46.3091 111.6 cv46.6509 111.139 47.0611 110.66 46.9283 110.037 cv46.8482 109.721 46.6724 109.563 46.3169 109.479 cv45.5201 109.311 44.772 110.193 44.3638 110.869 cv44.2857 111.082 44.0845 111.297 44.1666 111.541 cv44.2037 111.578 44.2505 111.578 44.2857 111.541 cv44.5767 110.834 45.272 109.973 45.8091 109.748 cv45.9576 109.703 46.1861 109.674 46.3169 109.809 cv46.4986 109.936 46.4517 110.203 46.4205 110.398 cv46.147 111.402 45.1958 112.479 44.1255 112.598 cv43.6958 112.633 43.3013 112.502 43.0513 112.141 cv42.7544 111.533 42.983 110.809 43.2916 110.277 cv43.4556 110.033 43.6587 109.662 43.8248 109.58 cv44.6607 109.479 li45.7212 109.307 46.7486 109.068 47.9224 108.334 cv48.3501 108.035 48.8931 107.689 49.1216 107.195 cv49.2349 106.947 49.2564 106.627 49.0689 106.387 cvf72.7261 114.086 mo72.2203 114.762 71.6617 115.404 70.7496 115.537 cv70.5308 115.539 70.48 115.523 70.3335 115.395 cv70.2164 115.295 70.1832 115.133 70.23 114.984 cv70.3609 114.637 70.5972 114.402 70.9839 114.176 cv71.1675 114.041 72.3804 113.51 73.1187 113.258 cv73.4234 113.145 li73.2574 113.436 72.9078 113.82 72.7261 114.086 cvcp63.7701 112.469 mo63.6724 112.502 63.524 112.543 63.3755 112.461 cv63.3091 112.432 63.274 112.34 63.2603 112.244 cv63.2212 111.934 63.4322 111.598 63.6978 111.172 cv64.2544 110.443 64.8267 109.662 65.6841 109.443 cv65.8091 109.428 65.9087 109.441 65.9947 109.508 cv66.2076 109.703 66.0142 109.984 65.9498 110.186 cv65.44 111.074 64.7564 112.051 63.7701 112.469 cvcp50.483 110.957 mo49.9771 111.615 49.1216 112.484 48.5181 112.529 cv48.3736 112.52 48.3208 112.482 48.272 112.381 cv48.1529 112.043 48.608 111.395 49.0396 110.871 cv49.813 110.049 li50.2642 109.654 50.6412 109.361 50.9263 109.49 cv51.022 109.525 51.0455 109.57 51.0884 109.703 cv51.0513 110.281 50.7525 110.566 50.483 110.957 cvcp78.2984 112.268 mo77.4058 111.73 76.2574 112.129 75.3003 112.281 cv75.1402 112.297 74.941 112.357 74.7378 112.396 cv74.7066 112.396 74.7203 112.436 74.8179 112.227 cv75.3746 111.305 76.0367 110.377 76.7046 109.51 cv76.773 109.389 li76.7671 109.338 76.8101 109.314 76.4253 109.342 cv75.6128 109.33 75.6558 109.311 75.605 109.434 cv74.9312 110.406 74.2124 111.365 73.3121 112.223 cv73.1792 112.322 73.064 112.438 72.8843 112.422 cv72.7378 112.369 72.7984 112.291 72.816 112.227 cv73.3238 111.469 73.9839 110.889 74.1734 110.049 cv74.2066 109.818 74.107 109.586 73.9234 109.459 cv73.7281 109.309 73.4546 109.27 73.2183 109.459 cv72.525 110.07 71.775 111.045 71.0718 111.822 cv70.8765 112.02 70.6968 112.301 70.4507 112.432 cv70.3843 112.467 70.2828 112.484 70.2359 112.402 cv70.1714 112.336 70.2164 112.252 70.2359 112.186 cv70.3335 111.879 71.5894 110.496 71.6226 109.992 cv71.691 109.707 71.521 109.564 71.3042 109.467 cv70.732 109.256 70.2808 109.713 69.8697 110.061 cv69.731 110.164 li69.6666 109.885 69.7955 109.609 69.3306 109.428 cv69.0591 109.355 68.7427 109.463 68.5962 109.596 cv68.1919 109.924 67.9009 110.4 67.5201 110.805 cv67.0611 111.385 66.1646 112.365 66.1275 112.355 cv65.9556 112.473 65.9087 112.447 65.7935 112.369 cv65.7252 112.256 65.8091 112.156 65.858 112.041 cv66.4302 111.25 66.9361 110.424 67.5259 109.635 cv67.5572 109.582 67.6783 109.482 67.5806 109.434 cv67.3423 109.443 67.0708 109.443 66.8033 109.436 cv66.6568 109.436 66.6021 109.721 66.4576 109.736 cv66.3619 109.604 66.2837 109.416 66.1412 109.324 cv65.9302 109.16 65.6529 109.197 65.3834 109.262 cv64.3736 109.609 63.1021 110.4 62.6314 111.707 cv62.3853 112.041 61.9419 112.404 61.6626 112.506 cv61.5279 112.529 61.4341 112.52 61.3697 112.408 cv61.3169 112.344 61.3502 112.244 61.3834 112.176 cv61.7564 111.615 62.2037 111.053 62.4791 110.445 cv62.5904 110.197 62.563 109.848 62.4009 109.652 cv62.2037 109.439 61.9419 109.348 61.6334 109.428 cv61.4361 109.463 61.1236 109.678 61.0728 109.645 cv61.0533 109.629 60.9947 109.598 61.1724 109.377 cv61.4458 108.988 61.7037 108.734 61.9517 108.318 cv62.0533 108.186 61.9068 108.24 61.7916 108.232 cv61.063 108.219 61.0787 108.186 60.9556 108.314 cv59.7955 109.686 58.7115 111.168 57.3033 112.311 cv57.1705 112.393 57.0279 112.541 56.8423 112.477 cv56.7603 112.436 56.7095 112.361 56.7252 112.264 cv56.7349 111.998 57.0474 111.695 57.2427 111.43 cv57.5591 110.984 57.9068 110.623 57.9166 110.023 cv57.8873 109.695 57.772 109.549 57.5044 109.445 cv57.1021 109.262 56.7857 109.467 56.4869 109.713 cv56.272 109.846 56.0259 110.123 55.8326 110.266 cv55.858 109.898 55.9302 109.563 55.356 109.406 cv54.731 109.229 54.315 109.789 53.856 110.105 cv53.8052 110.137 53.7584 110.137 53.7056 110.086 cv53.6548 109.873 53.6353 109.701 53.3892 109.51 cv52.6236 109.029 52.0279 109.898 51.4537 110.324 cv51.4205 110.361 51.3873 110.346 51.3521 110.309 cv51.3834 110.031 51.4693 109.678 51.2623 109.439 cv51.1138 109.26 50.9849 109.199 50.6275 109.229 cv49.6822 109.375 48.8658 110.023 48.106 110.779 cv47.2681 111.586 46.5611 112.373 45.7212 113.15 cv45.7076 113.199 45.6763 113.248 45.7076 113.313 cv45.7251 113.365 45.772 113.363 45.8208 113.363 cv46.4283 112.883 46.8892 112.256 47.4439 111.729 cv47.4791 111.695 47.5923 111.529 47.5923 111.695 cv47.6294 112.053 47.7212 112.422 48.0396 112.613 cv48.3033 112.811 48.7662 112.791 49.0298 112.627 cv50.3267 111.939 51.2603 110.789 52.3384 109.846 cv52.5025 109.713 52.7701 109.557 52.9458 109.678 cv53.0142 109.73 53.0279 109.842 52.9927 109.924 cv52.4537 110.816 51.9087 111.721 51.1919 112.588 cv51.1958 112.641 li51.2564 112.674 51.2818 112.66 51.4791 112.66 cv51.9205 112.658 52.1177 112.697 52.2212 112.635 cv52.7252 111.906 53.2349 111.076 53.8736 110.414 cv54.2173 110.135 54.6763 109.662 54.9771 109.609 cv55.0923 109.596 55.1294 109.609 55.2056 109.699 cv55.2505 109.762 55.2037 109.883 55.1705 109.934 cv54.6334 110.789 54.0591 111.615 53.4869 112.457 cv53.3951 112.586 li53.3013 112.695 53.6958 112.648 53.8326 112.648 cv54.0962 112.654 54.2896 112.689 54.3287 112.611 cv54.9224 111.836 55.5689 110.967 56.2759 110.24 cv56.5689 109.961 56.981 109.529 57.2564 109.609 cv57.3931 109.652 57.4068 109.725 57.4068 109.809 cv57.3248 110.139 57.065 110.402 56.8677 110.699 cv56.5474 111.15 56.0318 111.541 56.0845 112.152 cv56.1197 112.396 56.3326 112.627 56.565 112.689 cv56.8111 112.803 57.0748 112.688 57.272 112.588 cv57.8716 112.156 58.4419 111.641 58.9439 111.15 cv59.0025 111.115 59.0923 111.031 59.1548 110.98 cv58.9595 111.334 li56.4771 115.043 li56.4107 115.172 li56.4263 115.221 56.5084 115.225 56.5416 115.225 cv57.2252 115.211 57.2857 115.25 57.3306 115.152 cv58.0669 114.033 li59.0025 112.58 60.0123 111.098 61.3072 109.873 cv61.44 109.758 61.5826 109.641 61.7544 109.623 cv61.8638 109.607 61.9478 109.656 61.9966 109.738 cv62.0962 109.877 61.8677 110.199 61.7193 110.381 cv61.2759 110.947 60.6451 111.494 60.7056 112.164 cv60.774 112.52 60.9419 112.617 61.1802 112.719 cv61.4927 112.814 61.7642 112.701 61.9927 112.568 cv62.3169 112.379 62.4634 112.197 62.6216 112.039 cv62.7544 112.285 62.9068 112.604 63.2271 112.697 cv63.6392 112.824 64.0318 112.627 64.3619 112.41 cv64.6431 112.232 64.8912 112.016 65.1334 111.846 cv65.1236 111.979 65.1177 112.049 65.1412 112.164 cv65.1978 112.555 65.4732 112.643 65.688 112.695 cv66.065 112.754 66.1802 112.641 66.5357 112.281 cv66.9478 111.947 68.2544 110.178 68.6763 109.809 cv68.7603 109.758 68.8072 109.645 68.938 109.709 cv69.0259 109.758 69.0259 109.855 69.0064 109.922 cv68.5005 110.813 67.897 111.713 67.2603 112.547 cv67.2095 112.635 li67.2173 112.719 67.5748 112.688 67.6919 112.68 cv67.899 112.672 68.1529 112.701 68.1939 112.654 cv68.606 111.91 69.2095 111.172 69.815 110.494 cv70.1617 110.182 70.6929 109.652 70.9312 109.67 cv70.9957 109.684 71.0464 109.764 71.0113 109.816 cv70.6871 110.195 70.4253 110.574 70.1285 110.955 cv69.8306 111.385 69.44 111.902 69.6177 112.443 cv69.7369 112.633 69.7779 112.688 70.1246 112.746 cv70.5484 112.746 70.6168 112.633 70.7945 112.447 cv71.6304 111.557 72.398 110.617 73.2339 109.738 cv73.3335 109.672 73.398 109.549 73.5464 109.604 cv73.5953 109.654 73.6304 109.703 73.6148 109.772 cv73.6031 110.148 72.6148 111.104 72.2535 111.852 cv72.1753 112.115 72.2281 112.41 72.4546 112.555 cv73.2007 112.998 73.689 112.074 74.23 111.66 cv74.3101 111.596 li74.1812 111.926 73.9039 112.369 73.6597 112.719 cv73.1324 112.916 72.5933 113.098 72.066 113.313 cv71.2574 113.668 70.1753 114.072 69.7525 114.674 cv69.522 114.904 69.4087 115.25 69.5259 115.547 cv69.7896 115.893 70.2359 115.922 70.646 115.869 cv72.2886 115.732 73.5445 114.072 74.4566 112.785 cv74.5308 112.762 li75.1558 112.596 75.7964 112.461 76.4527 112.357 cv76.9175 112.307 77.4585 112.289 77.8042 112.6 cv77.9683 112.777 78.0542 113.039 77.939 113.273 cv77.5621 113.852 76.8726 113.92 76.2652 114.053 cv76.1988 114.086 76.1187 114.168 76.2183 114.219 cv76.6773 114.281 77.1714 114.182 77.566 114 cv77.9761 113.781 78.5679 113.549 78.6441 113.023 cv78.7105 112.709 78.5464 112.447 78.2984 112.268 cvf30.1739 80.5542 mo30.1739 80.5269 30.1739 80.4996 30.1504 80.4996 cv30.1133 80.4996 29.9766 80.5445 29.6836 80.5445 cv27.9336 80.5445 li27.879 80.5445 27.7012 80.5328 27.5704 80.523 cv27.4454 80.5113 27.3965 80.4664 27.3516 80.4664 cv27.3301 80.4664 27.3145 80.5269 27.3086 80.5542 cv27.2969 80.5914 27.2002 81.021 27.2002 81.0718 cv27.2002 81.0992 27.21 81.1089 27.2276 81.1089 cv27.2481 81.1089 27.2598 81.0992 27.2823 81.066 cv27.2969 81.0328 27.3145 80.9937 27.3633 80.9136 cv27.4395 80.7984 27.5469 80.771 27.835 80.7671 cv28.504 80.7554 li28.504 82.6851 li28.504 83.1246 28.504 83.48 28.4844 83.6753 cv28.4668 83.8062 28.4395 83.9078 28.3458 83.9253 cv28.3038 83.9351 28.2432 83.9449 28.1993 83.9449 cv28.1719 83.9449 28.1622 83.9683 28.1622 83.9781 cv28.1622 84.0132 28.1876 84.021 28.2383 84.021 cv28.379 84.021 28.7002 84.0054 28.7217 84.0054 cv28.75 84.0054 29.0645 84.021 29.3145 84.021 cv29.3692 84.021 29.3907 84.0054 29.3907 83.9781 cv29.3907 83.9683 29.379 83.9449 29.3536 83.9449 cv29.3145 83.9449 29.211 83.941 29.1465 83.9292 cv29.0098 83.9078 28.9844 83.8101 28.9668 83.6753 cv28.9444 83.48 28.9444 83.1246 28.9444 82.6851 cv28.9444 80.7554 li29.5098 80.7671 li29.9493 80.771 30.0479 80.8687 30.0704 81.0152 cv30.0811 81.0816 li30.086 81.146 30.1016 81.1636 30.1231 81.1636 cv30.1465 81.1636 30.1622 81.1421 30.1622 81.1031 cv30.1622 81.0503 30.1739 80.691 30.1739 80.5542 cv0 0 0 0.25 cmykf34.5918 83.9859 mo34.5918 83.9683 34.586 83.9527 34.5596 83.9527 cv34.5157 83.9527 34.4122 83.941 34.3477 83.9292 cv34.211 83.9136 34.1836 83.8101 34.168 83.6792 cv34.1446 83.4839 34.1446 83.1304 34.1446 82.6851 cv34.1446 81.8746 li34.1446 81.1519 34.1446 81.0328 34.1563 80.8863 cv34.1622 80.7242 34.2012 80.646 34.3243 80.6265 cv34.3809 80.6128 34.4063 80.6089 34.4405 80.6089 cv34.461 80.6089 34.4786 80.5914 34.4786 80.5777 cv34.4786 80.5484 34.4571 80.5328 34.4063 80.5328 cv34.2666 80.5328 33.9454 80.5484 33.918 80.5484 cv33.8965 80.5484 33.5821 80.5328 33.3731 80.5328 cv33.3262 80.5328 33.2989 80.5484 33.2989 80.5777 cv33.2989 80.5914 33.3194 80.6089 33.336 80.6089 cv33.379 80.6089 33.4571 80.6128 33.4942 80.6265 cv33.6465 80.6578 33.6836 80.7281 33.6954 80.8863 cv33.7012 81.0328 33.7012 81.1324 33.7012 81.8531 cv33.7012 81.9507 li33.7012 81.9722 33.6895 81.9781 33.6719 81.9781 cv31.7168 81.9781 li31.7012 81.9781 31.6895 81.9722 31.6895 81.9507 cv31.6895 81.8531 li31.6895 81.1324 31.6895 81.0328 31.6934 80.8863 cv31.7051 80.7242 31.7432 80.646 31.8692 80.6265 cv31.9229 80.6128 31.9493 80.6089 31.9825 80.6089 cv31.9981 80.6089 32.0206 80.5914 32.0206 80.5777 cv32.0206 80.5484 31.9981 80.5328 31.9454 80.5328 cv31.8086 80.5328 31.4932 80.5484 31.4668 80.5484 cv31.4434 80.5484 31.125 80.5328 30.918 80.5328 cv30.8633 80.5328 30.8418 80.5484 30.8418 80.5777 cv30.8418 80.5914 30.8575 80.6089 30.879 80.6089 cv30.918 80.6089 31 80.6128 31.0362 80.6265 cv31.1895 80.6578 31.2227 80.7281 31.2344 80.8863 cv31.2432 81.0328 31.2432 81.1519 31.2432 81.8746 cv31.2432 82.6851 li31.2432 83.1304 31.2432 83.4839 31.2227 83.6792 cv31.2051 83.8101 31.1778 83.9136 31.086 83.9292 cv31.043 83.941 30.9874 83.9527 30.9502 83.9527 cv30.918 83.9527 30.9122 83.9683 30.9122 83.9859 cv30.9122 84.0132 30.9336 84.0269 30.9825 84.0269 cv31.125 84.0269 31.4434 84.0054 31.4668 84.0054 cv31.4932 84.0054 31.8086 84.0269 32.0645 84.0269 cv32.1133 84.0269 32.1348 84.0054 32.1348 83.9859 cv32.1348 83.9683 32.125 83.9527 32.0977 83.9527 cv32.0586 83.9527 31.9551 83.941 31.8907 83.9292 cv31.7549 83.9136 31.7276 83.8101 31.711 83.6792 cv31.6895 83.4839 31.6895 83.1304 31.6895 82.6851 cv31.6895 82.2007 li31.6895 82.1792 31.7012 82.1753 31.7168 82.1753 cv33.6719 82.1753 li33.6895 82.1753 33.7012 82.1851 33.7012 82.2007 cv33.7012 82.6851 li33.7012 83.1304 33.7012 83.4839 33.6797 83.6792 cv33.6622 83.8101 33.6368 83.9136 33.543 83.9292 cv33.504 83.941 33.4454 83.9527 33.4073 83.9527 cv33.379 83.9527 33.3692 83.9683 33.3692 83.9859 cv33.3692 84.0132 33.3907 84.0269 33.4454 84.0269 cv33.5821 84.0269 33.8965 84.0054 33.918 84.0054 cv33.9454 84.0054 34.2666 84.0269 34.5196 84.0269 cv34.5704 84.0269 34.5918 84.0054 34.5918 83.9859 cvf37.5489 83.441 mo37.5489 83.4078 37.543 83.3707 37.5098 83.3707 cv37.4883 83.3707 37.4727 83.3902 37.4668 83.441 cv37.4336 83.6324 37.3809 83.7242 37.2618 83.773 cv37.1407 83.8218 36.9239 83.8218 36.8028 83.8218 cv36.3516 83.8218 36.2872 83.7593 36.2754 83.4449 cv36.2715 83.3472 36.2754 82.8374 36.2754 82.6792 cv36.2754 82.2789 li36.2754 82.2554 36.2813 82.2457 36.3096 82.2457 cv36.3848 82.2457 36.8477 82.2515 36.9727 82.2671 cv37.1514 82.2828 37.1954 82.3707 37.212 82.4351 cv37.2276 82.4957 37.2334 82.5484 37.2334 82.5914 cv37.2334 82.6148 37.2442 82.6363 37.2657 82.6363 cv37.2979 82.6363 37.3047 82.5816 37.3047 82.5484 cv37.3047 82.5171 37.3145 82.316 37.3262 82.2242 cv37.3379 82.0718 37.3633 81.9683 37.3633 81.941 cv37.3633 81.9136 37.3477 81.9019 37.3311 81.9019 cv37.3145 81.9019 37.2911 81.9351 37.2618 81.9722 cv37.2168 82.0171 37.1514 82.0328 37.043 82.0386 cv36.9336 82.0484 36.3633 82.0484 36.3038 82.0484 cv36.2813 82.0484 36.2754 82.0386 36.2754 82.0054 cv36.2754 80.7808 li36.2754 80.7496 36.2813 80.7339 36.3038 80.7339 cv36.3516 80.7339 36.8584 80.7398 36.9336 80.7496 cv37.1836 80.7789 37.2276 80.8316 37.2618 80.9078 cv37.2872 80.9624 37.2872 81.0542 37.2872 81.0855 cv37.2872 81.1246 37.3047 81.146 37.3311 81.146 cv37.3516 81.146 37.3633 81.1187 37.3692 81.0992 cv37.3809 81.0386 37.3916 80.7984 37.3965 80.7496 cv37.4122 80.6187 37.4336 80.564 37.4336 80.5328 cv37.4336 80.5113 37.4239 80.4937 37.4122 80.4937 cv37.3916 80.4937 37.3633 80.5113 37.3418 80.5152 cv37.3047 80.523 37.2334 80.5328 37.1407 80.5386 cv37.0372 80.5445 36.0918 80.5445 36.0586 80.5445 cv36.0372 80.5445 35.7227 80.5269 35.5157 80.5269 cv35.461 80.5269 35.4395 80.5445 35.4395 80.5718 cv35.4395 80.5874 35.4571 80.6031 35.4776 80.6031 cv35.5157 80.6031 35.5958 80.6089 35.6348 80.6187 cv35.7862 80.6519 35.8194 80.7242 35.8321 80.8804 cv35.8409 81.0269 35.8409 81.146 35.8409 81.8707 cv35.8409 82.6792 li35.8409 83.1246 35.8409 83.48 35.8194 83.6753 cv35.8028 83.8101 35.7754 83.9078 35.6836 83.9292 cv35.6407 83.9351 35.586 83.9449 35.5469 83.9449 cv35.5157 83.9449 35.5118 83.9624 35.5118 83.9781 cv35.5118 84.0054 35.5313 84.021 35.5801 84.021 cv35.7227 84.021 36.0372 84.0054 36.0586 84.0054 cv36.1934 84.0054 36.5372 84.0347 37.2383 84.0347 cv37.418 84.0347 37.4561 84.021 37.4883 83.9039 cv37.5098 83.8062 37.5489 83.48 37.5489 83.441 cvf27.626 88.6636 mo27.626 88.6441 27.6094 88.6382 27.5831 88.6382 cv27.5284 88.6382 27.3868 88.6382 27.2286 88.5894 cv26.9961 88.5113 26.9571 88.2085 26.9356 88.0132 cv26.5704 84.6753 li26.5606 84.5738 26.545 84.5289 26.5059 84.5289 cv26.4688 84.5289 26.4473 84.566 26.4239 84.6148 cv24.8272 88.0289 li23.1641 84.6109 li23.1368 84.5523 23.1153 84.5289 23.0811 84.5289 cv23.0489 84.5289 23.0274 84.566 23.0235 84.6265 cv22.6309 88.1695 li22.6084 88.3785 22.5918 88.5894 22.4122 88.6226 cv22.3321 88.6382 22.294 88.6382 22.25 88.6382 cv22.2227 88.6382 22.1954 88.65 22.1954 88.6636 cv22.1954 88.7027 22.2344 88.7144 22.2881 88.7144 cv22.4336 88.7144 22.6973 88.6988 22.7461 88.6988 cv22.7872 88.6988 23.0489 88.7144 23.25 88.7144 cv23.3155 88.7144 23.3487 88.7027 23.3487 88.6636 cv23.3487 88.65 23.3262 88.6382 23.3047 88.6382 cv23.2715 88.6382 23.1895 88.6324 23.0987 88.6109 cv23.0157 88.5953 22.9571 88.525 22.9571 88.4429 cv22.9571 88.3511 22.9571 88.2535 22.9629 88.1656 cv23.1797 85.6421 li23.2012 85.6421 li23.2618 85.7906 23.8692 87.0953 23.92 87.1929 cv23.9454 87.2457 24.4141 88.1871 24.5547 88.4527 cv24.6583 88.65 24.6856 88.7027 24.7227 88.7027 cv24.7715 88.7027 24.7891 88.6539 24.9043 88.4156 cv26.2344 85.5894 li26.25 85.5894 li26.5118 88.3941 li26.5215 88.4918 26.5166 88.5855 26.4903 88.5894 cv26.4629 88.5953 26.4512 88.605 26.4512 88.6265 cv26.4512 88.6539 26.4786 88.6714 26.6036 88.6832 cv26.8047 88.6988 27.3916 88.7144 27.5118 88.7144 cv27.5782 88.7144 27.626 88.6988 27.626 88.6636 cvf29.3946 88.6714 mo29.3946 88.6597 29.3829 88.6382 29.3575 88.6382 cv29.3145 88.6382 29.2159 88.6265 29.1504 88.6226 cv29.0088 88.5992 28.9805 88.5035 28.9649 88.3707 cv28.9434 88.1773 28.9434 87.816 28.9434 87.3765 cv28.9434 86.5621 li28.9434 85.8394 28.9434 85.7242 28.9551 85.5718 cv28.9649 85.4156 28.9991 85.3335 29.1231 85.3101 cv29.1827 85.3003 29.209 85.2964 29.2432 85.2964 cv29.2598 85.2964 29.2754 85.2847 29.2754 85.2632 cv29.2754 85.2359 29.254 85.2242 29.2042 85.2242 cv29.0626 85.2242 28.7481 85.2418 28.7208 85.2418 cv28.6993 85.2418 28.3829 85.2242 28.2325 85.2242 cv28.1778 85.2242 28.1563 85.2359 28.1563 85.2632 cv28.1563 85.2847 28.1719 85.2964 28.1934 85.2964 cv28.2266 85.2964 28.2852 85.3062 28.335 85.316 cv28.4385 85.3394 28.4825 85.4156 28.4922 85.5718 cv28.504 85.7242 28.504 85.8394 28.504 86.5621 cv28.504 87.3765 li28.504 87.816 28.504 88.1773 28.4766 88.3707 cv28.459 88.5035 28.4385 88.5992 28.3458 88.6226 cv28.3008 88.6265 28.2481 88.6382 28.2051 88.6382 cv28.1778 88.6382 28.1719 88.6597 28.1719 88.6714 cv28.1719 88.6988 28.1934 88.7144 28.2422 88.7144 cv28.3829 88.7144 28.6993 88.6988 28.7208 88.6988 cv28.7481 88.6988 29.0626 88.7144 29.3184 88.7144 cv29.3672 88.7144 29.3946 88.6929 29.3946 88.6714 cvf33.9786 85.2632 mo33.9786 85.23 33.9454 85.2242 33.8907 85.2242 cv33.7012 85.2242 33.5323 85.2418 33.4786 85.2418 cv33.4297 85.2418 33.1846 85.2242 32.9786 85.2242 cv32.9229 85.2242 32.8868 85.23 32.8868 85.2632 cv32.8868 85.2789 32.8907 85.2964 32.9229 85.2964 cv32.961 85.2964 33.0762 85.3062 33.1583 85.3218 cv33.2989 85.3609 33.3321 85.4624 33.336 85.7632 cv33.3809 88.0132 li33.2334 87.8589 32.7715 87.3394 32.3165 86.8492 cv31.6016 86.0894 30.9122 85.3609 30.8418 85.2789 cv30.7657 85.1968 30.7168 85.1539 30.6797 85.1539 cv30.6465 85.1539 30.625 85.2085 30.625 85.3863 cv30.6192 88.0171 li30.6192 88.4429 30.5967 88.5718 30.4844 88.605 cv30.4122 88.6265 30.3252 88.6382 30.2872 88.6382 cv30.2666 88.6382 30.25 88.6539 30.25 88.6714 cv30.25 88.7027 30.2764 88.7144 30.3252 88.7144 cv30.5333 88.7144 30.7442 88.6988 30.7872 88.6988 cv30.8262 88.6988 31.0313 88.7144 31.293 88.7144 cv31.3477 88.7144 31.375 88.6988 31.375 88.6714 cv31.375 88.6539 31.3633 88.6382 31.3418 88.6382 cv31.2989 88.6382 31.1895 88.6324 31.1026 88.605 cv30.9786 88.5718 30.9356 88.4527 30.9239 88.0718 cv30.8692 85.9527 li31.0157 86.1226 31.5 86.6656 32.0391 87.2398 cv32.5274 87.7671 33.1895 88.4312 33.2383 88.48 cv33.4903 88.7203 33.5323 88.7515 33.5821 88.7515 cv33.6192 88.7515 33.625 88.7242 33.625 88.4195 cv33.6368 85.7242 li33.6368 85.4488 33.6583 85.3472 33.8106 85.316 cv33.8643 85.3003 33.9024 85.2964 33.9239 85.2964 cv33.9571 85.2964 33.9786 85.2789 33.9786 85.2632 cvf38.6094 85.2632 mo38.6094 85.23 38.5772 85.2242 38.5235 85.2242 cv38.3331 85.2242 38.1641 85.2418 38.1094 85.2418 cv38.0606 85.2418 37.8165 85.2242 37.6084 85.2242 cv37.5567 85.2242 37.5176 85.23 37.5176 85.2632 cv37.5176 85.2789 37.5225 85.2964 37.5567 85.2964 cv37.5938 85.2964 37.7071 85.3062 37.7891 85.3218 cv37.9297 85.3609 37.9629 85.4624 37.9688 85.7632 cv38.0137 88.0132 li37.8653 87.8589 37.4034 87.3394 36.9454 86.8492 cv36.2344 86.0894 35.543 85.3609 35.4747 85.2789 cv35.3975 85.1968 35.3477 85.1539 35.3106 85.1539 cv35.2774 85.1539 35.2559 85.2085 35.2559 85.3863 cv35.251 88.0171 li35.251 88.4429 35.2305 88.5718 35.1153 88.605 cv35.045 88.6265 34.9571 88.6382 34.918 88.6382 cv34.8975 88.6382 34.8809 88.6539 34.8809 88.6714 cv34.8809 88.7027 34.9083 88.7144 34.9571 88.7144 cv35.1641 88.7144 35.376 88.6988 35.42 88.6988 cv35.4571 88.6988 35.6641 88.7144 35.9239 88.7144 cv35.9786 88.7144 36.0069 88.6988 36.0069 88.6714 cv36.0069 88.6539 35.9942 88.6382 35.9747 88.6382 cv35.9297 88.6382 35.8204 88.6324 35.7344 88.605 cv35.6094 88.5718 35.5665 88.4527 35.5547 88.0718 cv35.502 85.9527 li35.6465 86.1226 36.1329 86.6656 36.668 87.2398 cv37.1583 87.7671 37.8223 88.4312 37.8711 88.48 cv38.1202 88.7203 38.1641 88.7515 38.2129 88.7515 cv38.252 88.7515 38.2579 88.7242 38.2579 88.4195 cv38.2676 85.7242 li38.2676 85.4488 38.2891 85.3472 38.4405 85.316 cv38.4961 85.3003 38.5333 85.2964 38.5547 85.2964 cv38.5879 85.2964 38.6094 85.2789 38.6094 85.2632 cvf41.6373 88.1324 mo41.6373 88.0992 41.6334 88.0621 41.5982 88.0621 cv41.5787 88.0621 41.5611 88.0835 41.5572 88.1324 cv41.524 88.3218 41.4693 88.4156 41.3501 88.4644 cv41.231 88.5113 41.0123 88.5113 40.8912 88.5113 cv40.4419 88.5113 40.3755 88.4527 40.3658 88.1382 cv40.3619 88.0406 40.3658 87.5289 40.3658 87.3726 cv40.3658 86.9703 li40.3658 86.9488 40.3716 86.9371 40.399 86.9371 cv40.4771 86.9371 40.938 86.941 41.0611 86.9585 cv41.2408 86.9742 41.2837 87.0621 41.3013 87.1265 cv41.3169 87.1871 41.3228 87.2398 41.3228 87.2847 cv41.3228 87.3062 41.3326 87.3296 41.356 87.3296 cv41.3892 87.3296 41.3951 87.273 41.3951 87.2398 cv41.3951 87.2085 41.4048 87.0074 41.4146 86.9136 cv41.4263 86.7632 41.4537 86.6578 41.4537 86.6324 cv41.4537 86.605 41.438 86.5953 41.4205 86.5953 cv41.4048 86.5953 41.3814 86.6285 41.3501 86.6656 cv41.3072 86.7085 41.2408 86.7242 41.1314 86.73 cv41.024 86.7418 40.4517 86.7418 40.3931 86.7418 cv40.3716 86.7418 40.3658 86.73 40.3658 86.6968 cv40.3658 85.4761 li40.3658 85.441 40.3716 85.4234 40.3931 85.4234 cv40.4419 85.4234 40.9478 85.4312 41.024 85.441 cv41.274 85.4683 41.3169 85.523 41.3501 85.6011 cv41.3775 85.6539 41.3775 85.7476 41.3775 85.7789 cv41.3775 85.8179 41.3951 85.8394 41.4205 85.8394 cv41.4419 85.8394 41.4537 85.8121 41.4595 85.7906 cv41.4693 85.73 41.481 85.4918 41.4849 85.441 cv41.5025 85.3101 41.524 85.2574 41.524 85.2242 cv41.524 85.2027 41.5123 85.1871 41.5025 85.1871 cv41.481 85.1871 41.4537 85.2027 41.4322 85.2085 cv41.3951 85.2144 41.3228 85.2242 41.231 85.23 cv41.1255 85.2359 40.1822 85.2359 40.149 85.2359 cv40.1275 85.2359 39.813 85.2183 39.606 85.2183 cv39.5513 85.2183 39.5279 85.2359 39.5279 85.2632 cv39.5279 85.2789 39.5455 85.2964 39.5669 85.2964 cv39.606 85.2964 39.6861 85.3003 39.7251 85.3101 cv39.8755 85.3433 39.9107 85.4156 39.9205 85.5718 cv39.9322 85.7183 39.9322 85.8394 39.9322 86.5621 cv39.9322 87.3726 li39.9322 87.816 39.9322 88.1695 39.9107 88.3668 cv39.8931 88.5035 39.8658 88.5992 39.774 88.6226 cv39.731 88.6265 39.6763 88.6382 39.6373 88.6382 cv39.606 88.6382 39.5982 88.6539 39.5982 88.6714 cv39.5982 88.6988 39.6216 88.7144 39.6705 88.7144 cv39.813 88.7144 40.1275 88.6988 40.149 88.6988 cv40.2857 88.6988 40.6255 88.7242 41.3287 88.7242 cv41.5064 88.7242 41.5455 88.7144 41.5787 88.5953 cv41.5982 88.4976 41.6373 88.1695 41.6373 88.1324 cvf44.2642 87.1812 mo44.2701 87.1968 44.2701 87.2085 44.2486 87.2085 cv43.4087 87.2085 li43.4009 87.2085 43.3892 87.2027 43.4009 87.1812 cv43.7916 86.0074 li43.813 85.9429 43.8365 85.9429 43.856 86.0074 cv44.2642 87.1812 licp45.7369 88.6714 mo45.7369 88.65 45.7154 88.6382 45.69 88.6382 cv45.6451 88.6382 45.5669 88.6324 45.4986 88.6109 cv45.4048 88.5796 45.2701 88.5171 45.1021 88.105 cv44.8169 87.4039 44.0728 85.5074 44.0084 85.3277 cv43.9498 85.1871 43.9283 85.1539 43.899 85.1539 cv43.8716 85.1539 43.8462 85.1929 43.7916 85.3433 cv42.7212 88.1929 li42.6334 88.4273 42.5474 88.5992 42.3345 88.6265 cv42.2974 88.6265 42.231 88.6324 42.1978 88.6382 cv42.1763 88.6382 42.1607 88.6539 42.1607 88.6714 cv42.1607 88.6988 42.1861 88.7144 42.2486 88.7144 cv42.4654 88.7144 42.7584 88.6988 42.813 88.6988 cv42.8619 88.6988 43.0748 88.7144 43.1822 88.7144 cv43.2251 88.7144 43.2486 88.6988 43.2486 88.6714 cv43.2486 88.6539 43.2369 88.6382 43.2037 88.6382 cv43.1548 88.6324 li43.0845 88.6265 42.981 88.5953 42.981 88.5035 cv42.981 88.4156 43.0025 88.3121 43.0474 88.1929 cv43.3091 87.4312 li43.313 87.4097 43.3306 87.3921 43.3501 87.3921 cv44.3169 87.3921 li44.3404 87.3921 44.3462 87.4039 44.358 87.4195 cv44.7642 88.5035 li44.7916 88.5718 44.7642 88.6109 44.7251 88.6265 cv44.7095 88.6324 44.6998 88.6441 44.6998 88.6636 cv44.6998 88.6929 44.7466 88.6988 44.8404 88.6988 cv45.1607 88.7085 45.5845 88.7144 45.6548 88.7144 cv45.7037 88.7144 45.7369 88.6988 45.7369 88.6714 cvef48.4966 86.0347 mo48.4966 85.7906 48.3658 85.5835 48.2623 85.4839 cv48.1919 85.4195 47.9849 85.2242 47.4048 85.2242 cv47.1919 85.2242 46.856 85.2418 46.7505 85.2418 cv46.7134 85.2418 46.397 85.2242 46.1939 85.2242 cv46.1431 85.2242 46.1255 85.2418 46.1255 85.2671 cv46.1255 85.2886 46.1373 85.3062 46.1646 85.3062 cv46.2037 85.3062 46.2837 85.3101 46.3228 85.316 cv46.4634 85.3433 46.5064 85.4234 46.5181 85.5835 cv46.5279 85.73 46.5279 85.8433 46.5279 86.5621 cv46.5279 87.3765 li46.5279 87.8238 46.5279 88.1597 46.5025 88.355 cv46.4869 88.4918 46.4576 88.5953 46.3599 88.6109 cv46.3169 88.6168 46.2505 88.6265 46.2134 88.6324 cv46.1861 88.6382 46.1744 88.6539 46.1744 88.6714 cv46.1744 88.6988 46.1861 88.7144 46.2349 88.7144 cv46.3775 88.7144 46.7291 88.6988 46.7466 88.6988 cv46.7681 88.6988 47.1001 88.7144 47.3482 88.7144 cv47.4048 88.7144 47.4205 88.6929 47.4205 88.6714 cv47.4205 88.6539 47.4087 88.6324 47.3814 88.6324 cv47.3384 88.6324 47.2408 88.6226 47.1763 88.6168 cv47.0357 88.5953 47.0064 88.4976 46.9947 88.3609 cv46.9751 88.1656 46.9693 87.8238 46.9693 87.3765 cv46.9693 85.5015 li46.9693 85.4585 46.9791 85.4234 47.0064 85.4156 cv47.0513 85.398 47.1275 85.3863 47.2076 85.3863 cv47.3111 85.3863 47.5826 85.3707 47.8267 85.6207 cv48.0708 85.8707 48.0884 86.1539 48.0884 86.3062 cv48.0884 86.73 47.7427 87.0503 47.2955 87.0503 cv47.1978 87.0503 47.1763 87.0621 47.1763 87.0992 cv47.1763 87.1265 47.2037 87.1382 47.2251 87.1382 cv47.2466 87.1441 47.3111 87.1441 47.3384 87.1441 cv47.9908 87.1441 48.4966 86.691 48.4966 86.0347 cvf52.3521 87.023 mo52.3521 88.355 51.5279 88.5953 51.1236 88.5953 cv50.3306 88.5953 49.7115 87.9117 49.7115 86.8453 cv49.7115 85.8433 50.2603 85.3394 51.0044 85.3394 cv51.7017 85.3394 52.3521 85.9312 52.3521 87.023 cvcp52.8482 86.8882 mo52.8482 85.8121 52.0708 85.1597 51.0337 85.1597 cv49.7564 85.1597 49.2115 86.2144 49.2115 86.9624 cv49.2115 87.7945 49.7388 88.7789 51.0044 88.7789 cv52.1197 88.7789 52.8482 87.9253 52.8482 86.8882 cvef55.856 88.1265 mo55.856 88.0777 55.8462 88.0582 55.8248 88.0582 cv55.7974 88.0582 55.7857 88.0835 55.7818 88.1148 cv55.7642 88.2085 55.7193 88.3277 55.6548 88.4039 cv55.5474 88.5367 55.3462 88.5386 55.1002 88.5386 cv54.7369 88.5386 54.6177 88.5074 54.5455 88.4371 cv54.4595 88.3511 54.4439 88.0621 54.4439 87.3824 cv54.4439 86.5621 li54.4439 85.8394 54.4439 85.7242 54.4537 85.5718 cv54.4595 85.4156 54.4986 85.3335 54.6334 85.3101 cv54.6861 85.3003 54.7525 85.2964 54.7876 85.2964 cv54.8013 85.2964 54.8228 85.2847 54.8228 85.2632 cv54.8228 85.2359 54.7974 85.2242 54.7466 85.2242 cv54.6119 85.2242 54.2486 85.2418 54.2193 85.2418 cv54.1998 85.2418 53.8892 85.2242 53.6822 85.2242 cv53.6275 85.2242 53.606 85.2359 53.606 85.2632 cv53.606 85.2847 53.6216 85.2964 53.6451 85.2964 cv53.6822 85.2964 53.7642 85.3003 53.8013 85.3101 cv53.9556 85.3433 53.9869 85.4156 53.9986 85.5718 cv54.0084 85.7242 54.0084 85.8394 54.0084 86.5621 cv54.0084 87.3765 li54.0084 87.816 54.0084 88.1695 53.9869 88.3668 cv53.9712 88.4976 53.9439 88.5992 53.8502 88.6168 cv53.8072 88.6265 53.7466 88.6382 53.7037 88.6382 cv53.6763 88.6382 53.6724 88.6597 53.6724 88.6714 cv53.6724 88.6988 53.6919 88.7144 53.7427 88.7144 cv53.8834 88.7144 54.1822 88.6988 54.2193 88.6988 cv54.4927 88.6988 54.8345 88.732 55.4986 88.732 cv55.7427 88.732 55.7603 88.7085 55.7916 88.605 cv55.8287 88.4703 55.856 88.1832 55.856 88.1265 cvf57.7584 88.6714 mo57.7584 88.6597 57.7466 88.6382 57.7193 88.6382 cv57.6763 88.6382 57.5787 88.6265 57.5123 88.6226 cv57.3716 88.5992 57.3443 88.5035 57.3287 88.3707 cv57.3072 88.1773 57.3072 87.816 57.3072 87.3765 cv57.3072 86.5621 li57.3072 85.8394 57.3072 85.7242 57.3169 85.5718 cv57.3287 85.4156 57.3599 85.3335 57.4869 85.3101 cv57.5455 85.3003 57.5728 85.2964 57.606 85.2964 cv57.6216 85.2964 57.6373 85.2847 57.6373 85.2632 cv57.6373 85.2359 57.6158 85.2242 57.5669 85.2242 cv57.4263 85.2242 57.1119 85.2418 57.0845 85.2418 cv57.063 85.2418 56.7466 85.2242 56.5943 85.2242 cv56.5396 85.2242 56.5201 85.2359 56.5201 85.2632 cv56.5201 85.2847 56.5357 85.2964 56.5572 85.2964 cv56.5884 85.2964 56.649 85.3062 56.6978 85.316 cv56.7994 85.3394 56.8443 85.4156 56.856 85.5718 cv56.8677 85.7242 56.8677 85.8394 56.8677 86.5621 cv56.8677 87.3765 li56.8677 87.816 56.8677 88.1773 56.8384 88.3707 cv56.8228 88.5035 56.7994 88.5992 56.7095 88.6226 cv56.6646 88.6265 56.6099 88.6382 56.5669 88.6382 cv56.5396 88.6382 56.5357 88.6597 56.5357 88.6714 cv56.5357 88.6988 56.5572 88.7144 56.6041 88.7144 cv56.7466 88.7144 57.063 88.6988 57.0845 88.6988 cv57.1119 88.6988 57.4263 88.7144 57.6822 88.7144 cv57.731 88.7144 57.7584 88.6929 57.7584 88.6714 cvf60.5103 87.816 mo60.5103 87.4488 60.3912 87.1382 59.8462 86.7085 cv59.7154 86.6109 li59.3033 86.2847 59.1607 86.0835 59.1607 85.855 cv59.1607 85.5347 59.4048 85.3335 59.6998 85.3335 cv60.1236 85.3335 60.2291 85.5015 60.2642 85.5621 cv60.3091 85.6324 60.3248 85.7359 60.3306 85.7964 cv60.3345 85.8277 60.3482 85.855 60.3736 85.855 cv60.3951 85.855 60.4107 85.8238 60.4107 85.7476 cv60.4107 85.4312 60.4341 85.2789 60.4341 85.2574 cv60.4341 85.2359 60.4224 85.2242 60.3912 85.2242 cv60.3521 85.2242 60.313 85.2242 60.2291 85.2027 cv60.1119 85.1753 59.9654 85.1539 59.7857 85.1539 cv59.1978 85.1539 58.8189 85.4918 58.8189 85.9839 cv58.8189 86.3003 58.9166 86.6148 59.4048 87.0171 cv59.6119 87.1871 li60.0084 87.5113 60.1548 87.7046 60.1548 87.9918 cv60.1548 88.2906 59.9166 88.5894 59.5084 88.5894 cv59.1978 88.5894 58.9009 88.4585 58.8345 88.1382 cv58.8248 88.0718 58.8189 88.0074 58.8189 87.9644 cv58.8189 87.9253 58.8072 87.9156 58.7818 87.9156 cv58.7584 87.9156 58.7369 87.9371 58.7369 87.9859 cv58.731 88.0621 58.7095 88.2457 58.7095 88.4742 cv58.7095 88.5992 58.7173 88.6226 58.7818 88.6539 cv58.9712 88.7476 59.188 88.7789 59.4048 88.7789 cv59.6568 88.7789 59.9126 88.732 60.106 88.5894 cv60.4263 88.3609 60.5103 88.0074 60.5103 87.816 cvf19.4532 93.3726 mo19.4532 93.355 19.4424 93.3394 19.4102 93.3394 cv19.3614 93.3394 19.2403 93.3277 19.1641 93.3179 cv19.002 93.2964 18.9688 93.1753 18.9512 93.0191 cv18.9258 92.7906 18.9258 92.3609 18.9258 91.8374 cv18.9258 90.8824 li18.9258 90.0347 18.9258 89.8824 18.9346 89.7105 cv18.9473 89.5191 18.9913 89.4253 19.1387 89.398 cv19.2032 89.3863 19.2364 89.3824 19.2735 89.3824 cv19.2959 89.3824 19.3165 89.3726 19.3165 89.3492 cv19.3165 89.3179 19.2901 89.3062 19.2286 89.3062 cv19.0674 89.3062 18.7247 89.3218 18.6973 89.3218 cv18.67 89.3218 18.3282 89.3062 18.1485 89.3062 cv18.0889 89.3062 18.0606 89.3179 18.0606 89.3492 cv18.0606 89.3726 18.084 89.3824 18.1055 89.3824 cv18.1426 89.3824 18.2149 89.3863 18.2735 89.4039 cv18.3926 89.4312 18.4473 89.525 18.459 89.7105 cv18.4688 89.8824 18.4688 90.0347 18.4688 90.8824 cv18.4688 91.8374 li18.4688 92.3609 18.4688 92.7906 18.4415 93.0191 cv18.42 93.1753 18.3926 93.2964 18.2852 93.3179 cv18.2354 93.3277 18.1709 93.3394 18.1211 93.3394 cv18.0889 93.3394 18.0782 93.355 18.0782 93.3726 cv18.0782 93.4058 18.1055 93.4156 18.1641 93.4156 cv18.3282 93.4156 18.67 93.4 18.6973 93.4 cv18.7247 93.4 19.0674 93.4156 19.3663 93.4156 cv19.4258 93.4156 19.4532 93.4 19.4532 93.3726 cvf24.0176 89.9644 mo24.0176 89.9292 23.9844 89.9253 23.9297 89.9253 cv23.7413 89.9253 23.5723 89.9429 23.5176 89.9429 cv23.4668 89.9429 23.2247 89.9253 23.0157 89.9253 cv22.9629 89.9253 22.9239 89.9292 22.9239 89.9644 cv22.9239 89.9781 22.9297 89.9957 22.9629 89.9957 cv23.002 89.9957 23.1153 90.0074 23.1973 90.023 cv23.3379 90.0621 23.3692 90.1656 23.376 90.4624 cv23.42 92.7144 li23.2735 92.5621 22.8106 92.0386 22.3536 91.5523 cv21.6426 90.7886 20.9512 90.0621 20.8809 89.9781 cv20.8047 89.898 20.7559 89.857 20.7188 89.857 cv20.6856 89.857 20.6641 89.9097 20.6641 90.0874 cv20.6583 92.7203 li20.6583 93.1441 20.6368 93.275 20.5215 93.3062 cv20.4512 93.3277 20.3653 93.3394 20.3262 93.3394 cv20.3047 93.3394 20.2881 93.355 20.2881 93.3726 cv20.2881 93.4058 20.3155 93.4156 20.3653 93.4156 cv20.5713 93.4156 20.7833 93.4 20.8262 93.4 cv20.8643 93.4 21.0723 93.4156 21.3321 93.4156 cv21.3848 93.4156 21.4141 93.4 21.4141 93.3726 cv21.4141 93.355 21.4024 93.3394 21.3809 93.3394 cv21.3379 93.3394 21.2286 93.3335 21.1417 93.3062 cv21.0157 93.275 20.9747 93.1539 20.9629 92.775 cv20.9083 90.6539 li21.0547 90.8218 21.5372 91.3648 22.0762 91.9429 cv22.5665 92.4703 23.2286 93.1324 23.2774 93.1832 cv23.5274 93.4214 23.5723 93.4527 23.6211 93.4527 cv23.6592 93.4527 23.6641 93.4253 23.6641 93.1207 cv23.6739 90.4253 li23.6739 90.15 23.6963 90.0503 23.8487 90.0171 cv23.9043 90.0035 23.9415 89.9957 23.9629 89.9957 cv23.9961 89.9957 24.0176 89.9781 24.0176 89.9644 cvf26.7364 92.5191 mo26.7364 92.148 26.6153 91.8374 26.0723 91.4097 cv25.9415 91.3101 li25.5293 90.9859 25.3877 90.7847 25.3877 90.5582 cv25.3877 90.2339 25.6319 90.0347 25.9258 90.0347 cv26.3497 90.0347 26.4512 90.2027 26.4913 90.2632 cv26.5352 90.3335 26.5508 90.4371 26.5547 90.4957 cv26.5626 90.5289 26.5723 90.5582 26.5997 90.5582 cv26.6221 90.5582 26.6387 90.525 26.6387 90.4468 cv26.6387 90.1324 26.6602 89.9781 26.6602 89.9585 cv26.6602 89.9371 26.6485 89.9253 26.6153 89.9253 cv26.5782 89.9253 26.5411 89.9253 26.4512 89.9039 cv26.3379 89.8765 26.1915 89.857 26.0137 89.857 cv25.4258 89.857 25.045 90.191 25.045 90.6851 cv25.045 91.0015 25.1426 91.316 25.6319 91.7183 cv25.8379 91.8863 li26.2344 92.2144 26.3829 92.4039 26.3829 92.6929 cv26.3829 92.9918 26.1426 93.2906 25.7364 93.2906 cv25.4258 93.2906 25.127 93.1597 25.0626 92.8394 cv25.0508 92.775 25.045 92.7066 25.045 92.6656 cv25.045 92.6285 25.0342 92.6168 25.0079 92.6168 cv24.9844 92.6168 24.9629 92.6382 24.9629 92.6871 cv24.9581 92.7632 24.9356 92.9468 24.9356 93.1753 cv24.9356 93.3003 24.9415 93.3218 25.0079 93.355 cv25.1973 93.4488 25.4151 93.48 25.6319 93.48 cv25.8829 93.48 26.1368 93.4312 26.3321 93.2906 cv26.6543 93.0601 26.7364 92.7066 26.7364 92.5191 cvf30.4415 89.9468 mo30.4415 89.9195 30.4415 89.8921 30.419 89.8921 cv30.3809 89.8921 30.2452 89.9371 29.9512 89.9371 cv28.2032 89.9371 li28.1465 89.9371 27.9678 89.9253 27.8379 89.9156 cv27.7129 89.9039 27.6641 89.8609 27.6192 89.8609 cv27.5997 89.8609 27.5821 89.9195 27.5762 89.9468 cv27.5665 89.9859 27.4668 90.4156 27.4668 90.4624 cv27.4668 90.4898 27.4805 90.5015 27.4952 90.5015 cv27.5157 90.5015 27.5274 90.4898 27.5489 90.4585 cv27.5665 90.4253 27.5821 90.3882 27.6309 90.3062 cv27.7071 90.191 27.8165 90.1656 28.1036 90.1597 cv28.7725 90.15 li28.7725 92.0796 li28.7725 92.5191 28.7725 92.8726 28.751 93.0679 cv28.7344 93.1968 28.7071 93.3003 28.6153 93.3179 cv28.5704 93.3277 28.5118 93.3394 28.4668 93.3394 cv28.4415 93.3394 28.4297 93.3609 28.4297 93.3726 cv28.4297 93.4058 28.4571 93.4156 28.5059 93.4156 cv28.6465 93.4156 28.9668 93.4 28.9893 93.4 cv29.0176 93.4 29.3321 93.4156 29.5821 93.4156 cv29.6377 93.4156 29.6583 93.4 29.6583 93.3726 cv29.6583 93.3609 29.6465 93.3394 29.6192 93.3394 cv29.5821 93.3394 29.4795 93.3335 29.4131 93.3218 cv29.2774 93.3003 29.252 93.2027 29.2354 93.0679 cv29.2129 92.8726 29.2129 92.5191 29.2129 92.0796 cv29.2129 90.15 li29.7774 90.1597 li30.2188 90.1656 30.3155 90.2632 30.3379 90.4097 cv30.3477 90.4742 li30.3536 90.5406 30.3692 90.5582 30.3936 90.5582 cv30.4141 90.5582 30.4297 90.5328 30.4297 90.4957 cv30.4297 90.441 30.4415 90.0835 30.4415 89.9468 cvf32.4942 93.3726 mo32.4942 93.3609 32.4854 93.3394 32.4571 93.3394 cv32.4141 93.3394 32.3165 93.3277 32.251 93.3218 cv32.1094 93.3003 32.0821 93.2027 32.0645 93.0738 cv32.045 92.8765 32.045 92.5191 32.045 92.0796 cv32.045 91.2632 li32.045 90.5406 32.045 90.4253 32.0547 90.273 cv32.0645 90.1168 32.0977 90.0347 32.2227 90.0132 cv32.2833 90.0035 32.3096 89.9957 32.3418 89.9957 cv32.3594 89.9957 32.377 89.9859 32.377 89.9644 cv32.377 89.9371 32.3526 89.9253 32.3047 89.9253 cv32.1622 89.9253 31.8487 89.9429 31.8204 89.9429 cv31.8008 89.9429 31.4844 89.9253 31.3321 89.9253 cv31.2774 89.9253 31.2559 89.9371 31.2559 89.9644 cv31.2559 89.9859 31.2715 89.9957 31.293 89.9957 cv31.3272 89.9957 31.3858 90.0074 31.4356 90.0171 cv31.5391 90.0386 31.5821 90.1168 31.5928 90.273 cv31.6036 90.4253 31.6036 90.5406 31.6036 91.2632 cv31.6036 92.0796 li31.6036 92.5191 31.6036 92.8765 31.5782 93.0738 cv31.5606 93.2027 31.5391 93.3003 31.4463 93.3218 cv31.4024 93.3277 31.3487 93.3394 31.3047 93.3394 cv31.2774 93.3394 31.2715 93.3609 31.2715 93.3726 cv31.2715 93.4 31.293 93.4156 31.3418 93.4156 cv31.4844 93.4156 31.8008 93.4 31.8204 93.4 cv31.8487 93.4 32.1622 93.4156 32.418 93.4156 cv32.4678 93.4156 32.4942 93.3941 32.4942 93.3726 cvf36.1231 89.9468 mo36.1231 89.9195 36.1231 89.8921 36.0997 89.8921 cv36.0626 89.8921 35.9258 89.9371 35.6329 89.9371 cv33.8829 89.9371 li33.8301 89.9371 33.6485 89.9253 33.5196 89.9156 cv33.3936 89.9039 33.3438 89.8609 33.3008 89.8609 cv33.2793 89.8609 33.2637 89.9195 33.2579 89.9468 cv33.2461 89.9859 33.1495 90.4156 33.1495 90.4624 cv33.1495 90.4898 33.1602 90.5015 33.1758 90.5015 cv33.1973 90.5015 33.209 90.4898 33.2305 90.4585 cv33.2461 90.4253 33.2637 90.3882 33.3106 90.3062 cv33.3877 90.191 33.4961 90.1656 33.7833 90.1597 cv34.4532 90.15 li34.4532 92.0796 li34.4532 92.5191 34.4532 92.8726 34.4317 93.0679 cv34.4141 93.1968 34.3887 93.3003 34.295 93.3179 cv34.254 93.3277 34.1934 93.3394 34.1495 93.3394 cv34.1211 93.3394 34.1114 93.3609 34.1114 93.3726 cv34.1114 93.4058 34.1377 93.4156 34.1856 93.4156 cv34.3282 93.4156 34.6485 93.4 34.6719 93.4 cv34.6973 93.4 35.0137 93.4156 35.2618 93.4156 cv35.3165 93.4156 35.3399 93.4 35.3399 93.3726 cv35.3399 93.3609 35.3282 93.3394 35.3008 93.3394 cv35.2618 93.3394 35.1602 93.3335 35.0958 93.3218 cv34.959 93.3003 34.9307 93.2027 34.9161 93.0679 cv34.8926 92.8726 34.8926 92.5191 34.8926 92.0796 cv34.8926 90.15 li35.459 90.1597 li35.8995 90.1656 35.9981 90.2632 36.0176 90.4097 cv36.0293 90.4742 li36.0352 90.5406 36.0508 90.5582 36.0743 90.5582 cv36.0958 90.5582 36.1114 90.5328 36.1114 90.4957 cv36.1114 90.441 36.1231 90.0835 36.1231 89.9468 cvf40.2095 89.9683 mo40.2095 89.9371 40.1998 89.9195 40.1431 89.9195 cv40.0084 89.9195 39.7427 89.9429 39.7095 89.9429 cv39.6822 89.9429 39.3873 89.9195 39.1822 89.9195 cv39.1275 89.9195 39.1119 89.9371 39.1119 89.9683 cv39.1119 89.9859 39.1314 90.0035 39.149 90.0035 cv39.1919 90.0035 39.2798 90.0074 39.3169 90.0171 cv39.4712 90.0503 39.5181 90.1265 39.5298 90.2847 cv39.5357 90.4312 39.5357 90.5406 39.5357 91.2632 cv39.5357 91.8277 li39.5357 92.3003 39.4849 92.6871 39.2701 92.9468 cv39.106 93.148 38.8379 93.2789 38.5547 93.2789 cv38.2911 93.2789 38.1006 93.2359 37.8711 93.025 cv37.671 92.8335 37.5411 92.5621 37.5411 91.8941 cv37.5411 91.2632 li37.5411 90.5406 37.5411 90.4312 37.5508 90.2847 cv37.5567 90.1207 37.5958 90.0347 37.7188 90.0171 cv37.7735 90.0074 37.8106 90.0074 37.8438 90.0035 cv37.8711 89.9957 37.8829 89.9859 37.8829 89.9683 cv37.8829 89.9429 37.8711 89.9195 37.8184 89.9195 cv37.6827 89.9195 37.3555 89.9429 37.3106 89.9429 cv37.2696 89.9429 36.9356 89.9195 36.7295 89.9195 cv36.6807 89.9195 36.6641 89.9429 36.6641 89.9683 cv36.6641 89.9859 36.6807 90.0035 36.7032 90.0035 cv36.7413 90.0035 36.834 90.0074 36.8711 90.0171 cv37.0254 90.0503 37.0606 90.1265 37.0674 90.2847 cv37.0782 90.4312 37.0782 90.5406 37.0782 91.2632 cv37.0782 91.9371 li37.0782 92.6109 37.252 92.9371 37.4805 93.1539 cv37.8067 93.4644 38.3067 93.48 38.4649 93.48 cv38.7364 93.48 39.0943 93.4312 39.4263 93.1382 cv39.7974 92.8121 39.8619 92.2574 39.8619 91.7574 cv39.8619 91.2632 li39.8619 90.5406 39.8619 90.4312 39.8658 90.2847 cv39.8775 90.1207 39.9205 90.0445 40.0455 90.0171 cv40.1001 90.0074 40.1392 90.0074 40.1705 90.0035 cv40.1919 90.0035 40.2095 89.9859 40.2095 89.9683 cvf43.649 89.9468 mo43.649 89.9195 43.649 89.8921 43.6275 89.8921 cv43.5904 89.8921 43.4537 89.9371 43.1607 89.9371 cv41.4107 89.9371 li41.356 89.9371 41.1763 89.9253 41.0455 89.9156 cv40.9205 89.9039 40.8716 89.8609 40.8287 89.8609 cv40.8072 89.8609 40.7896 89.9195 40.7857 89.9468 cv40.774 89.9859 40.6763 90.4156 40.6763 90.4624 cv40.6763 90.4898 40.688 90.5015 40.7037 90.5015 cv40.7251 90.5015 40.7369 90.4898 40.7564 90.4585 cv40.774 90.4253 40.7896 90.3882 40.8384 90.3062 cv40.9146 90.191 41.024 90.1656 41.313 90.1597 cv41.981 90.15 li41.981 92.0796 li41.981 92.5191 41.981 92.8726 41.9595 93.0679 cv41.9419 93.1968 41.9146 93.3003 41.8248 93.3179 cv41.7798 93.3277 41.7193 93.3394 41.6763 93.3394 cv41.649 93.3394 41.6373 93.3609 41.6373 93.3726 cv41.6373 93.4058 41.6666 93.4156 41.7134 93.4156 cv41.856 93.4156 42.1763 93.4 42.1978 93.4 cv42.2271 93.4 42.5396 93.4156 42.7896 93.4156 cv42.8443 93.4156 42.8658 93.4 42.8658 93.3726 cv42.8658 93.3609 42.856 93.3394 42.8287 93.3394 cv42.7896 93.3394 42.688 93.3335 42.6216 93.3218 cv42.4869 93.3003 42.4595 93.2027 42.4439 93.0679 cv42.4205 92.8726 42.4205 92.5191 42.4205 92.0796 cv42.4205 90.15 li42.9869 90.1597 li43.4263 90.1656 43.524 90.2632 43.5455 90.4097 cv43.5572 90.4742 li43.563 90.5406 43.5787 90.5582 43.6001 90.5582 cv43.6216 90.5582 43.6373 90.5328 43.6373 90.4957 cv43.6373 90.441 43.649 90.0835 43.649 89.9468 cvf46.4751 92.8335 mo46.4751 92.8003 46.4712 92.7632 46.438 92.7632 cv46.4146 92.7632 46.399 92.7847 46.3951 92.8335 cv46.3619 93.025 46.3072 93.1168 46.1861 93.1656 cv46.0689 93.2144 45.8521 93.2144 45.731 93.2144 cv45.2798 93.2144 45.2154 93.1539 45.2037 92.8394 cv45.1998 92.7418 45.2037 92.23 45.2037 92.0738 cv45.2037 91.6714 li45.2037 91.648 45.2095 91.6382 45.2349 91.6382 cv45.3111 91.6382 45.7759 91.6441 45.899 91.6597 cv46.0787 91.6773 46.1216 91.7632 46.1373 91.8277 cv46.1548 91.8863 46.1607 91.9429 46.1607 91.9859 cv46.1607 92.0074 46.1724 92.0289 46.1939 92.0289 cv46.2251 92.0289 46.231 91.9742 46.231 91.9429 cv46.231 91.9097 46.2427 91.7066 46.2544 91.6168 cv46.2623 91.4644 46.2896 91.3609 46.2896 91.3335 cv46.2896 91.3062 46.2759 91.2945 46.2584 91.2945 cv46.2427 91.2945 46.2212 91.3277 46.1861 91.3648 cv46.1451 91.4097 46.0787 91.4253 45.9693 91.4332 cv45.8619 91.4429 45.2896 91.4429 45.231 91.4429 cv45.2095 91.4429 45.2037 91.4332 45.2037 91.4 cv45.2037 90.1753 li45.2037 90.1421 45.2095 90.1265 45.231 90.1265 cv45.2798 90.1265 45.7857 90.1324 45.8619 90.1421 cv46.1119 90.1695 46.1548 90.2261 46.1861 90.3003 cv46.2134 90.355 46.2134 90.4468 46.2134 90.48 cv46.2134 90.5191 46.231 90.5406 46.2584 90.5406 cv46.2798 90.5406 46.2896 90.5132 46.2974 90.4898 cv46.3072 90.4312 46.3189 90.191 46.3228 90.1421 cv46.3384 90.0132 46.3619 89.9585 46.3619 89.9253 cv46.3619 89.9039 46.3501 89.8863 46.3384 89.8863 cv46.3189 89.8863 46.2896 89.9039 46.2701 89.9097 cv46.231 89.9156 46.1607 89.9253 46.0689 89.9292 cv45.9654 89.9371 45.0201 89.9371 44.9869 89.9371 cv44.9654 89.9371 44.649 89.9195 44.4419 89.9195 cv44.3892 89.9195 44.3658 89.9371 44.3658 89.9644 cv44.3658 89.9781 44.3834 89.9957 44.4048 89.9957 cv44.4419 89.9957 44.524 90.0035 44.563 90.0132 cv44.7134 90.0445 44.7466 90.1168 44.7584 90.273 cv44.7681 90.4195 44.7681 90.5406 44.7681 91.2632 cv44.7681 92.0738 li44.7681 92.5191 44.7681 92.8726 44.7466 93.0679 cv44.731 93.2027 44.7037 93.3003 44.6119 93.3218 cv44.5689 93.3277 44.5123 93.3394 44.4751 93.3394 cv44.4419 93.3394 44.438 93.355 44.438 93.3726 cv44.438 93.4 44.4595 93.4156 44.5084 93.4156 cv44.649 93.4156 44.9654 93.4 44.9869 93.4 cv45.1216 93.4 45.4654 93.4253 46.1646 93.4253 cv46.3443 93.4253 46.3834 93.4156 46.4146 93.2964 cv46.438 93.1968 46.4751 92.8726 46.4751 92.8335 cvf34.3692 96.4214 mo34.3692 97.7535 33.545 97.9937 33.1416 97.9937 cv32.3477 97.9937 31.7286 97.3082 31.7286 96.2418 cv31.7286 95.2418 32.2764 94.7359 33.0225 94.7359 cv33.7188 94.7359 34.3692 95.3296 34.3692 96.4214 cvcp34.8653 96.2847 mo34.8653 95.2085 34.0879 94.5562 33.0508 94.5562 cv31.7725 94.5562 31.2276 95.6109 31.2276 96.3628 cv31.2276 97.1929 31.7559 98.1773 33.0225 98.1773 cv34.1368 98.1773 34.8653 97.3238 34.8653 96.2847 cvef37.6778 94.6285 mo37.6778 94.607 37.6602 94.5894 37.6446 94.5894 cv37.6221 94.5894 37.6016 94.607 37.5743 94.6168 cv37.5313 94.6285 37.4551 94.6285 37.3672 94.6343 cv37.2647 94.6382 36.2969 94.6382 36.2051 94.6382 cv36.1836 94.6382 35.879 94.6226 35.6719 94.6226 cv35.6192 94.6226 35.5958 94.6382 35.5958 94.6675 cv35.5958 94.6871 35.6124 94.6949 35.6338 94.6949 cv35.6719 94.6949 35.754 94.7027 35.792 94.7164 cv35.9454 94.7476 35.9766 94.8179 35.9864 94.9742 cv35.9981 95.1226 35.9981 95.2418 35.9981 95.9644 cv35.9981 96.775 li35.9981 97.2203 35.9981 97.5738 35.9766 97.7691 cv35.961 97.9058 35.9327 98.0035 35.8409 98.025 cv35.7969 98.0308 35.7422 98.0425 35.7051 98.0425 cv35.6719 98.0425 35.667 98.0621 35.667 98.0738 cv35.667 98.1011 35.6885 98.1168 35.7383 98.1168 cv35.879 98.1168 36.1778 98.0972 36.1993 98.0972 cv36.2208 98.0972 36.5411 98.1168 36.7969 98.1168 cv36.8458 98.1168 36.8672 98.0972 36.8672 98.0738 cv36.8672 98.0621 36.8633 98.0464 36.836 98.0425 cv36.7911 98.0367 36.6895 98.0308 36.6231 98.0191 cv36.4883 97.9976 36.461 97.9 36.4434 97.7632 cv36.4219 97.5679 36.4219 97.2203 36.4219 96.775 cv36.4219 96.3843 li36.4219 96.3511 36.4336 96.3453 36.4561 96.3453 cv36.5313 96.3453 37.043 96.3394 37.1563 96.357 cv37.3028 96.3726 37.3741 96.4605 37.3956 96.523 cv37.4122 96.5796 37.4219 96.65 37.4278 96.6988 cv37.4278 96.7222 37.4376 96.7378 37.46 96.7378 cv37.4922 96.7378 37.4981 96.6929 37.4981 96.65 cv37.4981 96.6168 37.5098 96.4058 37.5196 96.3121 cv37.5313 96.1617 37.5586 96.0621 37.5586 96.0367 cv37.5586 96.0152 37.5469 95.9957 37.5254 95.9957 cv37.5098 95.9957 37.4883 96.021 37.4708 96.0464 cv37.4278 96.1031 37.3672 96.1285 37.2598 96.1382 cv37.1934 96.1441 37.128 96.1441 37.0518 96.1441 cv36.4561 96.15 li36.4278 96.15 36.4219 96.1343 36.4219 96.107 cv36.4219 94.8843 li36.4219 94.8453 36.4395 94.8355 36.4649 94.8355 cv37.1778 94.8453 li37.3633 94.8492 37.4551 94.9332 37.4883 94.9878 cv37.5254 95.0562 37.5372 95.1265 37.5372 95.1656 cv37.5372 95.1988 37.5528 95.2242 37.5743 95.2242 cv37.6114 95.2242 37.6114 95.1929 37.6172 95.1656 cv37.6221 95.1109 37.6348 94.9058 37.6387 94.855 cv37.6504 94.7261 37.6778 94.6597 37.6778 94.6285 cvf42.1314 96.275 mo42.1373 96.2964 42.1373 96.3121 42.1099 96.3121 cv41.0708 96.3121 li41.0533 96.3121 41.0435 96.3023 41.0533 96.275 cv41.5318 94.8082 li41.5611 94.7261 41.5865 94.7261 41.6138 94.8082 cv42.1314 96.275 licp43.7896 98.0699 mo43.7896 98.0425 43.7681 98.0367 43.733 98.0367 cv43.6802 98.0367 43.5982 98.0308 43.5162 98.0035 cv43.4029 97.9703 43.2447 97.8843 43.0494 97.4 cv42.7173 96.5738 41.8638 94.3296 41.7837 94.1226 cv41.7173 93.9527 41.6958 93.9273 41.6626 93.9273 cv41.6314 93.9273 41.6099 93.9605 41.5435 94.1382 cv40.3091 97.5152 li40.2115 97.7867 40.1041 97.9937 39.8541 98.025 cv39.8091 98.0308 39.733 98.0367 39.6958 98.0367 cv39.6685 98.0367 39.647 98.0464 39.647 98.0699 cv39.647 98.1011 39.6783 98.1109 39.7505 98.1109 cv40.0044 98.1109 40.3033 98.0972 40.3638 98.0972 cv40.4224 98.0972 40.6587 98.1109 40.7876 98.1109 cv40.8365 98.1109 40.8697 98.1011 40.8697 98.0699 cv40.8697 98.0464 40.8541 98.0367 40.815 98.0367 cv40.7603 98.0367 li40.6685 98.0367 40.5533 97.9878 40.5533 97.8785 cv40.5533 97.7808 40.5826 97.65 40.6314 97.5152 cv40.9556 96.5523 li40.9673 96.523 40.9849 96.5074 41.0103 96.5074 cv42.1802 96.5074 li42.2056 96.5074 42.2173 96.521 42.2271 96.5406 cv42.7349 97.8785 li42.7662 97.9644 42.7349 98.0132 42.6998 98.025 cv42.6802 98.0308 42.6646 98.0425 42.6646 98.0621 cv42.6646 98.0972 42.7232 98.0972 42.8267 98.1011 cv43.2017 98.1109 43.5982 98.1109 43.6802 98.1109 cv43.7408 98.1109 43.7896 98.1011 43.7896 98.0699 cvef46.0474 95.6929 mo46.0474 96.0367 45.9224 96.275 45.7642 96.3843 cv45.6607 96.4546 45.5357 96.4703 45.4263 96.4703 cv45.231 96.4703 45.0162 96.4371 44.9498 96.4 cv44.9263 96.3843 44.9166 96.3687 44.9166 96.3453 cv44.9166 94.8785 li44.9166 94.8492 44.9263 94.8355 44.9537 94.8238 cv44.9986 94.8121 45.1334 94.7964 45.2701 94.7964 cv45.7486 94.7964 46.0474 95.1343 46.0474 95.6929 cvcp47.6334 98.0699 mo47.6334 98.0464 47.6236 98.0308 47.5904 98.0308 cv47.563 98.0308 47.5025 98.0308 47.4166 98.0191 cv47.2974 97.9976 47.0904 97.9214 46.8521 97.65 cv46.5884 97.357 46.313 96.9859 45.938 96.4976 cv46.3521 96.1168 46.4712 95.8082 46.4712 95.4644 cv46.4712 95.1441 46.2916 94.9156 46.1724 94.8355 cv45.9283 94.6597 45.6451 94.6226 45.3501 94.6226 cv45.2095 94.6226 44.7681 94.6382 44.7212 94.6382 cv44.6939 94.6382 44.3619 94.6226 44.1548 94.6226 cv44.1001 94.6226 44.0904 94.6382 44.0904 94.6714 cv44.0904 94.6871 44.106 94.7027 44.1294 94.7027 cv44.1705 94.7105 44.2486 94.7164 44.2857 94.7203 cv44.4166 94.7418 44.4712 94.8296 44.481 94.982 cv44.4908 95.1343 44.4908 95.2418 44.4908 95.9644 cv44.4908 96.775 li44.4908 97.2203 44.4908 97.564 44.4712 97.7574 cv44.4556 97.8882 44.4263 97.9878 44.3345 98.0093 cv44.2916 98.0191 44.2251 98.0308 44.1822 98.0367 cv44.1548 98.0367 44.149 98.0582 44.149 98.0699 cv44.149 98.1011 44.1607 98.1168 44.2095 98.1168 cv44.3521 98.1168 44.6939 98.0972 44.6998 98.0972 cv44.7251 98.0972 45.0474 98.1168 45.3013 98.1168 cv45.3501 98.1168 45.3619 98.0972 45.3619 98.0699 cv45.3619 98.0582 45.356 98.0367 45.3287 98.0367 cv45.2544 98.0308 45.1822 98.0191 45.1177 98.0093 cv44.981 97.9878 44.9537 97.8882 44.938 97.7574 cv44.9166 97.564 44.9166 97.2203 44.9166 96.775 cv44.9166 96.6675 li44.9166 96.6402 44.9263 96.6285 44.9498 96.6285 cv45.5142 96.6402 li45.5474 96.6402 45.5572 96.6441 45.5748 96.6675 cv45.6666 96.7867 45.8834 97.0953 46.0787 97.3453 cv46.3443 97.6949 46.5044 97.9214 46.7056 98.025 cv46.8248 98.0894 46.938 98.1168 47.1978 98.1168 cv47.5416 98.1168 li47.6236 98.1168 47.6334 98.0972 47.6334 98.0699 cvef50.2408 94.6441 mo50.2408 94.6168 50.2408 94.5894 50.2212 94.5894 cv50.1802 94.5894 50.0455 94.6343 49.7544 94.6343 cv48.0025 94.6343 li47.9478 94.6343 47.7681 94.6226 47.6373 94.6109 cv47.5123 94.6011 47.4634 94.5562 47.4205 94.5562 cv47.397 94.5562 47.3814 94.6168 47.3755 94.6441 cv47.3658 94.6812 47.2701 95.1109 47.2701 95.1617 cv47.2701 95.189 47.2798 95.1988 47.2955 95.1988 cv47.3169 95.1988 47.3287 95.189 47.3482 95.1558 cv47.3658 95.1226 47.3814 95.0835 47.4322 95.0015 cv47.5084 94.8882 47.6158 94.8628 47.9048 94.855 cv48.5708 94.8453 li48.5708 96.775 li48.5708 97.2144 48.5708 97.5679 48.5513 97.7632 cv48.5337 97.896 48.5064 97.9976 48.4146 98.0132 cv48.3716 98.025 48.3111 98.0367 48.2701 98.0367 cv48.2408 98.0367 48.2291 98.0582 48.2291 98.0699 cv48.2291 98.1011 48.2584 98.1109 48.3072 98.1109 cv48.4478 98.1109 48.7662 98.0972 48.7896 98.0972 cv48.8169 98.0972 49.1334 98.1109 49.3814 98.1109 cv49.438 98.1109 49.4576 98.0972 49.4576 98.0699 cv49.4576 98.0582 49.4478 98.0367 49.4205 98.0367 cv49.3814 98.0367 49.2779 98.0308 49.2134 98.0191 cv49.0787 97.9976 49.0513 97.9 49.0337 97.7632 cv49.0142 97.5679 49.0142 97.2144 49.0142 96.775 cv49.0142 94.8453 li49.5787 94.855 li50.0201 94.8628 50.1158 94.9585 50.1373 95.105 cv50.149 95.1695 li50.1548 95.2359 50.1705 95.2535 50.1919 95.2535 cv50.2134 95.2535 50.231 95.232 50.231 95.1929 cv50.231 95.1402 50.2408 94.7808 50.2408 94.6441 cvf52.7076 97.2144 mo52.7076 96.8453 52.5904 96.5367 52.0455 96.107 cv51.9146 96.0074 li51.5025 95.6832 51.3599 95.48 51.3599 95.2535 cv51.3599 94.9332 51.606 94.73 51.899 94.73 cv52.3228 94.73 52.4263 94.9 52.4634 94.9585 cv52.5064 95.0308 52.524 95.1343 52.5298 95.1929 cv52.5357 95.2242 52.5455 95.2535 52.5728 95.2535 cv52.5943 95.2535 52.6099 95.2203 52.6099 95.1441 cv52.6099 94.8296 52.6314 94.6753 52.6314 94.6539 cv52.6314 94.6343 52.6216 94.6226 52.5904 94.6226 cv52.5513 94.6226 52.5142 94.6226 52.4263 94.6011 cv52.313 94.5738 52.1666 94.5503 51.9849 94.5503 cv51.399 94.5503 51.0181 94.8882 51.0181 95.3824 cv51.0181 95.6988 51.1158 96.0152 51.606 96.4175 cv51.8111 96.5835 li52.2076 96.9097 52.356 97.1011 52.356 97.3882 cv52.356 97.689 52.1177 97.9878 51.7076 97.9878 cv51.399 97.9878 51.0982 97.855 51.0337 97.5367 cv51.024 97.4703 51.0181 97.4058 51.0181 97.3628 cv51.0181 97.3238 51.0084 97.3121 50.981 97.3121 cv50.9595 97.3121 50.9361 97.3335 50.9361 97.3824 cv50.9302 97.4605 50.9107 97.6441 50.9107 97.8726 cv50.9107 97.9976 50.9146 98.0191 50.981 98.0523 cv51.1705 98.146 51.3873 98.1773 51.606 98.1773 cv51.8541 98.1773 52.1099 98.1285 52.3052 97.9878 cv52.6275 97.7574 52.7076 97.4058 52.7076 97.2144 cvf%ADOBeginClientInjection: EndPageContent "AI11EPS"userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse%ADOEndClientInjection: EndPageContent "AI11EPS"% page clipgrestoregrestore % PSGState/BKDDAB+MIATRAJAN-Regular*1 ufnt/MIATRAJAN-Regular ufntAdobe_AGM_Core/AGMCORE_save get restore%%PageTrailer[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5Adobe_AGM_Image/page_trailer get execAdobe_CoolType_Core/page_trailer get execAdobe_AGM_Core/page_trailer get execcurrentdict Adobe_AGM_Utils eq {end} if%%TrailerAdobe_AGM_Image/doc_trailer get execAdobe_CoolType_Core/doc_trailer get execAdobe_AGM_Core/doc_trailer get exec%%EOF%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 11.0%%AI8_CreatorVersion: 11.0.0%%For: (Jill M. Blumer) (Minneapolis Institute of Arts)%%Title: (Ford Free Sunday logoSmall [Con.eps)%%CreationDate: 5/18/04 4:27 PM%AI9_DataStream%Gb"-6$""@hdQ%/RJb]dANIj\VqZ85o+[H53!>4*@,QgG$'!n*Lci*M9Wnq@Ra\5%2pHJ&,1Im[uSmJF4lftM<@^4XZo\,kmFg_7Q%on$eDG/:JCJnF=L_0/eS=FB!dnjeO7,u)io/6['Fh8Aeqa`6epgFLsSY/-H/rRU&Tmu7j5rK]Ydeb\,$E3rrMG+5Vgd-F092[8cl%S]]&Oj[3U/mE!&6FIU0EOaZ,*qsF$-Po]1bdHULerp['N/iY-l@E&Ibo(/f*mB7>I^F=E*fBQ,brZQC%DsuJtlOgjM0$(egrUC_Z%$8$r:;4ENarB!2tjho7?ah`G>T]oXRG$8+$P,eU_GANb$CELlH6Q`KJe:Lk%4nrI'O-H*;N+p'<f85`s6=i"Q=tLVh]^8^8`?I`-%2dDK=Bi_`ri@0@uZY0(Q@(8!2&"DTS^\;5l@dh7M)g%QZT@&7+Q=/9$%=X%]@:`kFBK=nt$9D(BlSo'oA+'L4nc.nLJ&C>*>FjW\%5J!P0GM$WWfrY\'a.7^t1hrnEIjjr&de/BfHQ=@>1?BSUlsmftGLm56ppSReie4>mdFd>+rPlE.Bb%?F0p$[q42I&^(L36=g7R0f%2?33%PT$cWK7VoAl(=-qC*jAA0NFlU]811I.0(=&+B;,f3&%&;9b;">>\@nhUj\5'O-O-R]F>,.it,nn@+`$Xo[Ylmf1NL='\4hk%U*R<5m'Hj%FnC8YIuls]gs@.(s.TAq'TC(]O&C,6f<4f8&G&0_`@B)P%nNAJ^S^J<^W@F.DDG&&.>Cq'1[0u!&[^Be$_CY<*]F&h%@;anAV;:Zsn7GY&%,l?>#+X6.G+7T>ZS`Wtjo'1sg\/eq]U2Ur/A>fG,#(s>)$jUU6ugcMs&Eq@Aa&k_;L+1%mZT;hZ;3^X6_F57%dgiLo6d'R<ANHPZO&W<Iqm:13QL0IMp-mXumE1(tS^=*pTVtb[LpHF1osI"8\"SGg?Z#nYbG2=,m,BE_ILD"7Ho^G7rGd,0*$PRk%2eDdDY1[StFob6'_LPHe]A2Z^rW0=7)4,mtg\tK"G[%%n&C$JdrGgT,.TbosK2K*<\krTDd%--`3k\*]M#[F7h^dSYia='0NrRoW%[]b(WWmgS0hfm=BCXU1/G_%3W=mLParWib^mf2)nqu:DRRs3qc5[Bp]ZO7k2YHECo42#/`XsYpRr`t$/orlBOD\Nk6\(_eYa@?>o%jlHi?N!^dfp/er_7iLX"ThAtsNr2<O),O!VjhK/'a_q3M!o'9\3_1@pB`dJ\ia5d)-CrQ\ACr7m-(H1U9n">;.HRT?%%*.^Zs4Y;%48h&M#at"/cRt\3?Z_D-!_(-grQ,=96n)2(,[(`W]0[sA/im(3W7dm6SM7VBLdF21ciG_?&?:ePqgb"-9M9aC=7_ioC?&!I7\+S`%CH<&Oc.3Hj*Fq;^enbqQTI`et=t/?&HIpF#jK@7-N.DN:4o_tGC;P2;8Y*prlbg]`#aE>T@38fR2+#5\^";PENNum#8=0YqUZ#F&%s7;g[Y)e--IJg@jBXZ+`5,QSj8*o\c->`ZiJ%n4!D]27DjJG.pf44YYm78[UARGA)rOoU?LEAA_J*?[F^`OnZS">,Yls>g(r0]Bs%0_seeUC!WL+k@!PK=r2.?UJc3mK^L3%f<_amh1@U-B&Fa9tKB1T_jdJ5!"GoJNnf^'ZPueTIZkoS(q:9$_;(sDS+dp"<jJt"=`Hp%*W2,L>=\cC.'ialOuN7cU[9B8XNp$1+[S["_0'sW1],MV`pY@8e=eN0c2[KmI55Ik*&^2mOT&dHD"8D?Hdi)e)?JC(f04$RV%;/4%,r5\`M#@uY%gi?W?r.tfRfoQm$pie/gPSn3_F23[_"9-gR)3^-:#H,Mr';e#_Q56KO%O\).3Bu"6`'\en-A"S1CZlSb,7l-Mc)_@%Jq07Y["CC)O!tu"iSSHV$ncMIl7g`jqOuLFI(&l=?_Jq`hSTRP*^Dp]*l\XB!+SX3UQg6YAO%OM#JPj'!/^t7,#A_&E'P4=Vj.3Z%b'tpQ^_4la^M2Fdn'R6q*ps>5G?]2,C*h6K7!C.JGq2R8.nk@A;Z3^O"g0NgY(Tfb''O:g.<1&VECHgG-)S_JYTd-M9s-0MXtX.a%KU'(\BQGJsc5!5&Q*<SV!fa?:Q*)g3XtZ]TUhFn)a_carFeqdbKPPabX*03]FsTuQ8r@dn!qi]!qHYPV%Y]WAr(!`u!jp.YI&D/l%$@2Q1''OV`$W0Z,^\reDF>kB!)L%Y+G392<%YX+QPBM:,m'e>olur^#*ojoKG9P576rZBmjNbMpM/;/ZM=+G3b$PHhIm=%]7ggiF%qB)^S5jSGZ4l,\@j(?L>:gunE,-1d[c6\Zn'fL[Z::U4?5[%P).*NZ-,5-O"2$fG^,#CTQJKeo^DZAUCmi"&N0MU`H5Ijns;`kqL%P\g;n7#_:;@N?RTPe]IZ@KqDsZOi@WM4gZu#YN`?:mdN@"D38&li`"[$;-2PTJ0;1@CCb#2AX@RU4,(0ANmFU&p$>Np4?0P^Lbk_%9a6=*$qana-tO_lA7gJ2lir.]%csKL:ek1"F@CHFQ!+m+#ibPGU!i@9qBu:OI-$i0CQ.KcRUZV8KO8Q3K-=/tE+"n22-3/'42cOJ%o5WUhee=PYMe8#j=@(=sMt9V.o:.MH_!`o;R"DK/N''+C(3EL:o5\jKceW0IHVpYi7ttnYA*O,SX$aZWXtu@A!PWP,%_EC![6<kP%#!9N!^9UEd;`M^LjfisUK7DYjWl)sBVJsuPG?5.!!pgZ("^_b[iR1ZZJ?nG4#8PK`GHD2BK1P0#93/ae]kAe\gSkY!;LI[5Fc]tL%hc%8mRhS^KlXf^RW*Jo4oG.^(F@LI?`?@eAmjs?HM<]\S*JnOpY<g5&^pN-5VH1.e?hK1uTrB?bHLEN%gE2*q-m0Z)$=B7>6!C\K%4()'m_$\5HcI`XS\plY(7q^fUVE$n\U*Sh3&.W.J=Bh933*N$0$bbCdh?<qg?<H(Ys"<eJ$cd`Ua/tgG71(V["hd`L/)M%@H*+#F%G\Z_a_,D^W6Z&L>8Yc=Mn/1Y^jK[XJiGls!_W/I2+\riER\J?>/b7EMBkRr]Knn0Pj*q7q-@%.eCj6rj\F=b4<6/!lVZtJ5^88W+%3]mkb@Ar8'mU/3M58,(G*h,8%4>&`;4;IEdiMjZ"7@q(f=,_m]0NI]%R'8BB()-_Si3CDa^uN;lOf&7V'qQ=h[c".&e%eJY<-Ss3%3%!&kXMr'VD"9RT\F=b(WPDGdVad70Gj=cTn?Gu<1^,R,:d`6USY>`7Ih"RnGs$=$n5RM.K4bR`](-VKQ->=_AqnM:R>qK>#W`8=%5s@ecKqNcc?s+`,2&TEqUC';"Q(bHXn>?l2;4Q;B<uajjJt7W]MF!>4$REOW'f,>@)m`"gC5O1GA8"t,,eN$65]/VX0$K1V3,fkh%nXKqK<N"tq3H`;T\15oON6$N`ZN*FSMuS'?`N?^/GK[,#%Cb;q5d<AsLIl*qp)MEO4KmaE]c'";?JTBre;C+'*?kNP0O6RnjAro#%r`?5O.U/0aV#cO-aOPjW9UJSe$=0XB<NfT*<i`Xn<j`E5"'A1u8iC(.:?L<63AhTkWmn%+r,8W:Y;Lk)1a$p/XpO`.D`M%i(3F,g%Z;o_\D/F.KX<P.)D4iolfKlR=>E,aG]W+8[$5@XA,9&g)Tb8BG;eli@H4-1?6=V&nl9OAF:p0oud;!F(;6;@qbo1]5!o8$nq_el$%KE:<k0X]>Z@;`o#X"\?#&E!O4/3o!lW6m)pf)T&m!R@]q4V+d\Gd[Z%2$(6K+B\kif)b7r5^rs7_1`3#@:Dot+<;e$FW+!qk,noE%X2&P_0WR+UXpMG9_gJM."3;>cTE_2g!KqDQ1i+9I'8T'^U/?Jhl9Ifr@&=9)V@+)M"/VDNEB6pf$J\bh>-%a!<e*5:TMetpE]&De%FWb',6pVit?3AWY!/\<Q?oCip$.Q-\(T>+[Fl8/rn4*ZW`!)1+JTFNC+<>\u"T_\+J@TD[#o-i,(YI";U,PA-ko`)g&>h-[+C5)>%.UYYu;1Z*)Q9d(=CRA2::qW_:;&iBhVBHFoUL9d<"^`6"`JYVJW/e1LVe)Q'\a'd?JGQ<N6D8Ci1V8Ad8s[+52?ku2W$^PjT=+f2%WPG.4^Qf,h`6(=Op0l8GJR:UV5CN^umt+^;=SVSW/[VeXOg52`@@%rVNe6Ss7c>s$E?)0d#7qG<W=\uB02^&edY"^$ZmuC.Ve[jC%"@Y0$Pj=Vt>P/P:Q;gM$$>[0!;aQY#eiWp6I2!l2E:&g$BmQJM1p@<K=fG9HFI,sAPuJl9;Q3uS!\Sq?PoQ@%'WtCcJPN[VV3)Rq%dJsGo+Z^D0]+s`<l^F0A74eO9d99/6C)Nfs[H+9dNoRN?]&OX4qUC\qRPqA!9iUDF--N)iF%W#q^B_-Ecq,bm5f9oPPr]so`cU#>%&k/WT8##%D!f<4EEXdp-%9%DEPt$lQ%%kk)Xn(EQKFcs@N=q+'$H.cN7-Q3_I-dhJkd33A[hoHoW(o8WJX/R\k^87378MSN&2L+O%6%'Lc;NjO4XTT87UI@n@oSe_Y;:JY>&r:@)/'NedKVU#Oim:r\ZPc76)EaBKJd,,',"sB7&qkNKmt'FqV?)ON]#Y3aL9d94,$6Ld%X=ObgX:[BjQ6JU.i1R.bY1EiV:<N]V$)u:W=9Y7M=<C(:)a7e?]nBu4-P/2o&9=m,E_OhD9T/uJFPET:B'M"2#dt4r_5GoF^c6LQ%aq[I:,P\SS''BA<]AFa3Xhrs-[Llucj(s?rAScu)GEIQ06_G[,)3kg8f,R#.4?IutH$6h3H$9)so'H,pjB6S:!dVdu#"aWs%+:F,%OCCK/>--#VM-5q!4FRPRH)uBo]Ya53iTpsMMc^KtDFA;r4=5c%09[S:-tZ?[PV\4hiC+o';C%5/j=\tpgkD&sBG!pS!]Ii-1[RN)%)o+YKl"DfE<bTJ9gad)n_mrmY4c9rGiHZaN\g7eQ\d0*uWhZm-J-J-fUiZc,h.C_a-823f3)A+7(siC\9LEqNK`8-JG,&L_,S^>`%+:<4G!Kghq9VH]=G>ka+=L>/9!it+R5h.bE-M/;,69PS6nNcZ';<Y6)7'KU1/Q*?S%-pNF1:NsfAjJH_XXUP8/uBVP;8*'_9QMW5%FN65K5kYW'pFmXU\)h:!auRJS]Oi"?9deG@'bdY$1(B9WK*lC1q+,bT#oqbU^$f\Sa-!:KR5SJ?a@l\r@/1Mu<[t-Y;/p(=mat'L%6,f(nmI3/1_dseuA!`#QgWJriKES$f@\s\PQWjDn4;XXf5aK^95#^uq0=Kg69+9cs?Ek(Wp^7Z3VB1lu1PgH9P&62W=J0W"PFGKK%<@[2]F>!\aj3-#AnL&(56\?;'6j)@ngp0JP-Ht0q5p=;\)eU-^d'.YqIlKF7/^T#6/`8TVI(C]/EKA1!dBp_nL<8!U1/BO(0PnQ<%L8H^5-?IIK2j`9:VF=#r4u,8f<=D@,_DQmPD*;'#V(3NhV+QE/791GI67/g=F@hREmO=8*@*&CJ:=qC:$/*h'dP0l!#IYJH@";:b%/<3]m[9>IGV@lEc)uVt=C!B5>+Yj0&bld%a`Q4-8[goGe?$BfjroK`Y^;)oUKLs$X$"922ruNGTDHKSk"COKXMCV0ERUHLV:pk#C%3R\F7$2dH&h0<Y<Gek)jAj`M7)t]]')0%>Ieu#Kh?3D-V=?%!KBH9r/bUo%@/mE,03B'ee+!BYVNH-@RJQ`*h-bJFQd;RC\+e/[f%2o@T]#4I4bU'\%B`ec,2(h&qj\oI*Ui$?+2)9.LVE2&)+Jcg,il4g>tG\KttnS7k"pQWiiMs>SU_)-_H<RhKdoDjJaBPO+TVfFeb%dm1:[#V3\)=9W4Y%%Gfflm&fi$+-S@eA-Y.^M?^[+CJZD&Ja5M(98N&RANiiKR]+A.lQ[]3qH&/Y-&T?@XXqr)o7uCnZoUfR`rHs%IM*!p0H#Lh-9T0k@ah\LJ:V1-@$c0o9H.7l]WC4.7R9'@ie2jT4t6buL@>e:9/'liPs+)C<B#LQ)]6n]`XiinWC$q11d,-B@'[;=%?.1plUfA6M&cQ;Xb`YD!d@q*oJd9iU-s5)+5%IG:lX6)W+D$EM+D[6E3\GKG[29ri6as#d#(^\/Uk:WS6cMQsME1kr0SkAZ<^+#T%q<[]--]osNNg-M!dBXr7%r<ePqAr<A:gf\!bt`%K6(/M(d]#ctN%-d3fFpZ17?F75,V@!n83o1siNfkAmVkL3*H(lX(u5Q..3=b.%U`n!i/HI3hMY33*7BG7JWOGHSop!Rs#pgB7'+l4_WoXPkD.t=K9bpn47*Xc^.YK%.PgtSKJ1>YniYJY=PH<(qA8<MH-7%V=e0%(W%+q.EiK`P'k6O6Z4=%lpl&.)ObSnh7Q=W/Iqf[o*dJ\'0!8\JZ%*\43FnUTYD`7bW5KE:n#%2T7G<D2:YML(B9\nNP7L2,gUKnY.k%:f@`lTUIn\ZD5jNU?SheU(3oK!c?cb.+#9Ed.^MfikRBCUC"=*79If2M*rXV7WS`5&L:HgRl6b<.M*#3-O4G*rJ3^(Y=>G7__i(G%,;>nQnPK;W"dQTPmBP*DZ4j#LRq>u164u'58J2r\Kdt7)'XAcqBYcI!'CarrUdL15+:9A\E1ThGcHG34q*7m*P!gK!_]V*;$Efn6%:0GQOIEY]+JFqr*E@LlpX_4Xp@k$$j4p;L[/k$K^Ari.SK;t4<?&R5?6EUkQBGesX-e4*'Gn+C?"R8sBJfN3D4e8K:0Tn:)dI,(6%>jR)^ZFFj14Ibcf_!3"2kqJ`fD<d?Bi-UhQ.^N.$EMefK;b_n2eQkXK]'1s+;:-5Y5ji)HhD$if!>)/!Ba_bg`e5ep%%9q."s>]T%&A<gndJfTeM[YHde0o&77cR'60IHLT0Faa0TkoOAA+GI4YuI#\Ug?_Ynkn/[k9H'33#*p%+YK.15V^a(.FTFd<B3pSLs7ag4'`[Z%_&ZI`eGKK9(T)tJ7LQVR<9@=>D0//0gjh[8D,4J!'mq<r!\P&F*nA5Re*+_!foF'G&&+bp@9I'59IEXAANU-c,n'gK?rI?![-je"%Nigd0eVD<c$8cR#B?%X*@F._-AFS4!ClJuAFG9rA:"=?QLk))R1"N(f&R!<=$SQ><dD?A1dg!tF3UHkOfrRO`J8ADeL;N:Vg=0G&%m]/C2qaBeG$=H""(=WfUjhSASg-lBc-HBZ.`PYOt&1T"N!B$0T;qe[%C)#)'E%od>`q9S''8._Nck0ig:QUla=\7RMTjWq6RAl1*%kpfVm3XR/;1oX?gJ@#CEXhf>,]Xi2igef:314TI]3p`N_L-SSQLS-_._B@3G:#9*6_^O3rYY\5Rmqmi49u@_'F/<`8]lqL;[,b07%Kdju,TMD@F"+0Gkit0"Z8LTrt)$&@p7?0i[1Bhg=!m.8'!auSV\5o?Ym>+uk2As_Y`BqC_.&UcYUpg&Uf.s]EQiV>hop+jP-kMsG%U&kA(i$U0nfrS5tG"g9c`sMk3#Qfs!<4jH;R9UHiH$!<$?8m..L03?l:9)FYR[Df(BuWM]M;j&BF@8$M"P%>0D_4.19W/%q;u%E;%<FZGNBf9%PL)Eru)n]KPi<WE9HkEfM;F*rN*1Uap_9rN69M.2+4]%Q%a[Y+,&?4qgQnU"D,r'B[:jqF\LFe$cn\UT*/o#G3,S:Zr%/FtFrV?6f!ks5KaCN)F-fo/ngnHr5q<.N\hRZVEY"T+(=W_Do%5lkbAAoHEPpt5A0\hkfsF/h/mPDKV%U-bL1aqePg;1WL;^UG9\%So8<[<"Z@/T#G\Dh:.SoBZ]Fk9c0t:4i?44;ANUA!]a.:8$M*Re0BLuC)W"q_&-iTq7=b#3pq4?"p)qQs%#j`"sT/ZMYK#u,S7A^%W'I-J0*#VFCbdk@]FU#I^.5dp!7L>0Z^S`(QUl3,+-pNE@55A!;4peVj-;_MW<d)eMh<nTNq."Q/IajF;0&>I25o\X;+88Y8$-B[%`e^K>5gp;[6mnZST:96:9S6R+6lcV_C>*LFRcj03do;l^:1pY@J@)!OJ.89mfG++PA&;h;"/)JG,F4%6:a!5`8Ka1p^bT#%Xs8fb%4LU#^g_$2lKn4X"83dC`1Mqla1)q)%UnVLRTn%u>k$m9tj$>m<b^`BPG_12QkaH<V&m,8K0Xi)o"ZeHl\XekQKU."'!eop<@M]nF%KOWA7*\-;S>]FGC+B-bOL(OV@;]miK?u0%)UW<J%T\`.9<4=lLn+*/Z1-F`kCPIYB.nG6eecT(W+E;E6TPF_,@.KJ@i<Jrn(9c?<%9O=#E%L>m42,UELLPESJ!/Na4\58'*%(@YK.[tu,d'Yu2UF%':=k3dB?EYY[4s\FQb7NnM'7^R[p"'5VJBo*94O=t@Yn<eH\Bnoo%M59Rbciu]8M@*<a^hf>P"Kc>AhZmPA#rafu.rGg.b^c?'(Sosp?b76/+?"QGfrPQk_ZYgpo<+gS8mpEf@$@]'d'V1\-%O?MCE!s2%-qtO1n3n*9-]c`ObC):%pe3DS0[KQ*"qlsnX?nD`UB(@RqT2?s<hNZ+b]HLM%*o\eh@LrL1W>:\0[:;sk6.ZHA+HQp'!/s#A<BBs%=#C$>nHue^'iY`p3D4V6Xb!QkM[H3Vhi`nO5fhD[A>3oqIdrGXfHpN8ZMUAs>R+/P:*'+'1[?68;5:BDglueT+#D1.Bl#7U0b=>3%Cu5>3;-fDt2PJ+lL8Yls6M3)BUE2@HZD(BZb%"="O%dN7+L)cY_&R"$+:&+03+P1-#Vp(p%q:+5(;=1l9ald^j:Fg$QcFi:1ND%Y%&?)'B(g*^NC=j1B:f'sh=Ul&uU7O7)EFrb_8-DKCActs"V'CSC\T"iH.^PsJAJol\C-%S"['4'AHkA;hR'Ada[L>@7*Xh'Udr&p5%&tgelBuGTK4$TUf`ETR1V\s=@#]s_C4Bfc["(T9T9HLBIS"_Hr]5\sU]*&s;UTN7o9N*g"EZf11ql,l2^5inU9?n&QYl]BBDp\[h%iEdXgI,$j(Z)]3a'W0a'BK'e2_75u[UhaYH_5KJm@-XUVT]*,?N568B"R%T`R35?-gZ8I?AW$n_(CI9IS#\fgB8AfSaCEQffEa#q%(ua8:CXSkiL4Z(p^qBbVQZ!09p2u`-LmDV2%RAk0."EV&W5'"-!LV.X.aV</%(>Rr:-qT;2gj%YZ!b#>(upgW1M;qHpRs#W%*]u]%3)oTM1?Uh2LGCY%,!6nN^k/]`65*aqpg.Uf"\s<=-<t^"jt!jTrIdHQY35ji"#HTP[tkAjeT'9<kq#HOEk)\#gaif]1ndZLZ&-AM%jquH"R28uS\R?&ZJ2PLZN0"U<0=:7r3am3i)G!Oe90P#FKQ42L9-^n?KJ?EJ%':=^DP.U%K$#RS1a,-V\d2Z#M#18A1BuIbCh@Y>%:\TI95dWkr\t!1JIIWb>N(k+1)L%9g%m2oV$s"o30?]kG[W&j)!J.jl`T#<NM88EJ*"HS(17E4lA5N"@!Jth`W!T5[JD!s'1&;m@%Pg)U=!rX_HXRPJk6jV9#.k-O_lZF,dc;k]-7lZXE<#;5KYsq)F$m)cig9rLO.Bl/$p7s:1/uEEO;.ULHC0\pqYUS)4as/&\Q0T"p%i59p"BH\LjE`M/2>8TUb0"qb"FFssJmXISS9adB"bXLU?UHTQWH'kh;E)"\u#m,3c/Z?I-=hWU:+R9Z,PpP"6F;A'Nal0R<#VS!\%TIuT?7#f6tg@3b+>,/pJ'^.5$2-@TH@9'03YGiP@10gen]E57Ye539cAM,G<^t`Fu$EkmJ>FDAP!VNh)&1g"\AG:n33IZ*_W"YiE%<?[\C/>SX(.9Ck>i70bQhhO%1#j<,ApB&KOS5a7nbq7^WPKlHe4uI`51qG@c.Sf)&fnbDKo82S%b4GZHMpD.B0g)&)KG&gAM5*(K%#Y]dpd[\kPRKD\lTOA(Q(':Ok`u?6]3k>>T="pYl2QmsZ:V!XmU9)8S_e/d4(jm\ZO[oEge3h0PSEh@Dn3!D`:G!SSGh!A(nJL1\%%hNP26\@JIYZ;Mg`.fe5K9gn"6H[MLSIjn'?OU(";+8a;$#44ERj;783n/I$5fX5U-!SjOpEY-S!\KHH%\='EJZd;5f=5ok0QTG4%_.jT50N\K:$S3Dpfm3qFo`98if[O/<_pVeZe%Pg.b^jBT9i@Z]KVSm#+^Ebm!^4j-+YSKrKW\#o`->F;kGGMdjl@\ojDttcLrh-%%XB'S=40_8CT1KP-YU,TJHmqa59Lt\)c5j!PcLt<BQiSdoQW;^"(4eRePM#>uJcO$n(HPic;P</dU'GcXb(*t$ckF$u%\MH_6q!KM%_)j\R8TgP2;+*cs.%"282KS^lTVmZ48l7+?\Ut5U?rO/&Fl$2bq'6X+Db9,f9;<+kPQc(Y`WZKBM<MjO1(!#tBa-1!QGncOlF+qR%aF)/52uF]a\#-3<'(,,X[3Zr^09fG@Vh[Nm2eI%c1'.je"bK/HRNWSZN^B!LKFFgF@:6<*j08RaZ:DaO`QN;b*Pm<inK)qkAq@*'%=pQ+>#W`+=8ch.#=C:ANNQVu102edl;\%Gp2`V0rq:s>r1^k#i7R@@-'um*`f\C#L,<3YO$c3\AYSsTM9X+P5<gI<oU21%9`aU16%Q6$jq/r`II@$<)X[\Q0]pmuek$-_IVPCRq#Ks8f%kc$*FNGLhc%T!2IJ_W.>Btq`bYmkT?#+E(ZqNdOA*_Qkc5h-2ETLi'g3LBh9%,_sO=PUGJFe<$FM$Kc+*O*RH'^87%?P0XT.8t?)=ilVOtmm`*`".h2g>8KC"(),ao&2mm`J/IBF0jKpp-&[a6[#P9^-n26>>M+[m%%4]1<G3EG]H/(',5f%_V`QWkVP#b.4]$Q$Ik67DH).9h2_`>s&P0PjhcF17=)!p&J);q'p[;_rHh&mh*:)LpNV%k+T<8`X1p-;6(%@[prLDoq/f=P"F$[tRY\#P5hlfJUubAFK'U;Oq`P,;3`I"Qc&B?<Dk9h^/NUUc/@N]6jmkQs`s?n,NN4.khc,?rcqh@hqjNi$&m0%>9+1fgSNP,94]hS+p,X>efGnc_h%&+)$-f$_"0l'8"eeUG=;-LBF'pV7lE5i@EUCt@*b8JnPG<2WKdi:QM`2"KpI+,VTM_>j*?q-%k(l)rSFO+##,?C]V@a(VS!LHaZmJVa/)kqm;[_6u'eqkg.^>BB6@di@#m2b<fS+H:W01^r-8-hMQ%\>9(>]]/jSTgI<LKEaAtb\h%,ZKYuL(Y3)AIaXVir#RX71jk!4<E$@U*M/6U:qNK1*'"TSbVp`4f/7R9T.P,\6$8Z\N2VR/c!nL_P2]bRDb5/'?4W:2G>nbq2VRC%eIFX0\M?"ohCboqLb&OAT#SSbG>,%g'&O*[8J*(+(e"TXG@I%TXYV(-bVH.2L\F%m69qf>luKip$%-4B&nO4-jkF!%&^_:aP8#h.%?-]3B4CJ_-;_D-_4J^X="boI=]%FFN.3p5LVjC.E90P-T<u?kodAV+b3)qLNZK9a`d>(H-V=K9U>;\BgM-YR(A"b?C*6`pKk9ePZ%ScJ=D!(5it/csVg0`eX^Me@YtcP5Vp#R1\]%om%8i#s$/a@2*.I+%9Al/>f^Z^3+S/YH3EUf0[4((W>K4t]]`/]n9[#6@XWKXd"9%5YF9o?'_XFdaFt+^+bNp.mkb*SjNTT6menY?+m,Y:6Vqs\=SWH26o)6dk/D)'1"[Zc45=X=i:[#YGQ%B'+='U&HPdJU.og[4L%!9%\uYrC-6_A0b?r7=1q"^kd$P'h#KGg7NGar?X@DE>$q']4n2D!D?*$>R^*&nIK)sW!b'oD2Nu7HklrcH7&;sZG7qRQ6rE+EE7!jW"%K7t;cqS5fpP5*?)D<rC+KB1<6_<p_d?j(MBK#;G`(bSWQf9A8Oa>RW3_ph=$RgnG/pa!-Dm_st$#gFXL.2kR5Xmna[*0[t,Bm3:2%2$O8=alccIfh#*^/-pqVZ'l*a`,AB;7kgS!q,2&'5KF(e,SQ!@(UaBQoXuX@DdmB`0Pe>9N(!)Ci"/2:p6b3S"GCOrSJli3+dcic%&MVlUglo4Ua0X00&gU6C1sn#q,d5/'p-ggQ4;ih@r+IpBT&s(pPPNXIVHe:`(+H@h4HG7F>p.=H]GQ:ul[n>9P-cB1Ib:rd!'TH]%$RH$L'5M,M3"F\9-^GC+3_H,t<03D3P7mhdN8J!+"oE?p3s#Kn2Wb]>+B*Y+FX+$1dN<5p$)OGSlVFFOKlV)uKFL.7mYrZ;5;>=\%A0k><_2BM`4Nb*UOG+Kfn2ulROIaaK#>5pMdkJ]^E0g_!a<PfrMOdD,7qDj\6/h$!*ZEr?.pPdO3k?Nl%7AU47g8)`#?XnaR/2/3%jtI;[iAh*e*/'-Z,?nWa$c,"anN,.=*-/J&++iNnYg!suGYT[iH>Z$+(TPYFM=/#h62nL:4)Aq7QSK%Kg'NBlOJesEJ<Atr5;9so%oN6><3?s/0T8A\+23]K>GQq4q]OLNbZ:tptH8'*hN@W;Ud8_7EX]ku[Wq5n"O>#VAeVs:[crbe.Hcb8?HI&Fg)$Y1fLDL@m0g<E=%r.^SH^:i^VS0Bk?[bpGu9`_Lr,.NE(kH0kpTciT\a61)4S3XHj0YpKq*lFTh*703oW_/>:_qoDJWZjV,g=!N]4uP!p(e;l$>(\m1%fd1f\=:WNLFP.h'#hb,$*9'o$KYbQ%.?Qp\f6CE897C&sLW2M=U[Y19gF=JUPhIC-TF=J1`IfHoG/t+X8TGD+m"-<eJ;6fR_[;Ze%9jIN1Snqr#UQ6CM"u+F<%U#YC5K9Lq:bYNkMO\SDi^oOrY<jNq12,/s_9!Z$5Lkt:2"5tAC2K1J<\T=ml-OAYTG=mLHF.:g-MD8r%AV^/eF<6dg=4m.Y.p\ZuJVFk%)i&o=!n!BZ,Ri4:Xo-rhH@-n;;f]?$=5;oX*RO!]4@RD#6$&Kn'p&)5Tdlb!BR<roJJ5%=9EhNn%<fB"O?b,i)!e`q9+t$;DQ`&%$2+U7%daQaFpT51$ZOe9(KeNuF6QOsdnaoWm"Dm,<Q,T5fHGUjdK02Jd@@R%94?J;b&2]>_)j=8R%4,Rn0@#i&7[V^eG,9tj\^07Ds7S5^d=JP%JX2GZ#<C;[Q3t)V'D=OB7_P;-&C@4NFO.Y/h/<84`PLD#po?5IEbm?r\(9fZYe;d_l%X4S!5`YB3@GD:f4G:)%@39JY"X6K[U`ae;h?PY80n;%btF(m08UbkYn-?HnU^^b\^g#8#p0AB2%YcZ?;i34r$pr:09NTUIc+K^uA%a[XDk0#KjSBfm>pQ<>7=DP^Lc^]s5h6(E0^WBp7._FVVI<oU0?@[7/4et`Q^aVPT1UU/*7AFWq>Cq4ZX*!P'UJ6]DO@5+@qkmW1r%)QQ3NfHgb61,'(fZn.N<8q7fhg:&d,M)m=AijE1(FQc1YKlXhq*'m[ic"Os3dV.\kL61uN@`1?!"=jVP#biKT=94>2_8Deac4q?:%O.67Y.2atULI;VN/YX23^E/crV(n]Q+Kf.@P:m%CN0>)t"L=['!4q/$597;Zi.nu9]eRlsGW`3!KbRa?=GAduf]>,iQD)^D2p!dX%#2^;UJk_^B3F1^Gidl%7?tS6RY!6%$0l%h+^G7nm1dt;:8\LQ/8h+8s5*k>]Csi%BN\p=Edd0eJ5VP,?0KX_V"6-ZOf/d\-:`R^:%JI&+C5QG#)8PU8ddB^3"Fm0=R,Z^!(cEV.p!Y6pbLa>RE;!D[lQ\D-<I6j=k-ST>`&08@;B=)*Wm!MI3+[X)d#^'$"M:Mc)6p`T^%1#u^LV"leYTFb/O$3IG!2r42%?llgLJM\@+9TAGn>e#+8L'XY'"P.5t-^Th$8?^sm0eJj8c4gp8"*,NKYUio7KgiGB4XX,?o5[Y9%7B-bB1:$%rO:h;JUpGDQGZc6HJIO.A?6L!c5h,P<c!6G?`Inj+$cJk2WT6^Cfjt1$f*4&>491QB(j>>ZC=DtbqG*IhJ_<T+"H5E]%?48>0?bhVncbssp3:WL`)NQ\["cMl5/5%<p,rs;i%1GVM&VkUM0^EPA\L2KWB7M[E8q:`9aea?Z&KjSF9o4Bd'B:qnbU!EL5^iDI%9U[1uQp[h4M!!\@OJXVg+mjC!CHGL/f@U^iGa/AM2[2`C8Aj.Jb8HY;bT2F@Tf=]1-.$mOe7P`#:TJL!OYD/O9.,5qn,Q!l>9*7\%_-KM5Ce$^g_U:9TFpK!RO\&GPUE'_p>op[RJ0`Mn1tjW;KJ9W'AI(XW>8GnCqUH"'5YNjjQDX5l('iEbr"5N'#rh6KL0Maif=oRn%imHf'mimk#j2/]qZt%.'alC;QVnA5R3=178q[QO`fKQqp$m"s_G^Rb&ZDm($&$5sQ>D2/d=>od%Zct40+WKd8?Z__L-_kJ(>$Gh!%`I'Uh5cZ>WOA'hPT>_=i+R:r3@Y\K_[c*))*0nf_4'8p/^O/9LSqdiTf#5&6dEO<:O<>)fbbAk\QDfU&$=]i#lnCH.?KIT]/D/#j%623"CXq7-^N@eMSF0IUj<eo&2.`DNT8D.u_Q@/(=[-M2udcK.%P)^pX3oF'In=#bY,7t@nSUkY9d0tKgI.1XB'/RnZrO5>u,FN7G%S9<'l-tj+=D=]H-CpGW(SB;kI5u,0!4)J*dKG(#f\Y[Gl_BO5c?6><XjX;:Yo=cLr0BlYZAp4YVGQ1C;9tfb":*G^M^O%YYE-cnJ%#^>kqhXS:Tqn/h]8'd?XSJVk%8K<D;2gE[o1K)"nlGl\um4n-kMfEbO+PSsa<Cfkn2[j\)#Qm-u]tbk9'Q+8F=0a3WH]Rt#__:N#%2;<sHMJ$hmHLh!i'JQR5hP^G3laUfdpcgpB=qD8W!b34FlNKIeP-0uQ(8cc.pE61A7h7Hk/XQp9ltq>L^mZ%:?4lW]4]%]%pEJP2%oJ,!d'2]#Af5b,B8li"uBjf?8rFj;X!%j?&H5Sm)k-fr7P$hTdS>J8&#@/MQ@n[WP7>cfMEU[9;*,Z:'";\Qc&.s\.M[sMDP#B8q%l@[t67A_[;mmY#X2\NSC#RH\AQ<_@!^nRP";2]S#)i4!D-[K;23cT!o0IrMojP[]W=H$R6T7hk]9tc7ti<PPk3f$?=,?YLO9(P;)%KITOoMb:/9l'Kd:.EK(!1b]GGl0+iUYu/FJ5_`pS!>=$1DSfl+8$\E@3m8;c/UgWV/+*R[q&)T1mDJ9%Qap7u`1][&OZQiBMg8Be%?nT?!0INI_:SXeLO'%4:C[a_OE\.\Ucd8IB\`'IW4s5&_m.*&u7Z:.[^FH>a(hROL:(Ia7.QQHa-!jR+^_]?^3?!Vi=9=>Nc!rIq%8AoT!KEjTS,0;d:5,o/0?0WVnUW]<C*)"+&/E25*lit0(Mk1YP+:7a]m2,oh3?IPP0oeMFrL[p@Uf^3YI@e(o7;%D#7PIE:>u>m]%1W(L+XRZ?EJP!M66taOYLGA$s1pf#i8b?E;e(mBY`9U5Nf8a@(J/p_38`Y+.@)OckY'ltJ\o`iJj#(()L.U00[`mYt'R&jOc++;B%;1aug64A`@\2f5VJ=Api$b/3M^+_JNfF)\?#^ZS28$EeKEs-gj2[@tCEH?ZD&2shB%!-K?_@SYI'S^j8JsY2c+uX6bB!TX^KHBSL%@N>/f+4>esLLb`>\Z@;l+bcmOA0E6Or<\Tu*&>c*8eM@h*Do-CA5aXH*,JD.66%U>JgF#/]O[Bh=Pd,H%']C-D%L*<1g%D!PVgH>%AXkSnIe[<81jI[ZBo!%e3(iU1)XcD(/W1q3PLE;%(!@r8,2(XV%(mAWUGJ('`4-V_,R#0fUaN]0Mn$c3PF^OI`>6^\0ZD$dq-EUe%;>%FlJ'(sRkOG#"S#\(YQ;.OK/P?abe'clbBVDd>O$YQ[&.@MD41nXt98];J,&p`[)b]J(*%_XGAQ>43JPg`("GI)SdHb@7(c]TA%]Z1<PFUcr6G=^+;9JO\AS_euMJf9jf`A@qFi?gE\fGJREna'HmJOunBq+VFa>GYtY@_FlQ7AXYKdWu3M&.?S.=KN>JG9HIK0I\HM%C#XXqSYk#@O\I:e`[.$r3\.4fCc$e4Ie%>-&faN[Wm79?#^^$im<2VQr#?T<Vn$;UH(:g);m-/[3+o-CRDK!-@sU:&d``7^a"o&F%jHRfb4\:U"N`*M<=,,b;:2AYLpR9!L$L7[q`oEP>Q*llDq05$goWASFeS:r2RbSqVa%\+r;Kr?K2rIKq=u>$]fO[A*Ig\a)jJR"*%N?2Lh91Xmr$.Z=5H<2@8'9XS67\Yh%3jb^HghACSS"/mdi'%?8&3KS*W`9LOpIrBT/p/?;V&V.#eDZ>D%"<Xa7U:m21qZ^]8/::%%`je(##)_G+n[OO!k0:,Q?3R,&,lZ(*ds9*%I/V6o@RuhCQ@;?s]ut\T`%\gqe8rl>/.O,ZXH=&(S"8MMdSk!rQgiWNN?(;[U_2][%I[l*dPMI#(VhLMnmee-h82r,;7Ni6M&rt-GCF%iO#aia;K<#7i0.dEa.d9Nh<q*L9*5I6.H5[#_Ns)5rN+D2D&5sq2@A-%u'Lagr%L9Q:4aQ`XQ?G+oTW/1tI--rf)GWfNC(qCXt7CpL*VX.i0<G,GSTcSqcjG%\h6s4P['g8H`e4J"VQb,Q\!gg#[2sJ^elm<Z)?M:#4%a?sM@/;^Z#L^A`hq@K;`kcA<\VH[4>!\a9E]gL_.0egGt)?gdP%_kj6#9b9UlqZL%_<#UM2--"nmJ`qh+E\Ja2LE\aIonZI[f,1-%oQLK8ZI\Ac44hC4i24t4,u=C9DRlF>Ku(9<n5g;&SR-E7Ybiu#niAF2R.^P0X39cT<MbqhYl%@JdVEJsDA3;NWc<mh7appU,"h1K%d\No-TBM^9>@bCBW^aHXc7EmDE@dM9>#J?s?;cpJA@@XZ5g@RLC#jtNV?<@e9@4_-MLus(aA&@#HPLp/)%QOn9?MsGHu':2rF)u?%W@D0BYR+QWM1Fh*Shp]Ocu0^c6hPAG/5)s*rI]S(5-L.>\YR_UIra688QCJX:<t"nJ$R[r%/k'I\JR%@o`or>]M^-a_%RCt$PkiR%'+G!i&0U`U?J=][5W[p)L._I/<!?(`l?k/gU51Yn!&kU"D1i^^(*9V]4Z[!GQ2[tdC;EjW/o=g>LmCF!OWp:%L^iC:LE(D<FD@Ug%"!1:VY\9i=btP5ED-?mW[JZY6R-G8_%&@$n@[kZGC#]0X"3khYNbGa&(C:NLpW3@F79WTk7X>'prf7W"X9\0C]*IJJ]*!+a@$,b*%VLd.S76?(mY?V>ds%KIui"%h,_K4tP$n;6JhmJ&<'@)HQPV,hF7+*GAkS!3:7^'7MR!o0MO/+EPoOrsRW?KVEocZ%(27-n]1*YOa%]m4:ETfFJfPo@UV-8q("C-?SI(eJVb/4uAfN5s1N8#a1g)i9J`Pr-)c`^XfBC5,?8C?r.^NS*\H7mf8=M%#Zso-1,F9)kl!/F0h]%j8\mFS9"N8O"FbH6=a<b5;<RUZ:dZ\;=oT/nJNJ//<Ct+8V[8#TJDSB!JWTUs3pX28pRnts1:dM.BLEXHg&!jml0_5_CMHfBoP3(%q>>*?f"W/sNS<T<U%;C#Fot(15RUEP$69L)nk/W'n[R8`Sc2Ko3U3u'0;^6[JuR[<RED;daqT>%dUsehP_EQoST,J'lD3#!_2o!^%lr_mP$@(isO8N%.fEU:>053.qY!UctY7iS'b\'Lbbr#lY_n1`b&rW?hTgA^YYYe4(bG!)+[p%Vm1,slPl\1]P?-#?63D;n=q(`o`%X11kF3-VhmUHuBb&,d59!lB/-@se<5"MA[K"2EG/*>#uh`a4f3%7m?nj=UD=d_"rDl#2T00N`o&:AX_mq"Vpc?ASkhq'ba>3U@%?%ZR&q9INV`O'B$rE@/dM,U`5G>#UE;oUHhAEYb;&#S&;LaG\d7aHdWe0OSY1POnPZYa]*#ncN@@pk:Tir<$s/(Gc1ZI'p_(Fr;'cL%n"AK3_82@5<P'sDpD=\AIb&KB!t%4fmCH2us3#=TYRBLqq,Sgk$bBb19$9_=q'[g:V<+JZbTSR?7qqdkQ'R_O\G)2QEYmGXUh35Y%l-`M&-9]oZORu3HULI&bMpEY*nsT>&4<K8i?K#T_$I;6$q'\?IL$,6#S6^A#O2CKQ/3GLSIh\K8_XgWLrneN`m\B9!'V:B&o20`r%$I@CZVtVT%+,/mQn9bqAO2>sMiG#<Q_XgWL4poV+iV=laB,@/nU[WXFSr^b[;0Y83ce4#Mr[9lNL$,6#Hk`05_K0nZBflaKs/b^s%nY2%6iV=la+,/nXH/\Rd;Y2A"+,/mQn9bqAEsU+4%&6>Oq'\?IL$,6#S6:(ti@rU<cJ>-DA1'UB+"t;Wfm)l3nmQ,0jC#`/cucBd%40>1nqj1PW87tC:1II0Z9(1=iJ2Se2nW0c3OloaOA<rN.YU#de;E@1*9<%[>_-nd\-a"FI]Dd'AP>3*(.N1D+B_gBp]H)ueK[YAm%M4BQi"SAo5)U!0gNEZ)_J'R$!mMe%])?k/U":,9>VIW+GYnFH<SOjQ.1'qM6RKafbj[;;>U`WdVLDp0smh#mjeFAq'jHflagFV#g%1aUBU[qTN#T1e1m!">K#0*OP?2^%/&H.(HbB"R*@6m)Hb*4Kfd$CkK\p,=FL%:</:MYmj\qQMH*J^=-CkO.]Q["lab6#3:349tdt%.XcI;ceW0IMq.`T$k*liJ16bi^2EUJP<0WT<cd'7;o&4tj8e\*<5[V>547h4gHIb@r+VXc%I)Yth0"'@?k%VXJ<s,@'eeY:s(Z^)%XFS?UB__6;ch/K#bE_%j.I.#ucXn+WIfBmko6&tEe>noYW;Q2LJ"[PUofi:$Z*4h)C#*mBm@hjdUQ:UUW*jZTNF,H#reM?GTH?SB%Z9E#tp-G#>%o7$0+[pa:hdgqPq0?n#d@-$6rO\&R_P'0Zs4M,E@n9?"H*R?M^>T)5NrE)bLLYRoLE,KQ!Z4"\lTRU*(9T8O]f*OT%rqB5(*^u5/])C3^hp*8b=Lr3Kpb.Yep\l>8?j9d'^W\5hOVAi5kj%X:RKaaS40ANiW'<&!j8NTAnuLtjpn&O)N92q.8FE_B/s6/K%3gU/_J$Ojh=K_Kb2O&]%6b2_Kf/MA0WFd*PnNSoQhY#s&rpI/62ub8G`-S!pdUdn:-K1PG2*Mk#?qH_K3porD*uS4%!<48N(A-#S%EW*I.-*s8iLR\h[&`37&9e-M,"W3>b6"-tM]:Lj_rPDum0H%f"Q[Ea3oLJoM0>DJcs(bl<[l`X4AZ+9#1N@#2G]>QY^ah6sj3)mm%fIjQ-h>XXO'o(M2b:Ip%o_E_fb?bOuY]RPB4gh40F<Io#VurH!0,'4)=Y*1VpjP>Ap-sZ]b\QMdBWff:N&q"4`ADSAH\DKl,7cHr%-Jd#hE^m;)JV=R\j2#823,4Jnril!4;Qt-$O8@[(n;V$K^A6uRDDJq&,P05qWR-2oc*7d(pW:![C>mngR.5Ugh"@ntl"^%K8&*lJ%gk?[E&`S0UH/_O=A%r8I+CmGaK[r7?QJgg*QtM5!39JtJ:+=cKB"'RRJaSu%>D?aZ@r0M.#>:3%:8'E\pBC9gjSZ=_icmX]R`He/%4o[1MbD7XdM/)!AN,;*8>l2]_NIeMjS)%\[PpD7.-\0ogVrnl9^m+XeNl\Y=I*f.8X_qbO[#:NHIf\S7"+E&?(i]#ls2uJod!No!%#jp'r<d"tB6b8I?3hBTn6oOm<n-J8sfDd3JVBVl&GF*dUE7hqjFT(GM^YEp72t<%tPU.i^FM"=^).c1kXnplQhjbV-TtRKD0ug]2%11(8K:_':HH.X0u9%4Rj?U?#q21*%9=:Bgk4].#2g1V0hA$Y$gf?,KC=rcTg3u;C^5Q99-'^1$Lm80H?BMUAjN3[23oqTAa<WMB3%H@^MUk]ojiAnkPOAAF"iPu87E92s7NE@rb%N0eW;H,5<<OO!cScMR6:LI+8ed;gC9'/+[\D#6SLH@9'.`CP&4[1M869UnpXbM8eM%)26V)XBa)d-=I'V$XIq;#MB)U3Zc@X=X@._EG5P2@EQBi8@pr#?M+D/Qs/hdCcH%u8C;j6G?_Xo%W=l9X/cjjic>nX"q.dXV8rO#%m]p,#7gK6n'F+Bk\)Y0I;*<@o*2Q*-F-M[V3]Zq:QIp&@c/CM=`cAuDIW\--!LVK0hGle@j^DgJnfhTeX:/uoV[^0'?_PUQ/S=+]%Qk]PU^DpaN<+\FrMGUuuFE>Bq0W((kkRUgqf!&Eu_`EG)R5,8h18@mN2iS\hR6e=$[CfbGd:1A'?hu9c\XP$YLSajbCL5WB19;Ob%JB&jdrhqWDaKQB&pY_o5r:fh]r?6(8B@(Iq4"L\Bm]tS`h+fWH2<CJqT#*<d1(\SK.K`;e0Fk>*AS6DB*5iS&>%oaLk(nJNUM,-<%I>`-4bj.?m@+ucGY'X=8*XmcLZ7MM8.p2!>7+fSQ-5fC[^[i0JHgdh2Q75.n:bZOBj%4q;'^FJ)(lYBpbKD:R;?WFC]r99Z=TnmB%i-9QOd4fHS/[\[d3ATiP7G9T"AVr0p6J49rB\[0q#(q)FMcbqG.*AAf#Xsh"]<XSW6s6=2Ii*0D:2QSgkKAKSn=$E^:qBr)/<GJF%rJ#8U@45<5(G=W<9&]hA/um@0&fYVH1O+9Q7c87HpW3U!W<:/'UYF&oUh&pP9<t6/!,R*9*T)YOjURX`U!X$M,q)_W4>%Vlf%1L@%&1`C"hr,<#Kk@M_rH2&P60p*6eV.@-s%qG?6[V7L+QZPeZDaY2/6LMl$fWF6,Gg\d%_F0Q`G4V0W%eOr;:n0sa1I!^9Q;LM4E.u_%i6j#qHGh=c\ldtbM`ImDboU4XCaA7#Lo-,cQ!jo3\/D#t^Ji8\%muH0/'#&g*S9"sHJ98D>$QJkY<@4k=ugr8[JQY?eQDXC=5NnT%r`h??%t;37^)1U3_d>(jaKHOE@)FpPm7gnDQ<(c"1"bdRl"+#J]47m^FOE-o[m'TGfjF-YY=e?Xg93u<<!M`,N%2l3cc_U1jn4FX%oCgL9AbSjrl#?F+g"Yqdrk>K5qY7$fH.CAmCi!jamafk\UqTiUs8<2%CA$t`6.$YicT\IKhM_ol&Z(ki.l2;.c"6"e@/n-V?#TAd%IK0.:WR:`\Sgq_UnG?:0lYGPYV"(>QVBtQSgVM%u!As:pXen=0o4tB`H2"l/I(qYMcNi04j8#UZ/o.XjH+nDY=OATG+3'KEVA(J$%pM=CLomE-CPn%\<%u9:J8(HuSK6O4HNh=_YRX3V&XGic1l`Yd(Q`Kg1r<]Of=9%)q\1p$qrk@)`[C+oX!O=V`7l=X&NnhYL<<(Xd%I;XQ*?`mR*[?Ujcor%JHeMg"lc1$KLH<i<"4FQnip<n#'UlR]+Dbf+dH/rk4m[oKrnE\5Sg4"Lb'lEU?nAiT<T1G_BA'noI>N_ol%^@SZVD=m"trOp]MmEY-C;:_[D*"H=//It?TE@;dla?A%eRnr\LQa0(N04''3952ne=`1r5YEMG@@UcG$b4jH<qXl4MUJDdmc)70=%h*"o9C88B;:=c@AKP'VLc[*Ko2f]%jk<IM:ec)hddI!d^ca=9"-dkJnhs2Yc;<7[$K(Z<c:O\Eq[?m0%H?<3&%)5TpmU;k0aZ3Wj%2njFB'kh^V<R</$6:kleXg52Q^3C6*e?\Kp#&0''%"I():/W!Yf<h*g1JK=<RUr;%q<KH2dJ(tGjc/a"7UIhI(d5S&O(+*#KV?Y>%Wi`r4oB^?jf')BgGPuANUXm]5c*-RGjGfVkkA%n5pOU=p@sue8G+K`1km+L`e]*XlNKcp"Vo@EIa',QABSAD"<4?653gDY8X]Ad'%bKdX4^#Q#o2Hcg<CWeI)DXO!4^+5FL[JKXP7V&T-?`SP!RYHg9:,Mh(n(U@W2'!T8fA\%2qt@E8CQu3C`p2?f)aDdih,6JOr8Ga:%h>+DVme:]#8D<:t`X;mY;Ee.Yl)oMPW%!^T>>pS9<h@AOh0nb\J,?g_*&OZ06d;4:kZt)EH@5>Kf4A-\gZn%ki3g5F4enqi5<%H4%INom!l/9ICe4*4e[\&N-)Egp3D!l0ENP\dac$k%E^\IWh`t)mZ57VRT;B,R_DRCE4NID+HWW!`WfApGts#mkRn6A?7kf(hN0=B29%nT]1*BG@jVQrcMQp!2@uBqt+qg68@W5M#,HW)8F.c/caP@#\J2.l!nuMCW'.RP.7=qMVi+n"XCK;h)JcY@+,D@uWg_^]/8HDjTLD%Nr%)ZYXZ[&X"Z3SYqCHCITrM*<mS1EW$m$N*.<:JKT3]=b+tRc518%dXAQdc`qq,AD0Ak4?&OQV<s*N9C)Z-cH>PUpkd06PH.g))%X7;;^.t4*hD\Zq:Y0*m(lV,cDY(%q?&H&?ms#Qi7eSedHd4W-4r;:2W?1sRtAF'3i-gg=YmHY_arNG3+odu!VXlh-O@0W=,er!.)%Wr?qoM7pB(m=P(ZFR-s(p26IlV7q'^GLjM6D\KJGl7\3IV1.gg1k351I9Y*kIr3<a1)jhD[C<-5I_BrNE4(i)p>AO.npSYbp\j^X%Y<S(-`i`YGnR>jT?L;_'oLaJ9*e/P4iOG6Np2k*CFr7kd@-gPVZFlFuop>,OlYf\Yr[RnhT#ohEN;Xe>%c4+4I=%tq5Gc*-]5>4Z%RJ%CmokD;V(e_UCTUTlG;W"p/QcFGeDkA[Ghtd7,*FmF]Q&h8\lIR-MbpQ]KgWG]YCh5aEA(H"7roPLKp%n5KN2K`Q5)hJRgKNia%m-Voum?a+->P$AW$C">.0iqS+=TdE!4S\`IG("FP;=44F2fHD(c]GHH/@3mtAnsP@ff(s=GC&rX\8lUfr'EeNjlBq+X>bplMQ>;,%BKq$`]!=?oqLZf!Fj44G-c0]ajmIl3oP3^UbL3H?T>sU.0%q[GbMQ>Ipod%-_;!\lg?sZ[>SNc:=$@MB0(c``$EMYTXo6K6Y&G]d%;IAGLarbN]@f3q8DI]>&g%qrLeD`iBITPcPr<+m(l93O%]K(AOjhIl5$/a]^jr;@8]UV;]ibHZ+?BUP"]3bAXSllPh@@,<#DM)t%%0t$)cip3FiArZN5]OQN#QufY*,=da>HH*rnNcN*kcGsOWZ.MiLWOHotpgWElFNqul]kc-#5.K^8+++<BIJL80I-hhoNP#>8n`i!.%'6U*p.jpTg6iCD\0.GSIqZBmBQ6%G\qoQDEZ2V0(kGm<_F1Gb0[J/OaFgL[e-kpX&df8oa"XQi_8lh6:^NHGu&(f5onoX:kUKIqN%'iMZA2KiFL`k!Og%<I$bQ`P6r=pEeE^W=s=m:UU6c>A&WqDDgTVfg=6+!HqLgmoN]mi9[kS_F%udlcHef0;1sm^=UcYATsu"eX)`%SYteW+q:WfNmlX,W%6R0lfZjLad.K`2K<E6K99oP5&4q"UVhpc;fac&2Li):@NEeJkj!JD>fT;=">-W;H$<3!0e_1lJ>r?fYZ5T^%T%Mi#GWi%8cM]O+j)TNkCT%+8/>^@^lYLr03(2Yu0&@Z.^L.Y&lg6s@?emVTS*S+*g-[BKdH]JqobZ!0j-SE=&fLAs_/an@>W#@`%,9?#kZ!7&%oF4t-lBBA1GA5^.]16F5l$hsElJ'5>I:reLR6=m-[b6G^g0<'CL7VDg2uZj?rW#"S!gOe[CpaH6M('UcfKprQ,<Cdc%OB6uAUDWiY/[,3NF1<8hXc`&MRAk7\/#RRZdWdG2StpE\;`fbE@GMmakoQNp6C"Xl%rU*?-UE0.p/;2)5E=rHWUE;3>Zb7u9cpMn%bA=h91+0%TR@KY(mDD"2ibN)#Vc;s6+,Ce]lFur"59Ibbl$8EhcsLUh44oZ9;:R$Hq$q6ir+ui("VsY,3Ti=+nb';Ve_^g9o;pj<%N-AXVJpY3_Hl"/F)eQK[j?LkTN$4&$+L2*SrbFL)KPB.BbDSV3+1H*:s)T7b#1bb$+kk%Fn')sU!qkh[mfWD<,:K&gJJ*f_,a2nn%/'hQ3i`K4d5ATj^Zo[nm42;-NaE!eemlndXO/0*hs*cY^c':.7H\\l:,2ulWV@*)hNMfE0C1KPtB3U1bpSkM!ZYhn[f\MJ0e^G>_%\ag8(ce5s%0XeOkl/Q5,[^DQF-D)e^*m/'3cT4)o^;T[0ls3MHfVqd*:1\MReu\&?/kL.r(7s$W0(i<'"==6`"dE@X9^,lcoPH(t%Sd2,`R!X\]P'9hR9)/.*MFDQb-WGOQpQBfano$m-=@ji'YcYX%)VN,6UctVGCYW0tn)bgjOHTG'a^l_+QO7?@Fi9#kn_LK$2uOr!%%T,Xca[^b?(6MrJ1_C-:^)h3NTauadh37"T5&R!?s4p_`lM'VHda@5Z_0/%W)63Nq$tL""Pqnmeh2I?CGW)"nj-4#+&@:c*>B`3A%h51maei6fk,q-.QXgaOq`]'5;"$VfD/Jd24n,A*P9TEi\4NiZ(]\GVToXoFp(-O<WY1:cJoAU7Z0$Q.cE"P^(b07$U'M7'9%]i^-%37[B<,G`t6DkH`%-O42Q4D]82:bksHW>)\lE2YXd]m,#K<5r_k5\<1fFr"%`N_kXF>1k\bbWj.tTNLXrm#9ia>$U2GA)@N'C^,k&%VS1L3d&Ue<EMHHe$mi:EOO*oN1Y6A^.Vm$X[[Bd9jBFa]%i3Lc`Rt!MkDR1/gJL/^,?@`7$_?!*5RuPh]pVo]WEks<N@\Ep@$f.D%1NeQBnB*hX9<R@>d`!mVmmgI3Bh%dgH\kT_`BP\MfZ+rYXf!CMmH`kko5gn,rto$BCH'Q9_:J&BT.8a"+cZKX;;3amFb1$uR"#]C%U4jlRr+"7"&-,="Js5pX3;L6Dj';-".If)fhS!o`=Yc2t;i:F4EA9BYaHkMai?fAoH$i5`ZS>d7OgfC(T%UmrK[6uNJAS@VLeQZ1%hAXQ?`;IPtUPlh;=nH0\Pi%ns647!iH-(>T(E0Pd;\k1F5iP2D%g%T<'E2NSI=+UnKPtTI'$H]5/i9Q*pI!/]2Q-;gGdb?aN6E$X%Z"tdk%do&i96&c-e<cR$9^]Xl0Y7]E"_1CWg>!P:rhrD;RE&ZWpE>;":!)-=j$#(P[`_$"Q0(K(),F;79;'7Ed!Wc5&tsPP2WSi&%.aq&r(34F,g-j_$59-S<,46YGf5l6PZi0V`JPTpIV@Y%DBkOXho5UV27BRpmiC^'=a/$;9LXGV3FKK"gIU6BAbn\lsE``+[F!:e9%0Xe88N(N[24G:ED\S*74GioY=d&!cZJ'Ls('\Q(%lr9M0nocIjhT&A;e8;3E<c1]'k&3i"A!KYhEhBgOWK6-3F<bCk#BK1t30eXL%fm)78][Q.17b]YeIu_dD)YDdCgIH9EQ<35n@@)%>(X[B:<**NNhrNHobMZ\pS$@6bnhK%gB;'0R3SOY.L[PLc,eSDJ`u"E1^^-ho%EF'F#8R)Q;DYL$5Q,L\PKHcYng6^<VGF'pg?\l]IHQPKP9\I&3547N4F@n9CWl*LS\^,G_=<g?43/bj/Ar'-^&,7GlY;!"HM,OND%c'?)q;2S4dVZmcB4XXIp#Tl)(9GT'F-Jt.K7^j6::/GufSIlD5ZPu"dQ5#Mfqj=WUQr?%o7XeLY=p;OFRe1O(6"5T)$mGjbD-kIN%52f@t&Ot2)3L>1Tm??YSJnSsX.;QeL!>5\Vh)N]ERu"Ms?(T-GZ''V$Jlk_&3(C<?5%0]MBA2mS_2FlC9XC&I:PO<OHMql-]$Mi,%k[D^*+H%Gba#Wh]hr>3r<4"*nC#fcQ]oYYkl5-+RU`XU%n]:lXG^e`_ZL:cT4e/"]k)-j9X(@I1NA[U"2V_rK!CbWj;9MR/(<I!%%AM5E+nu-+4e%5nS+nf-`-XlSHjmR\2;Th[e-Na0YhHMR1$1h^oC)OUi-<&):HPY(uYPI8>Csd='*YK=IU=Ac.5:BqUiC>078la&c%%5Y%gQGmpAWFaT#4N9%H>.thK;9S:Kq5%XD[1&W'QF0iha.LQ'<DqPjlIhRNZ@?Vr@_ga=)lYUg@^pBjJ$rImIkdHZn#,u^U=3s4%F<ure6[@8VU&*2bI5o@%NY"K<GoV9TIm9Fso0g14]RG2"m(>ZtIS)?*1OjS^=K`gd.0Y18'S;l1PS?iJ\EK(AN8t<l%?j6Rm.SQn%R:JB(\_W.idC`69OBW;NQEiB,I2p9drj*%OWJI:]J"C!lk98[);9Z\E)JMDf6j[j7c8;^BjTnY#2Xa_n/i&t+ahW"M`MhX+C+HM;%Wp?4JYKeW<YKm!0UYb*MFj9:q,k*))d#+H]V2qdGep<r@PTj^8f9b&<`m:Kh%pkeQ:4McYQX8MG5/A<eKJbI6\jl7mnH=^#Q/gW2%X*X*TAdcXWa,J76Xlf0.]uJ4a4h=^e]kD6<Y!'TPC6Mdm1r9%XrQ/JrF_!TF1p-`=pZ50KEp[-fflhl:.%%%ajUTIK,k!V(jJV[g%*9Dp=?_oV_3Mi)o\ZY%.q+9VE[)QXeFueG^ShtoZCjBFL)@IUJA`]q3Hd)q`9?WP?Nn.9%TlWcQ'7%j/RltaT6!>K$lR0lTM7g?2%&Xj?7PbWT+Y;bm01-9,5IJV!UHk1DWe+8O5jic&cb=Eag-\JCXrlI`lmQKJ!Dq`l9d!i';Y^2Ss\*nf-bCMa_^Ai%3a2BIH8E,,F%pHHim)#a#"3CIAfo<C"hHXipBQ""G)Gi$e0NLDAQZr,shfK4GhhC(9b+6[$oh&@?KHefR3@GRRAX"W5(b(7"s"^mNA0b\?FG"cC$%bZsTAbCOaC?FFN.I"%CtL9VIqFW$=Z06=!f-Lr%LCVS4k@X,dI4_ln5:<CtqZrPQ5o)tAc'3.plLCtqrY]ZQ<r[l6DCFbuZ5JrZM%n3ucXS:!?08XjZW;Mji2*^9&UM\-2fQS2oqFbY.a4N*RF1F6cIVIt<M2RG7O8E)5!AUW_K8BsOE[_bk.fF>IuK>[i7VI\=R6(goG%S\OHd8[LNA&N%O#24m8uIjGiRZ[:V[en93RcqLULrH>,Z+b=3Pp?UV^1Y0+II$Ef0dSRT%0K/g"N',N02cB3mFttkIJV=oE.uIWT%\auDj;cus1l!C'*N2>u.9OA=R\<kK)kMJqGT>nX*qf&_aL?)7Y'crrn)s,LmOul,f8*X--q"80&a3K=&GRCd*bfrW6N-IcHoZR^b%Yd`MdAFQt8K++@93@"?@:,A(h=B0/r+]kCK0!eGj[n5WV[WA%kP<5$c[r!#EKCmr.B`_d4-KeN<7-5epII96OfnTRP3\U;&esYYH%hap)>A1P^0XjBFUT>R'N><+d/8XYPIEuM6%</T/eAPA<V9V<B(A2Xi?1NW;1<`B8`:"+.rB3psdhu8b;_'&2(XpF2tR#g.EeR0;T%$.E3U#M8EW>&oET<>)Y<5,WpX7BMJTqTiNJXN<1D=[(0FGTLeCebn2>,E^[f_,rnK'A-f/`%XN\9^:jk/'%97c+HM@m8S*n0NXT-%*_"JU>]M,\Q\%*LFP`(]YZ!G.EK_g`1*cOS`E(Voa4q*+dZ:s70tNAM0dt$-7JN)mka^+tj@kd9'45n-e@F5WqsU*?Tr,/bT26Vu%3I/r)bKA_jIuK`C:KU0^.8@q3Sjg/"`EHd"niRs9am+W'jIPN:@eSd#X:XX\5SCai-"T)l5#[Uq4p?KT/=q_aW<KmYbKcUiJJ$X(%.C/;6mDC>h&cUbG0!o;(]saD4Ia"/1S)aFORCF2Nb]][/q6MlLX_[GO%d(o_!fU]dAED-jc6%7mQ$/ZZ$Y0#>LR8C]Lr:pBLn2,,%$nCR@M@49Udn[dOpL04I$=QQ.Ru"MtMUOUZhaGDId%%X/\bu36Es=FU,9h@FXd1=q.JH[FS"H5fM6h)33_qSuR@AL:_JHbF]5ttH%b:lu@FMHt^KGI'$KQ_V'9[D#%CJ)>5m!FI@Zh6M*.SgUhc4J?.q2X!aO`]$ejhn]0$Q[QFDI2DH`m;]8Qr@1G)dRNU&qKqPC"k,%%A!NK0H@51ki^B[56;@VP[(VsiSc(+Hjk[OHEhtGH2kPn0j!<;;pGp3\RGNchp=qJ_e&_kfG+pY@Qp8hsWm,6.a[G%Drc7;K#\s84%RlktDJYEg(5P5/2hgX^=adLmXeER]qeFVjm#;rC@Y=!a"gunC,egS^K+3JC?EOmTrW$Zmo1:G7=5([N)Zpi1bb^=]UGn4r@]eb8n%Y'Z?m%A&eXiT+=gSB8Ia@SUbaaib"jVEE9j:\o,*&Q#IeA!0&I?d;>FaIVR$=r`NuC`LL(NC1<?fl?kUopqA'.1IRg/XDf6!qsdk%[j`9:,XF<2kFg&'j0="rQugj<roDd,pEAV?s*4'(?Xsj:/N%]!&k.n?F3Y"^O5aF-_UW80'Ho8Xq6Zc<`KrHr7@alV1VFIY_msJ4%qdtNZ.iD6W2V3@KR;.#[3peJ3YR22GQ=6JShn#1M7:1)6AWas";_9r#>i^j3$`iB'RDOkZbCDKd0k[JJjQ.h*3Hjt(<r2BWC,t5r%+mI/X;Tm<4*uB%i,XGIs>/p77CmgoG[[GZdDNEf9[!43da>uaA/)aK-0"$']S3?=>5*fk7n8-L0ZFnM:9SS^sH#>4VYP6Y8c%YG2%ki(p8]Quf_WSa*74[\(=Ng9CY0RjXP9&:reoo]1O]U>D&o0-No3RtE\ItgMGLtD*9'_D/i<Yh(F\j3Hk?9N("1=$r30pE@c^Jg.C%#jmSH+'=Uk(71f/DT1D/c^c`coXW.BDRX)HisKNIB*R5=Qa/aFGo,_/4R6tj3HuXEs1ZMg0YL94<Zi@<g7O>H;?'q.g3%T-?E^A5%5:(+h/uhZQ8\KNDbe]8&A'C=s;i44`mb3BeU?\'m'mn5aWajX[/&_b(W&f)r23Ifp^Sj1o:+8BJ7FeYYWi(nhmYe)Da0O'MWajX[%j%0pqE)F%0VXMK2<#t:p;LFRaW`PtI<5VfZihG^?kD0XlnJ>3GY,UQoD[X:X3d+4T7]APd7FeY4nTO7(\>U>C&A"`BGSM!@;0>k8%KK\g_]Vp/-aPi(7b*7ga,s-r,bN>B4<Mssl^.QOp;0C^unkm+@hYAe(Nn'IYX#"h=Q04n,R<!QD>u[@h.Wd5P0<3<gZ5gQT3^)=T%0C_UeWm6X6]^J;>&d5)goK?^RpiHYuR9d?5bKS-PIG#W&Z4+A##Y_a'Z;(_I=S>K_cX-)n:J,qV%_l</7d1)JT,/bckImE0/$a8C%EqV%JfTc$pGqc[o,BIA:g%X/7Aa.kULq:]jSt2WLA7"\jSt.)d3t5\@3iu;CZh]U/M`b5fR@KggPL1rGfstT,n!0K8_kWO/bEG.R%4%F=7^m/u=BBP@sWFO&BSt5c0np@3G9-uBbS=OQ8bYVe]m\3C5c'Y(CU>!!8lm_Oh2a)MBH+?Fk[M4YI]nV6b9;_ADj&qqYo^)J4%^n)o:4,:'Qgr_HtH?P>0m-no0I5B^.PI'F6eNB"dSHG-kn]<S_BBMh2Sp=BoR@]roeQ<U=2e./WNo]PcF5c\cBBMh2N^hjKQ(C,t%`b*GfbY6=-ig1X!a#UN6P-\(CAm`Qh,bf/=:X;dZ8J3t2n+>t:RJ$;Jcd#;2%`_c5=T*L&@.'0":>QS,B?STa%c<kK5?E9eh:]@,%'@34-SgKh63ECF;2ri`I=crE9\N;n"aR\)lkFR[Sh:]>7d_",efeNqY=rqf=P9r$>e@X+Hnf?eSR>=VDW6'@8%_pk:G@sRplHG7'%I"k>oEtrR*R;ocu0*-,BjQGEK\;]sBP?Jcm0qQ8j[t'G-A?P,`A;mErCloUq$TR*!8&ff1'+XJt0cl@cHFSq(4?"265@[s?#WQ!]%`cs7jkTM_$7>@?ifm$@3j$BQHPEXDVaV^ZE%_LCL`i!<_;&SC2T0.Vk<8NT(ptk>SA;j/;lPH-IT)U?nqdbXUZdKmE@shJHki+A;%B0(BYmYp\cgThT`0ts$fUo]OF)=isYOYNG`JU`c?nHI9ANf7s(^\5?2`d!0V*\:fKQ94EqcPTHgZ[T_.j5`U)4n%h(]G]a%0mVsX%i\SRjP[fu@0cm(Mr2FBdB8fbr?^f*CW/P_2>o8Jd>=rYam!5f+A;n][(Q6QU?Q>%OpTfuq&'gQ22Ijb:1=OZ_hMh""R9^>e0qNhl%lQS.)7J>2gguklcOYM<WZYo>HN%6n@]Y;.c_/CpOOj\92N:F9%Gnul(5+T]V)<8'cG=PC5P$\!h\;YF?K3K*E^"A9`H:R9!A%/=J%N5m6g_dn]Vfq+!'A;gm&UHQ_G/*S#kj)^e$2.OZ$'G&:e1WI6L(HLLdOtf_]Er$4fMp*"KD?-*`Y2G^(`cLL*/0JG-Z:]FnN,^WM%WTh?ZaqtY#4m-ric]KqGh[,(EArP'C&t_6q>]N<P"([@SN1n]hhMi6>qQZ!!V's+<I^'dN0G]d,rbrb8d[cMSB8d'W,IuWfF(C5n%\A$HCmMD-C/pP-3EZQiC4<r:'5oJ]=SNf#V`d#Z%A(*6RPB`OZ0oig'GR*t1AVUN$iP>=$Q5q$26]=0-G'HhY.6_![q"1gB.Q]a@%V\C4*4$6'B:#>NU\Er]-2a#/"=F>::d(.4LbR;]+c^.dahsBi7B)MgCLM(5M0-iVA8CId4s1u"YKA:FK?QLCQS>h20o`QuB@+jLi%@E;J@&!@s)('D>(m-pAOo0D!fEM([sA;;i+VS$WriH+(<c&j#1p%HgfAVUN$iH)s0k0=GIL+Bqp@mSf,P)/N2a:=P+F>#a<4P7[!%aKrBXG.;@R['8n9N]UC8`<0Y+#KT^sl"U.`n3dcTK4Kc#M]]QLG'H!(i8LuZP?H3BOW?V;7WEG$iE87TMocG>El0]-D=<`1SqaMh%AqpW%iHZW&kKOK4M&oo@G'K\G=Z4<QA;:DGNh*5Td-U6E(eH/?>]tAW=;I>G*or'rBl&pbiTW8E,.#0u>&<`^iD\lMJ_B!JDYR](%-11!cHd'YA=*IGCn_H8g4IBrAc+gLLn6iPA:]-ol_m?X.(R#j\=c5FFG'L02("B9IoD;KdLAV6li8K+F:k43sj<5.[Iej5^e[(mS%?N@[$b59fZ(R<(2o2L]7gIj+\(uK25)h<G&5LFQ&3BYbG8?$q/-[mQ=9W=NgN6Ra4R>.uZk?VV./:$gT$tj`PL6fE(T;bIo-h/B^%3)]Hul)DNL4g$FQ:GX>[7TQ^t:<dd9>M;O_\Ucn^^1RqF+%McUh8,4CCjsJu4l+QD>i$Br=o(4bFo&di@BM!+cr)-=^22];S;sQr%JOB/EMrOUn*ML4,$obM'3ZWEBSW;1Z@+/cK`CrshYtE`<mmtT8RIu`)Ykq],/ek$X>f=_j2i7%t-j!?8iLPS9.=p6Q#Y_X70R5f3%3%QuiYn]r=cWX*ugds>u,[tk;4XKjIGifJ+A2`N?_;9U%c2J\[JKGYVledK:hIlme,/Mq'V*5.ShY4ukk(S<\r0E^5]q@Gb5EL]i%qo=\[/kJCCALFnJ^f.,&.2oK^F*Z2#ZnQe(T%B_Emq=!"c.G,rDl%]F#.nqGH-:W?`ocI7p^&YG9[ihc^+5We;jUS!YCB/WZT1dN%hOQgF3u)7D<Yg:l-(Zc5cTpdO*'n-2DZ%FJh']Wm[)]X+o52^.VqA0"oNe%>,9Kk9o7R2qZR9DpV?AGXC93).k<<l(pP!W8q'a4`%SDnoWGIkeRglMC4f6Z6.1B0WPR(CSR2mgIaf1im%M`_5,-ok52F",sF&eAkg`k:t5S/+DsetXcYn#73NC]2fCBP^`:/(;2JqM!FD%R@D3.#Tc4uThJ5O,GLq\<uQ:kU'kT5\<hL]dd5`@fYa&,aNV"C6T(a;H&rrB*il%MF4;V_9mp0LhP;I6I$T(Lk2-OM246hF.=$.?%qVB4[I&W/'A=`r1J@oO@jN:2F=ZK0I4ZHO>fP,h]DJE_U1K1PccFJ=[q3),-/1*:je$$<goY1/*ZduI(;tJGi7Nt)AmR3KZJWOnb%]gQbX*?dEUji#.uOidNk%`%,Je6l.Urk4V1;(2#r8B5a3dns7H1Q$81?(62m%$nX94l[%L388]hl1ZEpc?*CDoL*Me?$l$-)U^s:%Uas1GS'L3e503/q`4YcR%aC.[96Q>ibXIul1/+c(D>Q[i@l#)Bd<r75RAQ:b"DTqa>38f-hu?AOb;8@Kk**,6?;6hk:-"(4Aj7s+%j\a2Hn+C]%4r6UkW`i0CIcfbJ\Lmc1oqXA=bJMaaVI+sZ?GJ"Y1i%N>>+USj5%Yl*OJ8&=h-%KP[@H_7ijS0R<4*-_r1%D6(/rE@%@l__5bIKE1K2p@=0[m6ugj,K^^TK4nmp?J>XS:>5o,];WN9hfb8[%U=o;KXl9)NK07gQ.M'mDAk8<0e7Cc.(Fle/qC-\G^aot+=p%k4Q=p>s^5n-(`HKG?$/)X:`hjPB,a$[$9^BX9095&\(Gn1C_Xum8coNUF;$l\qaM[>T.N@pZ]R@FZmK/c?J)i3Oa:YF*U[5Q8Gs^%NWU)l]RQNncTfTf1/M-kDn0MHdacp0d<3J!?u-\/mY-J"?9bW[;qoL#A"MDG3)PHV*"e6Y-hYZ'l`SZOXn=2FGOdJc"%ZA@Y&CB0%?JcfODnLIH^kGF^npKb<YbG-@^O4iNo*h[q+S21E;7u\-rLeC3R-&-<SEq7q]C(h_g]-idDnN6&0>[Ft/2pTnl'6IBW]uh)1PIFd%"E_!#^`!a@D4H!B@".`pGAZU?V#I4eALYc,LKgnRB"Qpr<BhH5ohf;bjn8+AH*+UUh"^HfW`\u[k[paJT/;hmMtasO^"iPZm-Bk3%Sajj#V/]I`ErONoIs1bOkuR>_GJ*[e^DX-+a*W:gSD3boot/scq_u.dZ01M(J,e^(=<$U5*T)80F?a]15>Fs,[TAbJ/o%F;^X'%>%#Bts()coXOYkn%KGZ[(7IPDf\c^(0prI2;U5.fKMq7>0=?1h5_0#.AVlu$`Is)mt2U:u*TA2r@L5?rO1A,G;L?9RMTDR@W3C.$g)%X#<_e1t:ojrI&hc@/jgultig6-T>s0>)lq%g:o0VHes)1q!%GZP!TZ=qd*WNp7D;-S^#l+[Hi3D--=mqdZY@.KAU"#*4R,JF.b=g%'W";PXE;&1dV@D3KZtG:l)s?s(SBQt?@-V=K_?545=]`6G;]!ek4>oD_fn7j?R[UUg#$)[5geXol.O8C`O!HpmRFZh4?VL"nD`'i%c5Y5Zrm?Ht<L50_ji^@lO?Zlr;dT?QSTEY)r:nt$qQRWF8T)R4s.n4ASVuIjqSQ63s7H8(`VK&LhqGWq4F=P$q!gE-aTi^ZnPB+K%4">N2+$OfMpP.lOoYP#g?j`aOg#C&m5eX4EGPo$q@iq5Y>`F25?nT/]lM4JFeK)^-b9)_cd]8kpB6`:Pl-K4SX,gW5QBp-k:[jU,%&,9XEBrtha0!1D2s28Vt]<p/doR1G]<Up\A<orQ+qht<I]&Aa^SM,`O-7</^Ir4sF%rX`0ITcZ"m(MS*,!47%Hj/;X':;JV!#Xps%Bqb\H-_/6p!sTFiHeq!Mg:o+/9sCnsN5N-MIb$<]L&n]XQ:e!r.`&4[j-U98f=eXSdqR/GNCu'pe^Z19[I(?3]9dj#2hpRG,JnNW%XR<?^ViN3[(7^<cREOn9<5.4ApBBgfrk.`fCBlm!@Gbp^:@C&%D(HU)ac(.!2h!*<<\W!;mJBhe_>q#mYrF+''.5?nql/h/HYS;B%i<dOHqKg/,lYp9srS")&*f!B:W#d?G`Kt$`HCB<.e3gop.\;m[Q<Ce8iET?KgTEc4:5l2Q'*-j@7oktg_6b7E:ZdO!l`%D"42l'q%>F(9.^/X@P*53DIYd4^B8_G)r7bq\03)E:_*k8Vkj#V+$6artHo%,0QWqIG0\Zra?=/n8S%7TWGpk*b=:UdGpoJduM+s%H?huUMX%"ZpdQWS+o"MJYTSDMuYbno+eKPmkMpG.lT)j.m!f\sAF)(D_R$XL*n2FoD2<Z'\I`omV.\+7Go037\ck5-r_/d&eb=00XshcC/(O%dncZb41?;TX/gB_]jK+S_;Ih2^^@Xh[PsQ!7o.@JXd.514KGbi:Uh:0\VleUqEA>-'7rfapJt:YRdtiA<4]cBeVtP2Am5(a,^C-K%"U<nk1Tu""g[>LSPl9h=H);=8LGgK),/?jr(LfF/NR8^c=!E/"G>l^SO=%?ZlC(eCD94X9&F$'&B*9<t0PfSXp)aMgd>U3:T6sET%_e@NrCD/2KZK&@/+5*hXZ>-Th\)l+]@35P+gg"mZm[e$E:S02DL`hb$8$N/k]R/+[BrD39:nN#`h]:No6Ei7&Q.4>7iNF4c^)6ud%\t0k=I-@(P:4#kclcZ;qbtdQ0HZ92lorqtmDmC>`#/RPsXC,U]DVsPJ*TJtnhH7bpmcD%c4g%%npQ7BKX=H6+Mj41e3Ol?b_n_,Z%*D[?5E/Ci@O4gS!04WhW=W.nH%e`)(:+BN]'"4l`jBW&aCjb5ZfQCQN6?h05)rn&MO9tPpF(IRaqY4r!8p_'6P!"8do.RU\0$.Ad%mZ6doR>BB$H(0PcW+"GlW<NB>l7FC-@toHpmTmj?B'[T7cE_)+rURr.@B(g9Q84Hkd(s_upuj$KW(!aD1X"n/$a]N3G[Tj3^%Ca2%9XB,+Z=#Dg,aI\33`D1'$jDMI_fYc*G\)$@ZUZ:X(NtP**a$7u/'ae'Z6G:<-e`o-]RY"D?E5kT8domTP"pZQO=`np1q+QZQVeH,%bNio\2VXHm\cUrOBt/V)J,3d803d<3f5J+H:MQ"pBT]"iS[PT?!HmM`#dXRN(S4a"<5Mla=4jBX%c,ZM]%<G=_RPXa*1iI1a`X5%%3@n`CqaJ1LhcA]Ge?IudgFOL[Ub$i?MtNkD#H\@EGaJlnO>$[8di[IZh:]F'9XC1M=.K@\1G>!Y`oN:62^7Fqe[bC1bF`ou+<9c0%9I+h<WF+BA0O+p7(3K!i30s(7c:]&0gI^6@j/5g?e%eupg<[6r7RP`?H<qFea<'Ls#H;E\"S.36TkoE5/V-%?Pkid!Vse%H]r1-?%aO\AY(0NQ,AekUq[0NN#iZJsTO)E1jH".WU7,9Lq"3]$1?+XEH*3Q"=<b9HjNJZ7!8Q>kEUO!dMN!0Ljj4DIRAF?o.\h(hZ>J-&T%bU,o+E*TU_NO)Q.E0Ra&K1\4R?eE[:!DC*7m2asS@unckNY;N%Us3b&$:>RER9&^20ZON>Z1o%-B-5_J&$g^6'&*TXpaXs;C92Ou%H;cI1n1.f+kdd,-1de6)NUAc^F`W\FEQV"9&^g06PqPU9'A!)h8i"AIXB\!oY1#e3KmbS!JY9`cLp.I%ea;lVH^CUj,@0>W5$8`A%RSSRH+Sr4*<aGuSRAS%)QohkmYGaF.qW_jaVi*nq'!n+YIFoM"p++fM;#.^R9FUQ.HOJ/+!6^a>>qO2%"(C51_2-:Z_icC?1L0t^%f\6WlITV-nIJ&+5F5o,-_hgV,)SG>X!?!&.<M-KDfF5S7OT3fO_%Mo;kf@r_kS(1^kn5QZY=Ar+BNm[t&B4f*R6<WAq:%>\h\n$?%C>TCdigrClg3YSB;<r`Fb2ijVKq2N5TX&3p:HHh+pSH`@[>=sP00gI\"omrjFO?MX8UW0(\2JqGQQC&qnR0VQZ`Tl5=Q?$q9)Qj*%HLCZuk':s/$'`=!Up0*lMIp/$n(J"0ZMI\C!s+5&5mT[1eVA>60%RT&p!)(RhNUlqK>!]?46oB=$2$'?Xq+4@eYt3:p>c'bR#9Vc%`q$s;b7,`Y5!`mR:$LJb4B>^NAjH5j<8/;q.3lcjD(>/:r5a=,7Wq_X9^L!MA&XP9]"p,B*kd8EN1rTcqbcg(dq\h?C4i9&?R**u%"&\8WQ_`Qlac@6!8BlP6R!l,>W7BAp`FrlPqThO08+<2+"([Kn;[N$Hpo8p+i#=8k^,tao!`'=agmW@pMG!W8Pm@Xo<ss.#k5&\h%2SOo?)SH4_s)`eJ\*f*;MOk5uoCQkI#AGRNd@[>K[g^;*D<l6)E&7mK4h[#kCTS(*SK:5(b!(V<h',Y'_Q#,\aajBMOiONH=Z=+r%.sn_njpVBeF=9F#:W*M@2>Rla0&13sn)$&5XNXp>hI3JrJF;fV%.e6#Vc*%m]1qjI&Mq<'X0O]kP;;%1mqaR5(W']%6tfK"oKeZ&%<VU+-]:PHfpqrNfIlLAiIuMTom,'_QpG2uLheaE:T?ahAAu=<aT2%bthi?8fM0?*##-tmiS`Q43-o3>0,CNPR)Q6e$'1PItL!/jG%C)5\\6Lm7igN>_n=uUT?*#9_Cckd?NRNbJ=FeE9sULVF>lA@5.$B->_jX\ai7WFXCo[Hmo%Js^Pl\BAt%2>\<7f-ocM%F*["h[B+%K<]<5>"c=XYE###SB(h1UXMNLa9!'Fgk"#CQGo\Plbe+SiI!?!-+gcc.Is]Pg\U/Gn'lfr)cQ/=4lM-Vb+^(dV4X!")u;RYM4"J[%0nO@.\U?/,9=Yt`r+3Jm(c'(8G\g>FO&bUi@:eV:a-<^QjkB<.lgu#reCb[@PhlBQh3ua=&G]^2kL\,^Xq(gUl^K&km:&)SgF9Ab%NsB7@c9E2pnD`NH+h?C#%-l%mq>a8I_;r^n6eY4D#gt]2=-*6XkU\R1L!O<3-fZ]?4=>U<CinO?e#c4\%72r-E^I?eA-TKVZn`78%*%S<PZO-a5^+!=o-L.BHB$R$^S-)YX()oM7M=B<0!-V;NIfE='h:fSIf*qOf$<5ca>-%H"KinGIJi2GqIfIhE^E'9E`9YIb[p3R5%bLVpoHK>lD=$X_TO%UPpQ-=/.:gGp0V*B+aDid9$7LMDm)&+DP]q[)`p;cU0U"?^rJWM]J-::*nIQ+3\cW6K#iklpJEmFP@6UI9j%57]5HSY(94V`u%3:s6Tke/o)**MU9opAR8iUb@n+:\R&m7;]m?5JqoTiD)?Dna/E^e%:;@3ZG@pA_i?"\G9N"hD\QGmrpd[$Z*B"%p,Q`"eJ#IhXXu3>?EO2sX1OZ.G)c8B0j.?3ml0-Z>Anr_^UX*dYo*>-bdcHC_GK*^Pfpak<)8FU,LqqG!LLBe3#q`Eh0qbicQ6HN%FLjbH^-(,pm)-)K[],d+o\]u1cM$TGpHc:Kh7j#BbPcUkb74>YgU5l_deNMF457s@bg3``c-$@J[N==J\ipo1dIX88i.g?/7U)!9%m;lq)j4*HK'/8Uk!%NN^+HgdB+S-s6X`!h20\oH65oPMajNUVmE4%C7`%@<CY=)jaT6R4'D.fG,H^ldq)^0KgIL=Tu*QpGl/+06C%`Tur\:;4*7TUZFJSR^*km%pH.hS'lUVEJCIdBrnp@kQ0C9>>VnLr,,^"DITWh*$'F6[b?U_;i@cF[[WKbq`rra1:!6(9pVWGdT@7%Xm$\-ik\?).?3@3*ZWnbF17`Tq010DVs".5=#nT[G!d(k:U+AUMk&PE5JLf$):aj"l_6Q-'A\dtS1_K]*+W61:H":"Qb>8;Np(iC%#G(#:^rd1k+'8<WVCUi`Gffbgaj>kbB&>EMV<99bSM>9FC2=C7D4a\=]_90F<eRUC(h-64GOLUZLO7qG=tcqq6(JJV-_o79QL(2&%.'VhE#o[j]r"X`g5B+b5+0(2OJ/4JA/)O+!ko%%:8n_AibGGn`C7kS76OY-SKBtD1K;EVmqoO,_ZbnskCKfN0PN]ZZVL_Jikd^I:%.s6!jaca8hYuWA.(r-i.\X1sY0GQq]:e(i^EsUm>:aT:]*MJs=T'kAK*apiEpsr-S;X>R9qPdK`bU[bm':2J9CG5%sb9N*VS\^AQ%Y.S7cGh\Z@A,r0UAbWs>eYr!no6R=QMR>_gnFLa_SBiBoa;aM@)_Gt!<dlk,^;$gK5:?iD^=7uH_@Q:6gg3m>a&Oq\UYo68:RES'%of&jWB_-fOHB9E43_&!WFf?e<e9SW-0i!#^PW2p8k5X#-e$u2X'4Z3Ark5CBR0+TPf]JBKe\>lAb[;Bu1KNSJXM,R:2@0^HF'p"P%3UYD5*V%7iF5CFSCY[fSV8]3EJq4@r&3l\-*mc;+?k/2!#KiY:Lg80mds,=B-5=H::QE_%rY`bcEsErEO72-,;eE3j]JWo'h\dde%mB]JB;Ob>h0ISfT?-CaOKciZPfIp'88coubiOM#`e9qk,(jC6jS>78=-)(Ncb[M!=*,fr2*@.`pk!%Ekh!cWjR(WYd*cKp6dr0DH%H+.F(S1b?^W(-h9g)q+lT:Z.TmSDp>fg.!4?dj='V%;TIj2bP"5:n?dWT`EZ7ubiTVkl_m3,AEQQ2#OHiLM#q&i3F/^We-YY@"(u%PA&FDVD#OC:tsTfHZ9R?>q$L--.9`H!]2o%Zu=0^m*7[&QVj<@<LLm&M0P\cr/DHEo;R,DPkT/aa?)=UMmJ"\HmPBcQ-\_P,&R"G%'WT\]nc!!Y7GAI-E_lT(^=DaTp.RahSl#JL<n@"=G44c-K\),01m+AHo%=ZP)39`CAu!*",VD#uCDigfgGh9.*E,0J*SGBAr1u,q%#*s88mr1#L^lTUPV2]f77Hub<LpL;8BY><=\u?tTrpj):-$3gCNPdP_HC#+7lo,mg4haF1KuILPI$6:iX?6+C?^I@?6\i4UGpcuP%eBu(mOMi[G,3!BU&#"@l[Sm^Ge"p\&"t\^_Pa_D;TrcuaqkQ#pf,q/8i`/rG8Z>'gL8DKcXU=432M\($*f);fK-bigkc=:MlN=1,%0o*boYVZPDm67db*_KL&5>?@HED_gY6B:(mV%T&Bk)"::+sR!4gSjp+*r7nqCbFcXD[GruU2/9KO5fU#T^m(-#\)T&5lk4,JC?!T%C:SbIG5^st5e.f'ZreRdJ'g!I)RhE#`n9`6^I)q:dFb(\P2)P.gfD!+d@42"\M/Qu2TXaq;C/A,V+[ZYX*L#nCMDbciYD`@[Yiek%AMJ<DNNuQ?O#bi``h*!JEo&SKL#Z[-a%Z>[:V0sim:]r3>E>siO[_f/Lol['hNOsoN=I.9KD7:SSK3XCC\7FHbZr]m6lgBn7hT,>%rjd-B:p9*_9t1mk;g1'X'6bXc`NV-]Sb@F/Q^sd"k)("$T"fMaO6pYZ;sjLT\M\7V7\,nA:37jmS>UqS"-%&TgE!6\hJdMB\uUq/%<W(:;3`!52]5,Qf`b5SbL/MJ:%+Y!e](]h*goZFQMjB8A>fIQ8c;YiC8ltM%I2g9G[A&d^P%hOsPciF23^^+uka("EZK5qrj/1_k%^Me7ljrtHu/mTXX4P)'@oJ,mXU%/-A9k^>/Y@`hN=(\?3E^OBgMj*[52>cqaL;Jr-%-?4G@34EF6]m/KbU^>/c5AW&lF)k,Vd$KV%,+P^Q<&+_D>G:GZESLaLL;pDs&4\CF+1;?3r^"&-6?/n>0TaSf[GP;$deDG;[;qFJml@Q@G0JP3#A:j"Y>X@IXB'X=A;?N'GHd%<%9k9m">;\&]GjOlU0>QX#]%9_n?@^.%FK_=f]SMmH:A=U!bmX,P^Xp/J>4Y&gbBr(2V_tZCUp[@PrNt^pN2P@U]ma/VEk/[D?9bQ;%_7FI1]ma/VK"5^F]ma/V6B,th4P\7t?Ej15k[$KUGnCAXSaQ0;q@=df5NtD%C=`tE?12.cEkbWLIRE#0Lcn8gqE967/M)q%om?NN%=sY/Jl_!gOYFIV@0M)RAPBY;/ZT_IjR@sA`OEo_Tc0KE=L*DD,h7t4,/r@g>#(=VY*sBj'hjV@'pu9QJp3V49J9Ld(V#h89[\i#W%M#5GA\<rP"*F3P2Mc:#4S/^9$TqjD$oS1#e]8'rpfFKVdH6)&YNCLCl/u.fTOoF4*B.7:PJuWr-,B<3TDrbS<=,Zh,f[[i8`4J5&%3!!s8)ck$7$)5e?[sNFX$>,^4rJ/i*dJjKs`q\u5;<\R<js]/uTq)p^'9jTY;%sX`Jebj+XG+EcgV#p#0["^h:NsTL\AU][TmA?c%8p`tGe:N,**s;:j$N_"6I8s*,lQBT,EOo'O@#,DXClr;0&q\S<$r.[Velu9ZSD9Vk%dLtg\4OAWHS=Gjf()qSa#SZW$P><$;4?C;%^samUh]G(NZ;6mk;bMG3-kKtk_/J7/SQi.Y\NU-=XI/5%#W.dN#T+*KCVQ7*0a@#u\ma+e's@NFP\%bpi&0#j]j:"+,N"s*`QIV*%IuS;,)J,G&S&HXB`J-X/4K;WE`U#X.frZls#@,WSAitK.6`f]a:5$<!XE7-c.[l3!=^AA%Uj;'^d?'Ln$r+F2qu*R-W`mfqD9LN`%Zh;k.H7GLZLRFZ`\#?G9q&;&pgEL51PIJTVhYVl^>-B@+SGs<Q:lYbUX/2[kYr^Kc!RCjuK)!>XnDT-YL:'B]QcgsL@Z[dE@f&<3%g=6(]"=s>1-<D]?:*`WKg$42<;u4+o'0u3b1W;obXCQheh2$&Vrn/!ej=&-19"#ceFVYk0Y!pA4)m!8+j6&=Ws'/]bBT2B.;?/5K%$!&mm\(GMlh<5Pt5^5SadGmf0hl^,)kpQ*ckaM`scHNK528's\1Wh"1;h5PPo(`;Zm-uD0otq:UOD\sk)TZCA&c7^`SD>O[d!3!$%.2D-un`8Ibb>kSCoOdB:`&k6f,WO12&bCC3D\N7E_5HdR5p\2ZDE3hkYZb/B_#9XNciG7]%C>>(GZ0f5lHm,:a,Wpj:sP:YbO]:=%AWAHgUr4$W]@]e&T)2D#<hDHV*g&Njn\o@#-9joN&(1&UQF-*'m"afiq@$e*UQgkn/Y:>$)#bC]5=AT4,Q%k$>o2O%eftqlMgPKE%UM#GI^)e^12#5atB32@E1mc&I7*i"[8kE"G01F3iAr<nUDai!T@V=;6jSa2mm.T!0l0-f#lmt/jpIio?X1%ZWledPj?,b*@D#%ko%Z`CS[=I3BQSm;fIjo2sWg!u0dT&3n3Sm@%m\_Oq94hEkKk,4te=!7MgcKX*2ZR_\d`bbTio^"&Xmus]sDb&-VL4kfk\"[M:6NW_S%CXKJh+d$H<?](H2f_`E!4o=L#s0:e@eP"$;lsGXA?,b)um-/FWc`TeL`WZ<Bo^)G>s'G?a$Dg!cqR,P?'hXT*P[B<>?$6"[>^drE%G([[0>4h0];tO5j<qPaJ\FX'bSm?3b/T^`mkh5X>r(-H23BfGq>upQVomCH\M"Ts(!n3;bYu610g1i>k2I]8'f5sY5<]Sl\1!?HR%[eJ#+l293h:;?ABrp/utG&e-qW#)+/)q\rZDH>"W4QdOEX_)1EPo':>M]_bCA.cn"Ii;CqZM+31AC8"sTVZYSPA,d+SWsd'Abt(!%9.qV.1!O"9rg65:a/$BiE`r>;F3:P.Rc#?IVtgE6/2MD8&%WY96_e9n0<;EQXddY`/1=^4%gW*lR./N8l#Pf5hjBTQT]Y9edG(1$%7e"]o<"bS;LQhsL-`3V]3T2[Nbq4RgY*T(0]d5G01Te!`67e2a5!QZ.=M7hj>V9]Z::4DJJf"h&bSLls`4#L]YMYE@6#I`1PH0J5%B3Hh!M[*H-b?c6LLWX1hBL\k4#gp<cZ$tIX(?:1TcCo95%/La!<l^ksNe3Yej6TK0SpM4%B5\%,c/P3'DZ<5s"R906*VcU^kQKc'%07W,p?"PB331a"L9#m!=04osWKBp_gI0@'%BOX<-Diqe<Glp9MjY`Ze=,l5bq_MNlWssWDhKWF5I"3^9LQ`)V\rj#)#F;g5lWI=<%W83D(iXSFdLkuQCjaa\(%d2>T[pel&+N=Z)jMbGM1EjfNj;R?(3[IH@(Ii=cY3K4s0C_-Vk&PD$K)-d0U\SKH=H](j?lSa:Iu%s2%B7YL>gG!]FK5\M[D+&_^q"B'e7]k5UhZ2Cnjn0m2qh(<%*F);;O@((-F;:cmG^.hW@5E!Bg(V*dM)QEm0"+kC(?QL_/3>_lY0=T6%kqogD[Q($C<bleYk"&[0XT=!0UPYHeC_0di/qt=)%#K<`3*A!+V4Le[qRfmN?KJad(Bm:<Z33i;s272+T0Q]C>=&ofSB05i*PHT`%Ra.aVX#o!MYH3PuNslsQp(.9sWHoAU,03>:npi?Jq7@aRTk%YfVsoJ5"8%.dbqi"BM=r"u%H+%G+R3Fc);rDGKVNr0"1G'5U/%)]%s))3S??He!(['*i'@n66e+NZji\8QJ%hg?"%Q%3KB]cDA1cYbl']6r2's^?'B[b)3Hi$>hb^l.F$"o]baZUhBR>-Tg-fMjfYKGgq%?2)p(N>k7Bj_H4gMdL("Ec0M&/NaBb(rgVt-iF`3cUm$_BuI@8l35>$F>mW(.:gi"ic:e)7:OjTiA$8K_J7f]C/V8Gq<9%0fRc+C%%a?r=2q+;^*.M)HK=5&o]5N_*M1KXiY7.6KXj1g!ch<CB4E^&KPk\`UpSkbt([G[h.#BWloGm@HqQ%CsQJ6;B\Ygl&?#J%gY6+)I%WWD-BgO@0',GRg0k1Ra)!YUsU!r>k[93js^M<g>_$V<Xm/P&-s-W)$l/96.;.e:hUgIB@dff3nF\qKW)o9*BG#o5#\J\c&hlQ5r2%mjp4h@h/edV=$a_f?VO+pSZ]6Pc.6E^e)hlR]0B[d6j,s!I'D6eA_1d_'*E/@[HEfMrIX?o1\ZQ,[uN#pb'CV2?1iO:"YaKk^H"<%n+>h4MrTp1f8PW?Fp!7p]id,e!g(1[+DM&'V^CIW4W(&H!dj0*2#N6U($6<@f3cc%k2+F,+.d<t]>tOSr$`WTPg2d\E)ID[*E;kj%]jl+d8!3"A'QNJAoN[DUpi^E[orDAWpJqbX>U>Cdbs4F9'O^k2b3'74i`^Rt.E#@alF@;=nQ+*Yb!pHl4L_b]:bO?u)hX(3XoX%$%8PB,SE1"j"YFg+<kI)+QN!&k0=U3Y^?BQ5TW4W8>9=Q>UN8Z@ZAj2%PHL==25)P8irdb:>G*!I(]=PXAED5G8?k,79J%C'fH$"6-%qBBioRTDZC1d9(Ofq-.@*StQcM0lSsIIY*Loa450TfY3I5)`h*,Jg9G"7+$Ied;]UPM39L?8k6G-^-+0N7Gf7FC]'eg,"jaD,3@&%E:T?4Jo-J[o>SP9Ac<XGShRDE"f9,Sj`.4UU;.e,Q'#W]9`sL5Y2eD'9/#2>XraRHpgb9G=Z[nVRT*R0HNZi;Kl-?,cp3r_TmIP<%8FG-a=@A+!Vp"js+]mI%jaZ9%KbpfEc#@3Pbh5N^:n03,=1T_arJ`ARP;a#N4Ed;&"hWVjX<;/,as4ZRh9GTeCMs03^#Qf6,MlJ3%rPmrSed`>KnX&s0^UJBJ;ZhM`n+_6F#JT;<m2^[pmD+\2Ir"NJHYWj_bJ1K0r4TK?oZFqWGPo/RaeCirb22[_qBnfMIr4Z,U4;;.%ha'6kU&MTb:&#7d*Ik8BJi*JYp5Zo>5=%g=CO=+Zl^og(hqL4XC"trM.r,B%j8-?0m8'trABSmnfDZK=!6>)mhXU?mL,k1,DI*-<%Cr75+?am3:.CN*enuL?L5K,Od/jEaer>aRXB6h4*bP`F8[V"XrJh?_<Cr<3sT<RF+NbpECce*8&a0rC#bAZ'S5K>[tYoiZZCr80<%OSl3C?lQPbgn42dT:p*%YoiZZCr8/ikl+`2_)?+NU=4V;F0NoP$bZ%#Cq60BE`#a2$!Zi\Q<`FS>%qYW[cMsUa`Y.D`g6M4ARjb"%g,Da%+'WbOLA=>DDW]\#kH/rQJ&.HJ\L#khrY\r.kE]A9q;hit\Y!)HC&YF,gN#NfjLX,2A'=i+OpgUH,IZCR/\0BSo6jj2k8$b,%j<(YgIW!7rNr1J5mX`2s+*Y]MB2:(9Df*$6pmFqXPqD`O9.npNI_qEJhNI1?,Q7R+>c>]sar@tS)dBIHK)&,bq-;",5.BX&B$%1+%>].rV<mTt=]\!`M`tQT)bLtN3]p=bcN$\31kMk$H%@/Tk#-uR/aAZ/7iDCNhc!4GBmH;M5-1SS$0_EFo:2R42j+&a#`t+:A)f3dB%'r0(YfQUtZ2&e+(oCt$>7$!m;4MfM1OlNG[k;r2shVAf)"9A$JY'V&7pgC:lij7kSq[FTsaAtI4HGP\)[ib=b/#s6CT+3G%Y/hN>%,+p:rW-!/,^qMnj&"Q>ug=,e/ONcNS/+Dn3,mW*W&3n\%(l2%=q.gZ6l4uJ%5[=<D5j[8rrXU>bi_84=D@f1uPKS?5Gq(#ee"n^O%6\iE![?'9`-u6k[M5rf&IG%u>8;tVD=m<3r&kO`MqE_sm"n25mfBs;H./OCQ0Y?o)@C"oBcO2k3Gs_Ipiqb[7%kQ%B7o<$+X,hm/%XI[[X%\$cdF3]I>m43N7#AZG@&Xthj`=:tA^A.4#8A`n0rX<7pD%c*l'2Z'Xrngfq/$!87pW!UR?Tc&8ks+B?Y9\nT981WA\+2l4%!p/eP+h^8IG]SF-X?4Z"lr5W\a#o3CX70`ml!7#(JVcRCQ*+;ToWnA@K&I;'leFN33dE]n?T6tbs1sC6Leh[PN]sdJcQ:lJLT?qI%gG36?a^\1Oo?EgHc>i?7c6L(cHi3$e0hDe-GHPaeT>>Z`G)QqQmj]$DH8"Cah/*YQR`mGICL:tLqBafih#2)P+_u9kY3Q`r)g5\*%1Omkip\rNCHi8^kI[94u?#FZg8pJR>EobC/2p$DIBc'm+mfC'M>Bh-R,(H&tLXNI%fi.&eduWt0,6L7.6SHRWn<1(g/1ueBs5[ds%D49uMEsXl+Gk3gN9%i[VPH3=)jr04M1MH)q=3GC2<,K0R$GB@k:9k@:5s(!#'3X?=H%8Oh=%<2ZeT@6>C0J`pH.>N5gGP[JenkYX%R6B1/Ld+G/85s1E',rAN.@QnL];>q=Y+fT*4D>`?M8#dp-qRN?$Y96HO7s1Wb0R;=j5f5,btn)sUlZj9bNrAc^nD9W*=cpm"^;)3%;A>Ka#S]CACZ&)rI<U2,VAEEl/ICi0"_09`JZk.L3CHWVYs'(ol"#GsF5$k34P+r>.GWieJS1?,.^=G[Zb<OT&K'Z9>mObO7*Dpu%CXU\$jIT-CLTNlqk/[TtrWb0E.*CZ;Xs<"j,LkfYP4d79ZMODOBjS<Q%[<c#r$SUW)*sL[Adci:6rh]rG$IHBkk&M^b?TOilCWJp%eL/#]jo/gkT.'Q'M1Vc(KHpMLWdd9O9m"1_Q3GIP][^4<X-)^B*B@4WnShBH=]UCOcV@3;Hhcm`W]-OQ-.%9>mS@fHIH`-0:NE=;%!OS%8@`X-2DM\h2<oLe02>0$&8,@6T-WoJPKVh5T^9Qik!]raE^C]rO0[AeC!Qct(3\!qUMq-[63,NiDarNR[bqe],[N:c]Fb?V7%>1K1)S+<iJkR!ki8`]['/VA;rb6dpL:2iW\@)'A1OS_I"ho_Fe"WB\0E0J_C@64u/T0bk-?9T+JRU4WaI6e(N-&rK&r+jk"U:o9a%b>%:%;];s4JiEjU\REQ["ApVe[mEU?`k&:ObZUUp#qh<Q/p9h]'?HYUn?0T88i,bZ!3N0J_CG5G,@1T[(o<OW:75^:kdsIMYP'&t%b&A=&Zq80)CU`F2JP`,YkCHI&jed/aQdSZ7RgY>a7f%rL9/Jeeg;^5&.F1R^\]/'ADrj_=Jd#&Rkd``OZ0rpb,8SHN3.ut/DWZUU%HIG,rmVbCgb4MV^[5jJrJKT1jCq`o`O>[;@$`9ZMZ$i&NVcmgD*Pp\d`0`0'\tP$;h=.U*_nsQNcK:kfQRXpe?2Kq";kQu3:0*?M%[D9n=jDr+7iO*M3:J!/QbR']pPGoPdV#?a"]@Gj"3t;0LZfYF4q1#p)i&d>a8Y"3Nh.lGMbaQJuqa\+6Hmc6IahI^D[i0WAZR.i)%n0b[`Hmc8_=r,A4\CKM!R5O6os2hAIhoVtaErYC+#2dP(\WKbPdp!9qP?AR]nqX[mHmc6IPEZ%)<eKjOeca[s%rX?#:1d4ZL&82\%%DJ%eEd<]6j!9sUOBE7SnrF)?^R\MkSE'M-/q]e<XNBId5.o(sB/46`>1,ob)>q]Q##sL[pb%2kM87(l<^44>i+Hp_+MOXImP=R*%Rg_i"YYX[BpmIT[!67::bM[#N1-c3<fj+eHF-?XKjjUgMIc_sZC*!9J/q]e,aah?8]t_`5#!49[o8f<+pA/n80"2clc9(X:"=qQS%AuF71.5h+61Ni4LoIgH!nPdt^GX:'rA/Tj;=B]IN]VOs*n(T;)\D3,W@lh*qXa,Eod[:%&:)&VhO%U:7CF?\\lTRYkfT$b;_`^>'%GiZb(&ftJ7O"P=jJ:H2N""uS[nEn`EZ1ec6*#f8Js'POuJ1o5FoKPFccLK3I4h&n[VA0oNn6B'3A8Oh;oIqYkim%f:3A)j4Z2fS^%=;;!RVrZiKSV%9T6u0r&64-^UXK&9iC<@Hs#gYqF-1s*dP=_1DLLj=]8>.GgRT$0V4;;ON=9en'>B=4IQZa('%h"oO4(X#HM`V9l%LG_dASO-KBThl<;P,KpYjEQ)C&Z)_-lgh'M,jZqB*7eYG=ig+_^SAkb=;<+<C!Lc^'Z)7E`L2[b5_h$XkJ\>E[9/hLZ699k6lF%)%+B*M?(PJP5C*Mn<OT\PqkJ6[MI>JAB/^[SV1k?')O=A8TN9@E8(q(Q+Wmb&a1h\Ft@:#c\K/H(`5Y+/lMP)pd3=XrG6^LP*<J)+2%\f-lFB8A6+?I3*i['1Ze:;oqt.(Qpl"oNL-i]dqC%KEJj:\#=Z;8f)W"gGT<"3:]$p^uGY^a#3aO2HM<NbGBpd"7P'@MtLOTF-Lk%.kk?3Au!4!.$=R.]LHZ#JgBck87N*:_!A@0d/a/rL147_3VjXh<3`\Xi7M`q=b;[_UbUBK,_@m-<0:8P2$./I#;lZ6X9gA'Z_S`c%$%SE`J:bHPI`_(GJ8n]-bmd*6=B>N)Y_]t1+=Y4&OiCoY[';7!BQYjATs9E5FUa(")?[o<+;b5m'S7>bB8O;>FN6m)a)NjWVnral%_T=K@9?cl`XJ5qALZq-:=Yb(a!*rGiSPpe6p[)53OU(r6GeAQVqMlALY$;qm)2s(srg[;2=jM#fju:l^)_:`DFo96/T")MFJh%1(%G2%O!#%"r0<^VLN_:='E9;8'j\gRVSg*%/gPE:0,5af`9!M[6(aCNN-!0i=*<!Wl+,a%Lo(_WqUjG(B7KUL12;.+J*7"@10$;aYX%]&("n(Cd7EMEDc3!oIr:,&dor-L1d'B8Zdu<].H*RZ<n:en$8hkgC)q7TknWe$8G+.UuE<&HFbH9MCceEJG7-Ra[LRB;>f6PUAnW%_Qe4d:oG(!MSpar!>__fW0!9EAVl?J3o^@7?i[*_CqMG%9q[jtn-jG]Jk]u^7PlDn-V1a$:koIW7<t^^9=-V]Lc<0V^'Uf7L;<u5%YmB28-kr.17A)5`(MYE'\L'iKXX5NRrO<37XO8:e+U\D!:uUf;.I71+<U&413a!;moV/;5H9@TWCdT?E152ktTo8LT3LR$5n-kQ`%6pQ$J]G6-O9nL/rFJ`0;4(Z"GC?`$!M\$'#+E)$77Lt(C>dtcbjYbcPAnNLI(_6GVBk-_`Ds`q@`U%<:3Z\f[KSfe2?_bIiF3kMs%M7-f'/-5b51RYUaM`+8O9S:R2OZsKVh=t>JCRD9aj$+Z&n4FVul2Xoe<Y@).^5E'"<<ZBG\Q)MS"A\#HD7c=I'02[\q_,W'3hJnt%KhhO8X>,3.POP)F?]]\ch0(6Ki4k6DLD]@!:GC@:K)@k2L9[\]30?h21#2;&rPkclmn>5bD7]T5=9,k9a-H2SV>\i1c.8M&RdN9s%?@'N7nepX!!r_idV>moJQ:NGUH_T_lJ!nP#0<NNpeX/9:o@DrAA+HLSOk1[2s/4=Li!VI_X<BE]K,q_n^`j@Q?:gB2,YEYbc6G4/%6%6dAALNW;:6nI+n.\@7AV.:(=95f3914HC8r?T)cplG!6t20S6;A+AMM[dpd1T;!==dAk#b/\kG;]g?<YuDhNM<CoYE1)H"2VYP%a?s;b!.qCIEu$15.`VoT-\rYUW\b6R0;mp=K)AT4$q1db^ECA+#NOEepgk"c*Iq+NqFfa`':o163_q+oFAi5G(ncbnKWn*<TYcL[%lY0cQ2A@uIiIW6rplY^b8s"Trab8&VaNTa2A!'6jV1s#W9`(/5@)<$Z7(6]\*%t1*J?02o.Z+!+-t"$X/if'q#YL?Eo,OHP:a@K#%7:9FEDDB6ujXI,s?jO+g&o8.e!IPs<?E=CsV^bPWK8M0V.?;2p'WI)u,Z=/loLB&j't%@\km4[$=TR_4X2HG\lpAdmF<iuIniI!8%UgkC"U_+<XV'2!7O8:P+>6;92fg#\O$G`K_NL!*`mqc.Uf!^;3^.aY\CRf8CL8dMn!(bh6Q2sS??S>@ULJZWeY>X"+Z#UB^e5'2W%J@`cKXBZMep#"!9Ps8a>YYaYe>Xc=2((Fq-i4">OJ9;LP)aFtbWD\Hp+#.8V3!e8ldL2Vt!Mqc,=t/'K.fM/2ePW!_E$>R/\h*=p%Ca<#cAOA<h;,oo4"$'6kIY"uBS(BT272antB=*ZW_*EgJMPC8>QB"^K=t_O\#d,k59QW?90Qt-)UH,!X$=j!!eg49+3?ZDUUsWp$%iA2GZr4MC'P[WUUc&9;%,P?<6a$`uoO8o_873Yop8Wi!h"lYqpoQFM+"bMr:-'T/gf0j:E&nN2!\&Kk9)X7u29?+>`R%MBuafm[6%nt>Z5FM+9%CF^O4nId&qZ7(`I_CG+f<l2,-S)A.#KDG7e:KgPpWc!>.b=`^-/S;*a%,UU),iRgr,iMD?J3t@K'>7-WPg>_JKR<5r%bRE")0EVmr?1PV((T=H/i?_=Q<@24[R]p-VM5NcbZ/>g"5g\GU@Y[MABo"^"Y"H'uLu'5L@CjBq(*OjZ=)D*>6KK9b@MF$Jk_MW+%`mJL`7Slhk,\<MSnKPOr612gEggP1V%aG9aR+;tfegs8>9_\juLF*)FrJ$($*h_BjkLY:\F\i_%pJinb@snE?$AVmXT\g?;J:[jp%J3X6j=e-$kOGRf^#`1+:d4lRrZ-)Qr(BC&LK_H(N)CaZ&oEoUo0t,OD5o8/9712+4KVDIM(ECPb@kLP`&_Spi$n],+.YVS\aKgZ\%N$`=TYQm@l'-f3<'SspEf,eVZEWM$)+/[?lRR@CYlU8^D,+3K?[m4\FKA6tSA-!?3Ri#ZNh6>hH#0Nh4Y@h8C0kBY3]4C8$S.cUB%cPS%5I;0<n6/MMu1J[<FN)S2-KE1FK*jj"N;_2]`A9)MN:dQFR'U^4U4@(WoU="ZB3rcc,`PXnZ(*4NS-7;A#:c8pHF<),=1j-+f%4=kgTkBY[F3IQ<F<.k%aCppPZkaiG52D>;X)&X9i4q_T^KS<5E-R]0=nZE1k;\7C`(84/.=brq1('92I`&91p;`b7!M2Fo-L`hk_%XYHf"2()EO0NEsU"#]_:ktVhqq%:(H-bj@&KaJ_N;*b<(7I'shi<_":?D=a&.]"hlV9-oHP!CIYVCAU86thcP*R8csFN,j;N0o*]%QXs>KnC0UY;^MKAcof1h6CZnMD1hWp=RN8L@=mue$^PX#P*hAJb8/S,G38DVUu:;qUu4o<?P4[`1BsN;T5%+$iI<Z^f=sZP719S<%W,*e?!XFsI3]6+l(^ii+,ajI<5^t3>?PW\8&^[o4En[g."h$Lrd@)2B.TC(h,QlmG&e,i!?kd5)FW[8p+BsYb"p0G%F/m*HROj&h%.qNfC8.)#N%K_9[K?>eF!rmKMPHR@7)t9L-bSO]mNVeNFB$s]q-o*H7f28IJ"&cftrCbY!#2FtM<T]"%3TAT0?lJ2*JO6_g&?68Z%RFS'#)0pj.M8cb9]Lbs8Vl:jP!.[b#OX`2Z!946=4\m7F4;\)D$MleW8>-=F;]SFVq?dE0-trL5J\^=L>!rA&3FF8rdJ&\8j)l`8%5Tj)fpqi/<)I*T*0bsg;[YUS8;<o6B^<oB6GcL_(.+9aZDJ]LQ%qn2%C$Jk?rs,Eb(,HiW8?;['ScSf)7#OgS98gN]^kgu_)N6.d%nu&?Lj^69K,jl$[9\#4_3<GtK0XO-DZd/)?DGc7I=!b@BkldpK)D+i5SdNLn9$llR$uVsOTR[NnBS5)LE11Tor[J"=!=9X><(/`W%*`)h>B@(."5QMi'&IU;d!AY,YoB^27KYK6IWo&2BWc'5qL%iB@=\K\G98.+EWX9#k:)>%eSA^!aF>Sj5,^<Ib,q?0sEE&WFd<;gU%?5T1LFoA9&,>m^.<YST/90BQDMh2Tf5qO?%nH?'%;j[s#V(!&?'WIV2%O>5VWRNapS5Jq6!\`#2W"KQ&d*[ZB'$:>&6ZJQ0`'fEA%"_+T48I21c<BamT;peC[;;#08=L\Db[*#`=$CQu*KHlrc8WcE"L@7C^g'7!fd!EX;@VD9FX1G6%VO6<uBS62k1S(-c+"+fl5/+s4%GjVgS6!Y3iALP2BrL6Mj')r]$,,,dNY4`^M#ROeNg:ADYiD7BAJS1NAOd5u8.8>nK-SuQb";E6%"4j%T)$t:R+p8:^R'okFdIEa:%_2CPe!CYp55*@1J"(;:na:pTs,FF38M2!I#L9,oa$Aaq?LnpEQ^jFqUk0&k^#$`S*qBenEYpkfi]92?W!h5bm7WLnr[DK3?$_"*\%bf<)@+]sXlS\p[L-Mp.R4^WpnP/Lgh<*j"a1NndF7)KtoO>r=N*RI>BB;n7RU\-;`6D6Ra8Wam(J.]riTHS<)`:A\ed#hthVQ.R^%9qj&@VBQ\J=6#!$NC6VM1^\jN#ng5L@EKK/0FGH,8fB?8f2CZY*L/Tsa^r_rVmG<^:&)0*!W<7JQ#1KK%_PE@jYS*1/Z+*2CB&Td%p&>Y93r(5IoJK:6p*j?InT`AmXr^I>2oeH[_Op<T"VouB?UM,mBc<-Ki;8t]NdHjT%2r*"3U4Y[B23$FG$kp0On"pV@jJ3U`#OF[%$gY_XMCqh_ZAd5ZH4dfXPN\Jn%!lO>3JM9`[&,H.:R1.^QcLtJ5i\g0]<&p^=/"U"CN!(l)%Ki6#g'a':>D!m.W6;+2Z:Z8+K<JU%jD,Uh_nk3l7)e.Be`9_)Jf[lOUIg?9Wf!_Tm`O+AF4G+Xo8Rng`i=E79tn=cPaDEcC:r`mKVJn<,tC$Amt<3C`/db/p_;?iMg/VJ%-(^XeQtK#Y'p1$W"pm&sV(N%<&0e76+l$,K"j2EgE5UBLH0QToQ3qrB#bgAEkqjed@9kl#*Fbch[7C]L(3)GmQ6PqO1gpUoY)1Y;%"\K(jH'!=ja.h`'l<jTM=htj]:B>k^b;>c[jMK$>j8c[/,3@F,`6gr1/IFLEjVb)W_#dL[n/;HCO!bFH^pg]\kW`JEj?sXs)ud=V%$u"P,XJ*W)?d@!t99D13KKhec^EcOpr(>5i,#."#_G>gk(sK`uQk7"V9OLDS6AZ?;Hl+jLXlqetj]-CCOekQn'8nhM?q58@7Y5l%%FTbVD6rQNHR:I[uNT`PON122(/7oGZ:D>6UQ=iD_d4c(8$/27rD5[W[4Di7jjO?1$>S<W'ie00u9O.B53J)LgA-;7Nk+G88MPbl'%Pr[@p!au/9=jYL@/(Ij3q/o5W*KK$-,5"oa!J9'/2Mo<u_rl-X@G.[#;mO7*$B'jBG[;Z.9bs8o%pgDR0iJLibRT3%N+a(d.8/1,%7uB9#UN9<jQnUPKc`?\CS:]='KgAej(s<\F8aOgQ#N?\9E2"U;**^7SDn$Q<7d6%DJBFsVH7B-GXUeL0`0eM98r*SFOD<]7Ah1Y2%2`g)miK]s.+H_IW_KYN\'1Wk1Q[+b&!/f,Z9BPo].=lDQ)pl@GZ7R:1T)u65afm'qbbRN:2#lr,b5WHmGOcccpU+K?T5*^J-@Y`C%abor[#i*1Wa\#oKZ=6qc#VhF?"?1@?:r5RMb@7%aK$n46KNUbM!m2AGNCA`#a=I'_<,&>Oc:DC)#>^8"<F@gJGX3\KMc2J\)Aj\:%1nGHj\tUus'*sR#2+T'N@ZX'2PX^O$4P;c^KlIJI#D<`(ML]]NH0#I$;03B\db&4OKfq$0g+REupV?\2.)-23Dh*tUfe7kp)k.Rn%+%^S63\j6Lb]'!+MhP=!4AGR&K-^i;aAH/8lpFB!A;9n>a\d.2e25]9BWD`&V1=<EGU3n;3[L&(.]T5i&G+EZ?kJVG28r62:/_?+%-rM'M0ZItNUeF`Jk'rXQ$:\@RK_<1(@8V!(%eA,pN.mGU*8*^162Dd/c3Ae%6'iT-9?t/5mP(gR/OH;(huR9=mpXu)#4N_]MA;,[%<(kGCJe:uq@I7&tbP^[/m!fGo48BB:q\"t?3T\_2jHu_$'.0bQ+PcsSRB4W:b/(7bi=JZA8$Z<!QG8=(Z2cro(^;$Z<d+It"po>"%ALC<t#`J\Xc8\io8i089VlMYBS>sCLee$;0V3sfL',qC8-n6eIN)QZF:f90J)W9"@'"^WMkgM@SUk6^Dn2Ln6n8U^p82MS_J0N$S%Z2p4+8<KoF]$jP(#nHHp[8'KtE%jKhjbPf7N<QNL1'o3l)\e*qBbobRP.22=(!7^?'U<qH5t>(t6"hg5-4j22'P'm'TnOsD.l7;4%e.i`c+]EleMWYjj/_Dhido>9dH7V<ZW,kkUE,o+mLo^$B8Dnc-fp)+6!75hAVWCd."`YM6F:;$Na$g=rEj1.[L`BP^FTjhU$u)D%%PXaqm'mY,\8Y\WdRBm@D'J^Ag7Z`r?>/p/o]1m5g6Pt)O0-XN:o&\8q!Et4[;gMA3pa!8CO_$f8YI='h1Fk6]??HIh:l2*jh'nP`%F+PU(@oIp>TOCYZl2tkj%.DdP,!cm)>06kaQn)!t(&^i=VR'G@V5Y,s/HQ>PPlt`2(^/KYSO-%I=/-p-OtJ7(dnj-t'JVsibD^uR%<LdHb`LYNeBP'&(JDi@IW)@>s>Eq'M(<T$;^_]TU/R`o/Th#k(fb\@c!7k&1M&$W;QW+`57Ku<l`ec1[[R!Frk*nrkLb)P<N(MrP%"q]"a-hFCUc$JFj3n]g0<L:,G?57Q+:B6:3)86_@FpJ_c@u.KH.pU>Pp:+ESd0"o$Usn`s!2G'J.s&!LXu.I+e)i`Y+@_55ku9Pc%:glq6R3P(=O;JnBfqOTrP;^K*_gXKV?DAnq3&BJQ8o,@MAqMCV:gr$*ThJNhH^.'q9.Zmo+km&C;^c#rND;Qq*grS2V2'+NMKj[U%%eG8rY9GpRm%f0L)9CK:;P[,Mbr`iD3Jsod=VB25g1>.U0$6s(8R;!QEnD$eV+!jN@dHZ/c6]h1&GcTO0@#:(*8"Y1\e0e#/$`_Q%6(D)IQp1t2jH6SV\ObX]99Qi<9"bi`2&[N)-!NZ%T+t95@,VfS*0LtjO%D/6U*7-Y9hF2M;Q'u)*f2Qn7?68V+[(S:41oFD&9uNj%H9=Pm$-0m2,(Q96P`8(MU1,r.9P:pdO_Mg+HHK6#\=cZUK/3\APO12\-<.uOP%0RfOd)A("OqZs6l\=b#dZRrr`D=G"q?mT'KU9N%>*13p#n>R6XTJ`0YK.'A9\XgY%1aC/$`Ug:A7Ub;=<g;'jZq7qTd\?u.\ar.'GA#&V3a5)Ni8nXHOO8'"sV,LI=][B)^e,6W`6/'%,/JS(<O*/ES?+.i"<8%FDGPX1'A:KXkg8N[a>>P#)_Xc^9(ajX%#jU1C8>uIVigLbjB+Q\-DAM9)hbc05kr07(ZI"-'peQVf\qXQ%N-C#6M/=\W@VF).PZ&)H&Ui#08!:`.BV8k=,g"AX>#3]%.quL.;BqK>=/XLjEW`='m$2*3P!WUQ;ON7"kVCHoE"X!?Mk&18]^Vei%_Aq.-c<,%l5b5Ti,s`=[oV7VO5-#m)GV)4n,Y&>2ihCA>.(#=5P]1=tkF`pVkRpL`.<AM+f#;^3X?Uk8*=mrca'?_u-d!WsaAr'E%1YT-O-Lm&gdql:V+d=$?AXuaTWJf3e68@1c#rkYiLC"G-!LIAOD/DV(M&0-8Ll>"<6nSj+lY25+ClAI2.?`gMAa,>%lKTt3<]$9G%NSu--ZHIQYNm[&S<f>?e6"<dY/#n;YX;l%AY![Ji-L+73A\0#TQ5,Zibr'CHqR1j$^sX"m?`iV.>1J,1WrHg6s4+.KX&],uY#X.j%`]q$VH#h&pM:q7nK(+4bE@O&kXKma_Y`L-=?R&bl!:T!cE(U+q=/:i';kAYZ,JO;g5W`K$&@*FGs+=U26hpu-ZL+q$"rsHog*CXr%D5"l;0U,5+WBV5N>HPKL`l`g)#dblaH7[I/!>8%..M5$?lg$*WSJVQ6_)"rU4c5(q$mWmACIq?m9gl.f+bt&+Kq3-lKSD2c]#@5F%&uKV%q?B814]:^TPT3(XhSQPh#J*;)-Ui'U,/%i%n\,n3&j[=I"Jisj\\mBE6j(j#Kf+NM@!k(nZG[3m$8k,HnIp0"Q]V_['&F<W%U;;^,Y0Z?sN\Wb$`K^-s%<33r3s\B)s/671QG@UAK8j,EiER3fOe&7(P2QsHJ[npl3F`7!bt5du;4]tGL%&]G#W5!mAohRCLKmP!%n#X<Tof.*r7X$No^Sok`U]Z;Z.<3XrZ>gFAVd+dX&Yq1a'9CnI*#4ugeYsqe.M],i<H\@:31X!4hO#/o_b+jEb66X\+soCa"\K\@%Kmo@dVq5V\0AbKl'6Wh,Oiu$lefVZn"C9O3*9)0/$:aQ#GVR66Uf*aA?=r$`F9GUp+.Q+']fp-X.sPP/D?60h&-=nnn/)DQBF=%-%YShU.-@068cldp8%eO`D(TH6HaRT'kF%cH1\CEc'ijlKF4L3\9S0]JkPCtC86:'IHW%TkufUZOSV;$GKSsYJ=NhstUd93=SQ*\f4%MUUoG8T)r:3]15`\IG+%aaqCX6r1JPEusQ)DDr<$Kh(^:RH[iLG&<E9$8[=X25BDX8@fB*Tj?gN-G>3j*dOs!_B>K1\eh+m++-,R%,0*,2`tdsW+ieZK!P(,;jgOO*\8%7cdh!VnVN87(]TV6bl#rA25*Rn?lh-./9(-*41aBI7<k"gIe,;EuZSQu1KV/)m?45Yt+3(pJ%Tuj)*OLdQQh'fIhQtAN8r.@[ICUIF883_G5>p$P#OJ_(3X&_(U1clX;%h>_lKTqqrgb@"i(IB7,mEE+G6d="o'nrs&D]C9[?Dbhu%Ge=a``T7RHZfd?G)40V\imhCB?+1&[3DK%;K=o8a99ga<QhO8e#`Ho8VpJ/V_R2G:iNV#+$'-<0kIQ'*M!IOb<oWeTfW\;00@-Gc%bPb#WHXFhePm&E*C-KuJ`EP5jR=JZ/9$&lk&UUT#'tIT*4cBDPk3A5Q[IM(tHZ!+oELl9Q04<#K%c7(a^'gdW\`mBDk38bmZde#<%pAS+8W:BjH'C-.7IH0D2)ck#"^4r#ffNgb'Yh=6&Duq]KS>@j]8I<f-13IlVfB'qV8I(%dAp12SSKa@"Nl;pfB`TmHbXDn^/k^*>%j5`MhN*bdnX?9ePX[Oq7RS8TRjJha>PpbOQaqYPK%OWO.!@nS9H*$g\B;Dkrm"(EDj?$O*e?DJFAB"*,@Z%4];`:4^?pE5ia-W2`%j3VRa_idf%Gg0t[XI,&RiTqs.N0U9^pquo!fVh!Ak/OCB9lr!"n&P!s\I5/pl)1&@'(PC3puZV#^9;rH<>%T<P:=Q<O0>N"G>Y8O%d5_TD354HpdqaWi<S[7ojo"m^JThI4f0=TCL2qarfl]:Yh.RZ%;([A.M-2Z^^"UqW))L,>03R#aIc[Ln<gr'nArg7&)UcV7ZFB@a%oq$1":qa(H#K^1qnPCmKgtHgPoZ$I.@QiOo9#g'@T.03u3)aV)TCgU5h1frKHmo-VG=>7Dm<S'BlVj$"Ejd'r>,BuOe2075K%]%p%P+=t[TZg&P.FY@6<EPT*GubXiO".=uV#2f3O-Kd'R+cC#m(>S50&\%u+**oa<.fYBhS4P*f&`ejqs1`H$mY7]mrqsY@HSj^_M>!>%S,#MI+tmtjffUJ.Ka3SJ*^0`1ha'5R%s\#l]A2I3HkcRL&(47@FLLNYLu12i#a#.GT"#sMf'NM$Ef2!$j$cbYWX?J&/d]6r>nK5$%3E\2u+camJLB?@2At2[6FV14""ISUk/s)%2AGFMZgX!n`p<sfi",XjGK5^XL5Z3Cen.F0lXhn'JfTmiDLP.>f"#AYf/"!Dm#N$SS%%&aO7f[A+_`?)9g%E\lB-l_g;"[8O]0+_*5HXFUugalp]`Wmd%Koa<J":pMd;eX(Ei.Gs++:PW6$T;A-(k!G+?Qe=Uq/EHTR"d*G%cfS(gF&rXLL5@kZDD$=b-`bOJE!2pFigYQ]KanMe`:q57rZG-4%&T0;#L8$NLO$T3TG%r#OnTq`hO2R,`s+R0=6#(H:ahrY_jco8%bE).JHNS7f><N/"5)6Ua+,&9j[N'isF38?9Y'9OENii#GJ2ijVQ8QRsj05?=LCOaH*CKqHa'LHYaOlf2aq5[Z"S`730>X=1h[dun%r<&ab.C-(br.]P?ro8'E$@DA32!Ps8HnaVcin3PV%q#>IF(oQKI\ZHLp>/<65I:dSM^Q/N^1cVHX06b.E)_=94lrcJB<puHX0L5E%`R'4#1%<0B[dfO9*CEPD(W_)QT+c$P(EW?2kuI5M%';N-\n1L0Sr%9hg_.kN^:#$&q:\)ei9S<\e1T*&Y']p^5b[P\*4eY3bagat%T\r[(.c'D<j.mdO"Z^UL@(AX#l/Q_`^:,`dGLO7Se,H_!&AF-=k3sR!:rUCas$SEi\P(2:4R1G9Z("<7F8o@JgBT?T=h;7#%S!of%md/nW/3QGWScf".?9ZL7D=/Sc1P4^spfoOKVW%J^p@)M=^UuV1*f3H30Xh[dAnp>N%K/)Z\UU$k]tSZe+o/*^UDE9l*IlN,*fVgN%A!_Nd#(eYFf@n]/HP_&.KKQBN7OuL<kq\si?K[?(`C3%0AjQNtGWNSmZnu8R89sW-^hB/P\'Xp%\oP@]r)b%9-`R#tJ(RXk][Y's%.ar2]1XF5?;r$K;l/CF^?/V[C:'SS+UcCJ\.6lUbWeY%23.JNP;JZ7N44>70Au6HhBCAa=;GZBOp3r-B2=;+g_Jgd5gr-]cpS;&r%FDc`7#MiLZqck/k:1pbiLNH$+\_Q8\%mTWuQJUXt#;>s'=Qd-cW8t*VYL:\I8R/:63SP@a\a:3r(P.p@@#anu;uEV.4?]OdDt]us%+>35AqEm!uEo5b2]\R;]Y[;f<j"$DW`SdKSPmZP;Bg3N.ohUQ`IIbl9],R%7K,A;KF,HP[$M!iOMn_#2\b)<5[P-2g43lta[-0>R%H&DBh-Dg6(p2"q-FLh?O8q*X_%e#[+?J16rMaFU+4d,Hm_s,qt]_E\=#>*DA'<C-,\F,-JDKXC=4%ZoBUfjpD1H@,]0893%b0%'g%q<asJ1jS_X-b'&PO>P89-dg,\44E<ZpkN%&>WFKYf=$*HQY[q:O79)KdW1JqoBoU:W>*:oZsE1>A)jY(4P$8kAZEmso!,]K?WIh1%\&qk<Cuc%ONm,YhIc:,G*VXUJK?q%in/o^F_mt,\]3qY&M:ZAsX+q:thf"IW4X]F@A0;*=L%F=qb#aEWAtJ(nr-BAV5+:3AiJSs&%m7egh=ei49+3t.UcLZ`*4=Z"[a,)>FXBS?iT0p6^8F/n?0;e::_[DfXHBm7NjQEuA,bG?tkMt%M?(db"*b^14,WAZbdVYjBD_"P4%CtL]-%Qi7jT]<YJFo<fV4g^8kg^I^dpo*"A,>2\YXs9WAH/c5)#<-/eLl2d1L<Jttk/%W>-1S3":$gurdqbR=bKlY\iSj@1>tnWX%,$FckmT$r__\-%YH[=\ET?)"BmTn/hj4H!7,K4?!ae*?PgcmQS\D_.;G&<eHU-V69<:kmf]m#RNX'ZC6X.BpfHEV&#]I.gVFrQLE%=Q8jOQa<+3n@<^!J(4VOoc:5(1XWdZH/+NWR]UNb12IunT,u%io^Pf%AY2oOiGlNZ*Vm!r7H&r9f./KJ9?H'U-Qb9u'.oT^]dUf?%ZMf1C;)g1]Y,Z-cBs6JZhrAkjlR-=qU7@PlQH\K?s'k+(?6=%l>j_%2H7h;_m_n=q'sXe9\e-n/<UNYSa.mhKGQ?0GEP'!S[_g.#%a66.Cn7,SC>^<0hla@BcpBI1\q>IhZ4g4X4+[0q641mPS5Ft#%<I;G_g$:f8h0TtY5<]Pu/h;O>Qq8`:^L2+`/US9DVsgBtQb1tQ%#gMX-k9q(h?<)'UB?BWsgo[)Zb)u:NGo,!&6XT/hfR,/Jm@2niWOHbEc7]Y8];7Z5Gjr#++"9.shR%/GQ*PA$^7VjWB7;;3aJKT]%II*4\:M&H;I&JYKU4p[PqnVc[_1lF,I@[GbH3]5AN\QJOcDJ4"lRI6(?'H:_/j.<HV4)*N("XSU8fYH6XbQP5U"/7BRRZs0jYhkt%%QH3tPa?g!=:dp%-Pqqs`.$,>Wj#\CI*%U"=>.o8U@UcuD>/\sjF(t%=5H$*(Pd@-ENXuNWH_h>3Sj#GjreaU:[N6_ejm8&XB[\j%IE$Q@rTnRZn]^MET8buUO953FT8SGKRfG&?C_+%(+pP^.(t"sd%#-_D?+P::<VB'UVk@,BSi8WCU[E)!XY&>R&g3/qO4oRNHd8&"%Ir8K)p8MG+hbI%bD_2j(?b)>8pShlAR1$rOlC*tfkbd#O4i`CN^f1BU`V:K]]VVKZp0e_MZ<Po"hUM.7Xq2*YF%:fVosKk%)>K1Y%/fk*(dlRU7=3C$7ck2)G8)k1pbBB1%4MM"a/hKRY=rS1YVT<sJZh*N8f/`=ih6NUn6An\JV*=+`#fl4_`+?[?$-VjKT%)igg-nEq%m"mm7.d\<u_Q5):K]=)l"1?:=cgn%\aAHN.=@fsI+::?n+ERc7UPrk[X!at"_crE/i#@UHO]su6rBpt$rP#@rMNr6W-D8GJY]9(e%;,A:?:l\H,a7BZeFqlVOY^E&Ag4O9(*%'S$/_97LlfsU?,upZOWLFDTY1%XfDL%mq76Wstdl-*X$bi.UD1.<pe:#rcp<KC[A4pPh%jGPFqj[#E_:83lQD`Qf]aZR?"/P1J:HHQCJb'!Nni0FU&Y&J^Mh=_UA`Wu0^i-h).68Ye0/T6KC"D`7eAbON9kW/'&gXcTtjMTOG%d6-Yf5H0uJ1r6hnUXOn?FWX(IX/eH3M6/[JnJ=&mCig$.%aulm;W@Vg`-(Bi$_pT[#Kk?tq9g*:nTmWKXA'=T/u?.i_-Y)4*Yu)+%>W;La9$+cf\S,MqM]9Ub6b\g]k&IbB^,2+4WRl+J+Yeo/pU8u6([TAp;p8oN:+lcX[a>K.q28N;pO<jZlQb#u'f#8A^G9f`dn])c%V*3ZA\iBW<(j5C&mEYa*^X)*'l2NfZA$3;]2HBi$f)aLKZ=hTYFuir'8?4\/Ia-6BZ3sc&Fa<Sf&6;=7/"&oJK^rJ;qgX9m4ZdAU%KZn>hL48RhI(%PME6mY4?D]$`e-VIJRT7%Q[s+;WXNE09D!:-HoZGnUEj+6ZDh]E!k76T]on?5<+-_q9Z`cO2o!<>fY*ToZp49Ce%LM=,2RCY.fV-[*F-HAVoL+n^q&PhO^RWhI6`.d"nj72pnZdRsko]6e,Qu*emb7GJ,[p+E.i$((5nQZNh(@sB@Nd(g=;[_"u>2.)5%S6_7QRr8bNBWcQiWPSR9R25pmbNg.QX9Yi"HXV9mHg/a?Uj8'i2^557U!X!\OT\(L<pRhU!H$Am'%6qkX'<8%9K*=ipRp9!Z)H%)%^ZW*U(FEF=W8c'om]IM'JL?TM,\!?b3tq+m?>W?<$(Prqjl/Hm]gb@N+=+]<iC\eIVTU\@k.pk%kg/,$.874>Z3pSpk0dq'LA'a'%/`0a%&AQA\Wuu%t4l_rqlZD\j>Ps%XpYH;?0K&2?FCKW*Z!1I?BBK@ts7NP-[sA0th-O4)`'t);j!XE6h.:,2IlMdn#WWr.`Vf!"%dej^83jXAZ&\!L<OV/"ba"Fk#Pe&o9g&>t@)RrRC9uT*E76:Yq6g^gjSt8Z,Xar*Bq[ZnlWOT^)"bGX*ANt9XE?l69S48>K(=.E0%&AQjTeClV%2tleUi%LpB^c)-0f0rbgR8@Ss#ZgV<9"*?6G9M(PEo*%0`dII9#l;Fsp-3g1Yo$!f(a/&JYuPGr3Q3_t0*HBkTa>^r%G2RA-ff\3omRm%u\BhKOJ+Z+]da$429ZkF8@^;d3:'edPTV72sJL8BiMM=PV:W`a??rMi!#3XV["jV*+a9%d4:qt^YiH/Wf?Lg'g%@a5dhM''kCgjbj;%AH3^6((@'\tpGqeDmE"_=;d9(\uuX,J<HI?l%5L&uZt\l:OD!HB+b9M%`%hKn9AubS;$l4J.$-b93g8ZnCjM%nqA96VZ$^<08N*!U>n1h.sg"akm&/B.,dcHb<kOC*mY(<7k+j\0Z'b)kg,[^'f'5fJH`YM&q')V_Iq=Ds3`n*cK`$Ijf5g^A(2&q%9WQ+=.hWC")5.lDk^uP\b\,1%:kd#@bE!4&e`K@1-R<W!`T[Ug=#_t%c&^dDc49]eQ#W8<^pe?-0Ji.>M!nW&5M-p?'`&QS%6O<1%PpOA_[hhC;,5odKqS`>$[N+29<@#t5@QJ\sPuEA2LpC+]Pm7@fKa7:F&`Ifi?(O*F&2j8kqBAK,qk:Q:Gn?0*4Nf58)lu7#:A/.M%#MlkaY(,6n7<*+G*!tC5a&X:ucX6]bF#d5)JTZ-n*97QU?SeJk8+&f#7m4NDiOnJsVoC1]+VhUN5$cn(T?TZJL>l0O@8r9uH&g3P%7iZG:pb,h*?#F+is(,uXb>%?j^MIb2\V\#uQ`]X-2mKjlZF0Y'%.-8hD$NW=mHqZ)D$Plj^&=;"m4L?&\,WbAh;p!Wp0Y8:]A1?]%rl`l9TOVYRs(,uXb>%?j^MIb2\V\#uQ`]X-2mKjlZF/NM-MI.?[^Ng'`8:L:eohk;\,WbAh;rh(lb@(LO**]+7sk+d>MERfU:pN'%XR34'n#Yniluoq)pg-!'pUKO^5\50"7XL:_q5?)(dbhN.5'N)$,5n"c2!P`5Q9.34TUAi:#CQ[t^*c<Th"(KchKpYdEFdb>:V]$t%#nZf,kqb'2*3=en#p\D>3(SQZ#U;'Dn([lMpKBX/lf3*]>dYpX4#a#uJe3jaqPqt[Dqq+6m`sq+h]9<g?RKjR+2608Fm"U7n%B<c%b02">]mk9:rib.ArpnHX?V\oWV8M9=jbl(qP7R9N`N'W+noX30mDInSs%aL/73:dWrY#P9\E]["I=$+?mrqhSSiZHZNVsL.n^#GX%IugiV5ofpWh#I*cqtL#R1[aN!@s_>Ah5nQV;gWrR3Ht.AguBL!.8cn$i)`*#p]'dHSpgZ`r.f<5De&g*[qSWJ^R0-:q@taZ^HYor%>aW9<m%5`N*p3G0jjCI\k>.X4H1PA\qmW27q]em#q\R9OI0VtppO@P=+5&gHl7\Y(h1%5%J(ep/=ss-OV5_"g.8mS)G0&)[,Q*V1%s8NC@^P:8\s)J(*a3M4+.9o"2o!Xp&G:ri?iP:YX%mTu8a$R'0Z2*9p?1LK,IX>gA5JQ#r4"%djPs9WiGueWgh\'gTA:F6O0DqZu%(Mc#*Cq;X5Q"tkEIcnSA9>A2(i\'$blAt]2;EoDIl.8!Yn'7Q:q9$l-J#6t.\)tF:q;pT5%hG6^0@PQ\n">EkbM)rCqNk-9mS<cT%Tjs;dnF_Vg(Z4(qIeCh#X*:^_?YkLNP5HNOqKM_Q93Z=8$U%d$ee;i^[Z@%/Df0tdbC3O$T,g"`hR`RSb)]'Q_,ESsEW1NXpFlJk%mY+/q]t\mXm'/4X\G"j.38`jcou47m2#/6)nEcBhHLg1ne(='$CVRPIqERC75G.]3Mt<j=]Qs-O*d)8U_3L+'lQP+t^*G?bh"@:h%d"?T-d]quE:Run+l-C[Rr69r[QTqZl\`61DJ"Q1G^H?l9i2`o.k54nEgm??84$WXu(UU]u01%buo%tDd2=L1LGOS=Spu^tgMnA)h%8_LjG)D5C2H[5@:3ZE0`k+d%moQ9Car5h]erGa?;Z%&YN^R[I`1Ou[;b;:=-+/5:1VeQ1mr+(ph=7fm^<52`J1%WTEJ"pX;T=se*%;=>upc?e@h!pR\[a6aRnl+a`Onbef&o6[nB]ArYB?9J2PLYK#^dXt9njl)3BB<LZOrV4eo7kYr`J%1qP5*hLI_<qb79fW++LF\^O%s7GR5BKl<sZc2kjJ&P]AqqF\"$CaW;XRCs)s,aN\KDk`#XCOH=o,gb\L%7!t=07h2Xhs]0Z[Wt`J"/W8R/WH+lPVZ67cXkVAM6r@%;aWOGlBc[323IM$Op&!kn`:k$VQ]ps&h^ip.VXk1N'0D!IqAERp&1*Sn_*o*iQt@ZZNfl*CU5^Amt/KL1B@I1i=B?3d]N!5;=M'0%*%oP%e?`qgjsM4;r(f8dWW'uik;.;>q+:V8I^/'B^/j<!?@8@#[;tg09IM8!;m3pqU&B7cZ^Y<5SJVhW4d5j+rAhBY"2CE!QbEp^%s7lGDT7:5]]C=K#!W<X[T-R0<!qFOFYPWA2kf1Ue,T;0&H$EAbU1^b0>!j/!U!%)cr-L@us5Q?9duKrFHW'kTRG@c\?a]l#5A:&V%^r_Z:#a=;XXSu=m=o(ub^X_OfTeGW*rGd/4JD\CAjppCRa[%uaYO(b.+nf0,8@(CtbOnY_`:_u$Aqa$#APiE<b^\Eq'UPT4%ijDT%0#;W!`ImoFN];:-IQGd;rKehuW1PK[29Yi'o6mmUkl";TT9]'kB>p)W(OQ.%`g/jgQ6`8A47?8;o\SVhfR(s#g=j73kfVlMcbAip%rBFmC`.'jAI9TogDCuOqq9QP3b([Hoc@7;MJNG[Z\G"k)Krq,BjkkQ4naPlUB>`QA]:e;5nLfWLmDGjhl7%(L7mAPCZgZg]W,S(F%T78)Gk&7_9rg$>Tm]383B%c3'FZ-m'ql_!0Ac_M^qh$MLs5Sh#2kOE(If8E,:S&U+p>hL:k:cXX3sT*jEqK:_7uqT$9\4cRG7VGQ%s5MmtTA(0g2#cg1gV7*FS\Fssd&#(Wr-\GAjjQ<C[m#4\Gl-UQ\'NoYG'O%d9;fMugS[gFriL[!r9a1+n)!t_s6d:q(S4u[Fn"gU%K1D!2:[brUn%S_[mFal$ip6%c^\Vq_H@+_heR.m.G7K%Mo[U#nmG9i#lh>mVG4=7a=1;Me8*:pX^3+/e:qCcEO!E8*q":,I6g%di%4'U"%G[DN42_X$Z\piY*UU*YSDnUP+ou#IR1L&`Y4]_#WH[4T(DrF:5:G8:<k47)mMtc&"5J+h::>?;6s*1g;i8kpHmpCHdlMD6e%`H(PJh)G/nTb!353r@r==.[0Up?h092kJq%o#TCMUVG>`\&4c_cTSggmEsTkJ%U$gb0pT&mI'u7Dn\4(m*'D"hq^BnqYmT5QQP%o%oQ*.pr9H"2m(E-Th"p"!naH/l4S8E8\$,i)+"%Q2r;"sR?[d<Ck8SpFqq^uon%F'gi979N-]UF)>G$B>m)&`0q<7M-pFkEQGPd_.%5O<dlo4Lkf^=YJpl:cX%e\6\)ipehFDk4T=Y5\3ErU;CUr9]Ca:O`8DT"BHL>b,36rT;hMa2]gIq=N+dQ]JlYaLqPLqt#a#?i<%^%#HiK'kPilXDpQ1"j8QcFs4k8:nGB\5J,JTKK-OH*j8Z*L\bYa5b6&j98J'dLIIch&S,G"_?GZ8GgctO^hnf%o]Y3sd&%B#tGk_)t%ZNnpd(Jdi_RjUCLp@.Xp>IT'krPa?2n)+-Z5(!=jeK7#P)lLH_r8WtKa+&M[qoYm!7aI^>F7p[os7[Oeq>\CL+61[kDh%NFnF9$#%^7"CPq.]m.a4%:(m@h/#Zh<;6(Z.Bgr9NU2@f/IFmf34^b74(B]k9ia34!tq_:c`p0&D'Sg&(5es7FO]O07m-\UEu&p=4Qr?f1\O%iMQnj5BHQ`^$t'adpN+Mq#00<pJ1\W_o;5Vml\-"\#*@k^]&9:oBU<*^&.AU48XL6n'@g$?bO%#pr'0/p!CT`O+-i6Hh_=Rn8.:(%mY1Ms_=#uX06a>Ye^JpGV>Kl:Z2II*m5qh+rieKUi77YlN]_a`l/B\G5C7S<X2>0;+8b08l0kf]s6@pTm/<">0AjBjHMVUA\c29_%YCHKD`RF8s]Xe%2`6Q!D8%'J0It%4&F!n.33e$5UM`^UUM_DQ3r-&+erG->trGqeP2j^]64*^bATqh;&:QIl&mIo-r]tF'Z_`s1Z%EoH[SSTs.\_thC0o1'n1pBUVYcgR^j?g$h6h`cJ_qfc7?Y22c8f$DcG59=fRm=5-,_qWeuk<Ie9qtTf_Vb_M\mlimUGk]%P-gp=_%=Kh/-qSS.+-h#iq5JI*Xmb+cS?U"#>g+5Y)^3B+kc(bNXs6WfJktW5un^5TG^;'O/b9%dt]6<AZKqGgBgc0ZVi#fQiO8A+kn[fU/%s7FRDGM@VepQ(@tIK&F(&)R<bm??GrmlU<`DngdNiqDt>?bCjWi9/unS:CG%+$U`*Ic>afE:V;Jqd8dkp<AfkYFf*GHD+S*rMn\%%[WV5`n`dBDVp7G=gZeXDhqoKfFo/dHD]H@ZgjaV1cM![pij5aWpYZ#GiUhM\^\RN[NQ9)SHL3rsnb]4[DqrVKGOKs0nrRqih],5V%GON7mo^_<LpR`L`^]4-#oSXNX*kM!gbsU*t3VZOcEP<Ihk/'(Vqc>^7mJakMp=6e@YHIg!r7n]PhTfbMkJW>^04'$GmaR/:rT:Ak%mD-8>e",<9iS<knfq8)ralbTY?+kOQg?!B7\'OkOh`^u1S%W[7rq5*\,GmAnQ"GdAlH_!D&"SQOb[3R0ooil%-*Y_?N9>3P-XOGH%,)X_7q9sQ&4o(.*WBQh:ouHf^rM@+*k(Pn#Aib?Rs8Hs!1NrWhVdE_Wp%>Ql+sQ2!Cd5Uo^OG_3ZSkO-4ErT]I<T>Wo)2?kC=]]i%<Sq5*cc_gF(QU1T\b,"2SNg`*mDJY=8[l1;P`oi%dEXTJduAUX]C:<>T=B%-ijHCjrCSYk@@6TJHaESK`Si?EO)@*CG5:HV:9=8(%O.ElZk8X5Pj-Td.I''ENI,DcZ>!D8C?Q;qdrmc2NgE2G]%$rfInaQH`%jq,(3\(;N:50/J-Gc4dqWmI205j(d.N-=b>rjr.r_im^%T5CFnIZ4.6_YeiKMlfH9q"MP8l2&*XdIcP$q"'okO7#3hbCK&2]_;3UXJrp/C2%&S3m5@#cM8^Ho.NP)5;=Z$QZ%mmp&=IF)dc-@%s6npnq[X4g;>i/Wd[:oLbTjB@!`ApaS)%_(310]4(\PbMLg'C"[d,S\n"'J<HYi]7F'ndic[Bs(5WuaP/-"T%FkEL&\L1`(ro'oq%pJ1)N&&5b<Iq7R]Q=%2>LHR`sq<;J9r;Eht?4R^]?JP-R^:\djjMmtkYM?iLmI`"/aSA[+HC2J>m..-hrZN7Be&%^6U3bq.a.2:P%++E;EreFFemI`'/AsMoKR6?&]PeVV<@btm\^O50Ur<E_j4s.N<gqD0d>hhJerkQAJc-OF*s74'EWC*mOSc7oiQga!9?MX(olm=r(%qJuV>PDQR=VD$5"H2N-jQ#CR;XWRIhYudL,i-0)]SJBGnQ_uL/rc$tNhtm2rq;#s1'T"IAi.!caqWRa&i8C6V0<b>0=X3_()h$=@%ZafM?Il9s^^Dp#SIQ5phT"4RNVjDUNDI4(Wd"u`3jSRuXh`h!XYM=BnIr:GDs"u/!J'j6&\/:"8kZR2^KnQu4R+QdgqKGmFXUe;S%'4%1W$*p1cMF(WQZ)K]3Zo:e*+\@e[FruaHiea@0Q3Kb53r[2=d5%1P1MoSFO?!8Re_cU3QWi2u1mHEUbt4n@,869!2H?d,9'n?a%9<)g2<.\(8SDRFafP,[</Ku]AG,9/`QE?'a/PH3%#.N]`PV*AB/[dP1"K<Fm+Di2SH%;a_V[K,u+^LHm[(Nh*o9S*.j%(W>(Y\@)%;E%6`C%Yi;hE-3_p\0_E^gH"!^Uj;lH11cmSc:YBrSQ9#^V8kipZcUf"6uf+-T!cUS9U&ud7G(])9c+T.OVU:'8T)+k<7sjAFuF(%j.>76;6Y:'*LG&[qBeD!+KD'#<U*q#qfZ(s1JV&p)RTq@%(3/UQr1^;`BPa5#aIICe\fT;<I!\8o%LD/XZ@5Vc'+/;dWDkj>agFU%Oech59?efrR?t3q/;;gaeYtJq7YP7'"1B9#rjOj09l#5NF_goLQ<_lc6V6VDl+8QbJYWFW^8jmWA9l]?kgB<N^-.T?4<J[jX=hKB%X5^Xbb4e.'^j5*Ji]Ze)iOJ[,\';1^Z-hhe]oHT.5/"rn31_s@,HQu"4JXb6.%$u<Xo?q681(][YeF9H;TqjL6:uF6(U,cWo54Wj%I<'iXGM!-?";Jn"GS(_^PpWsP+0&<a'q,*AI4C6T'k]4G?MNI3#q0QK>(KT5IVMSQ5`K'W-Zkm.rL6Wd3_R.Xr+J\R8f;B\O%-*4%cGl:o7p]rr2(K_!jU,WG9V1oJ[4Jd<7a0F`b=r_PTqs2@:c@6jVLmPY02MoV2;qR*M.aA^Pg34(;5Q\HQSfk[`k<m=HT>#C/7b#4%LXu-=;F3P(`L6RNU;Wj>daraPfe>4dS=lCeTUcLtPWC2&RV@ESA.L`.ZPRWX5OXUi0D_\1f&[9@g80]N>eUnNW)pj4$aIqU2502A%mu#YB?d3d(h6E^/"u=Agj8\8b0L'g=L<G%'=%\cb=kX8,s-NDqqB)-k^T#G"o<1(A$8MIBra!pjo$@/V9u78:]Ct^iG>s_Np%E%G%A)i$^nDpsJZJCQe2/Q?8kk@GbJqa2BglE>E).j_(KDiq2W`$?KI79<``Q`\@,AE`(jYYhVq%polAiK2"%*rRdNHZXnl2)(54-HDB%EiGOP,W=o%kf5cJ7(SiHGg,?Ck[1th95p@&F`#^Vo%(u!)+N<pko\?WM#G2?O]o&\K"la=rf%T\fD#=&f_rS!p]&7Ys7Lg?8#hEt%B5*j#C7<9BbLk;Y8qre-_Oa$?B3+N*JYPhKX`1E70*7\p=EDkD[+b-\;9oiQ8f%efMFgO]"jV4L-,jLWT]oA")rsHt6OsJ"QjW%?%2GcdgWYe[OkI]0MN`<5PY"lr8N1#"s0&4AL12RBNq^FB0\5Cs-kc`-+;42N<M'=P:_3E4iKDm"6VYW0W]^Q9XjsCFHBkDl3cI>!t%NHt36<ngji`!#m"U!0e`#EOWTMPXMFfEK_[6=qBqq6h"$)7)6OGV)k6<:/SGOE9+IN0s+GkY%^t7LOIM/:F)oPlc0bFZmW(/uI-u%L7TQ"a;+8*^6)tO'WO:X*mNg>_R3kMcn[P+1(?QW8OdFk)UgO;FCgk+r=A*?pj:H+iS)Ma)<@Nk)5ZVpOZ"SDh3MZ<*$6(D=rIRm%1-_g7\XJsAbG:LcCJ$/8T;7O5NiS!W:NFiWT"d)9knVmF@fKU`Cd?sLe]_]d89T4em:Ka`L(q_\9u(BVm@g#Z02te\l(07bf4Ko[%XN][D26$eH+b8jKpY,$^91==M,+!(#AO3;r*bVB8R6?<sPFY/PAOTO@p7O5A^63JI<d;'rj`'IYgQ'_L50hq,DZ;Xq1B'e$qJR`M%rFJEmcMR3/1lY(/j$1pJUkm<G=%2-_+!O/!>EX4bT08H/AsRW8p4\u[Dr&)(M3m89I=GJ(rVt<K_>f@ChsZau_DAfSL8#.+VTd=j%1\laDHj54D1'(UcQ>FjX3jPsJHj#^u8T,g=0/an`YV#)MJjq7bLo9o+9A5o>8NR`qC_=CV'E-?MCi[L@e;6".D=Y!]4t^='9%IHU%fH,OK\)pWTVZ*GNaOY5i8QuKZM?4gHWR>J9\^f4*h(i2X2lDZ0AgfZT$_Q)%U%tP6@C;[g1RP#*&R+A]au,X=[*Kola#(5ad7-DV%pZJf*i-^U=oA-Gb=1\r&n8StS\.5f>Jb%acfL\s4q\td1942O)/:dB"Z?Htu'nZQ+r=jMYT;IoQ'b>&b@F_]tArD=OdLJapEeZ/@%['*AB9,f3\RRqiC8qX!7iC*R?#c(2E\+`bDLffaAjR$=$n?(+]1<,A@FP;pZ6ZRj&27:K9;U:NYS4Rma58%G`!]pn8hVhns[mm&P%9l*+0/IJnTA)PKED>tkE+#>uWB!fu##[\\#/((5gV56-u)Z"5@5GndGc'6]nh[&aH`,`kOdOlp%OJ[;jMDY[h[0E?XNViJOmGFWi%ZI$'W\q!Dn-ga-j4MO0@=F1WKqRgA(e/""\KGB><)_D0RFd3CB'O#uF]g?C.3M@mkm]uO&'l)^t^,+A[MQgBH5g?PMXP>HY%b`C/%qd1+Dc%=acM!]Tn.[c9-4$b:%K?pa!Wt-UhZlY[a6n"]oV0(KJFTidG"j:RO-43GnLWN-6T00?%'4H!GiS`[(eTYh%P:Jku<aEm,%>d(51:>=#QR.:nK:*ApJpL#'R[Jkb7UFG!7ag%%,1$P2K))EOe?:+<2FASrk^683!X%%Z68;VCU2JWOC-j6tSZ=^]X2dX+,aaJE<%D[j!bc3V\L^ttl5_0$P^I:LUK"n\=a$q:&*-+LM>b]_Y1;B(cklf"[[,>B`h_nH&uge58^Fbh]@"1d#MECCBpU4s/'%GN_f<me\S%ERG]K][&AN["5@O338/#Ar<>p4-Ib0Q%jb-qEt99F0CCpMltB?&!2`<ln&Oe=\0+b>-lskBt9Y;SgJkIlcn11e*HgF1'A!01^+7:%e,R`6W(-J,b;o-AokFnpM1sXX9\(C>aG^4t"knU64SVF*-0>IcU:1Mh`>D(/5/q+a"^`BXd;o-!T<XK9FJnR,0UBJ7Z)kPjc9t;C%KcVRTGP?D*"hTL1oVDqidC@DR[acXr.LmmH&Gm,,23!INj]qUlO'd1**UnaK@r(-le&je*.;0[>@,4SI[hdK,]<IG]2K]FJ#ml2(%E)J&E8_VV1=d5'K:!sZq*J<\O_MMR)<A_>6EK+gDoj;iURVujZC#h0>=B9KS=RI04"P\kbP\XdpEjXSeS#HTeHP'SSLn@5h4]E\)%>uBhs3I`U+[?<^2oJWk/dW97W.>E`[^m[slehla5HJ*F"`7G+>#(^0rKlVcP"4XK/kf@"#!mt`/H2a(L8].65]T'4%]m6cC?@1O=%7Sei-*Wd6Fqjat>I_Fli6*m?7,Fh`f8UJp3[&#oVa("%.Ah=h&ek2q!H&'"6eMaS6;+ZU:ZBnR_-BLk"f\#E8qD&a0r2\B$R9,DT%Z7`5,gmVH$1l2i"M6(o/%jFl4k+Z3=4.Rn(B(K#G**:"urhVK?/m^SeM%\s&I_+Sb[56#0@;6`714MWA^]:NJ%F!5d<jtMh()"7I%9&E07Fjcct(X7$V<7s;k3Z84U`&D)/3-,*LNt.7]dp7,*<@D&Rp\lK\4k^XfQS+)1BS+K;''m-Sb[t7=6bi:&j1(Zpfl2YNck8Jj%:i.^YO$Z1DpcOQEcmWgKJCaC9J3lk]]'X$2'PSjgGt&*q5-N8pUm)$^L]U:Xj*;3T<dg*I:)$p.Z7T>0Wf>-*YN/^s4'24Plt_(_%Q1SL$:k`!-/J^0R<M,LBPhWa=SD&[BAMEo0JodkDKNH&\Lg?]BHf%jN/9/Z&=."M4FAO5DZtD8NO$G!YEg]nNRX&.1;l-jcaY7@&%9N(3C<SJ;d&5sFHPcjYM\n!iqN+e]^Fp'9GqJ"Z9\a_%OojFh8q#D\4K0ZrGs.isiaEIMP_&,;e-sfT<UB]E+:<md:dr;\E_br);%jZ+TUWQ.G=M?_7OLR\O0EbRTqZ3)PF^8=b-)?>D/O_rbhmAgAF.9L\BPg&=Tq,^Q/[]::ob:ZW\&6fM@-BX1uAmPFI9B1\PhB*4_%BnB(:.+1ir3uYG/1B]''E9Lh!'j?67dS(1;?P$R]#M8!N/q3I7o;G>oaG?oi(rCE6ls"/3/fN%]M/47=3``3(lR:1C?RL6?6FF`n%@]'7OF#>d4n8'Col)p9$)m+*%Z(`2[YSR%QIW.b$Cu1E.I!`pC;t'(Dc%8%JV324(VsC-h!%/U(B;eQHRZT`b_%r`+UH-SZO@l'[%!H#;OhB[uG5a%VLao[bpY'.*'Wf:J`I[RL]UoO+)&+j:m)@h$a\".KGF7a?=/#$i`KV1E[mNmkiZidVIf6X1CZ^a]4I*.sJ7")`T%Z<R/*Bcl[NW4/>d>V(HYEt-3$jopnY-!55=:.p.<aM#li&\F8.._52Pc_3,uiD_Ld(+sYMR0G!*dt.k'W^e^(8Vk\;k=JtIfGk-F%,%RnWW\GBA"]GA[iQA1o.2J9iH`])jhaknkHAU2726_OtKrX#I^0,Xtg8KC*jMoqKm\=A'c,[KVU&?qH3buY8_KLY0't;"c.YcTn%k=oZ.+Dg(`(Hoi`,+5gK]'g>]pddsK++O'F0'WBdf@ff<s.XgG!\FZK-W:s\9hIE"A5>3EE)KXsaXSdlgA*Rj+pVaXK,fDMT'X,5%fW*O1U4rlt9JPNcPpkWLTHd,G's2D4a/`@#1\JKtU_6QjLX^3.6f#b+MHp0ihpDt0E50=\Ymn8O/=nj\NBQ.!`epZiFq'rI8r3Ab%TOojY+QsjJ<U!11m+51S'<jn&Ye&>&(aobTK>I?%#cbmlA)eSP2*34E;8mU>q`BP#aoQ<nK@#Yplg>1H@':S[^aN2%FuWJ?djk^1%RR.28Jp[\p'mX)X_WVX:)h+Nt\grjFM(&S8:Ea@IkpmDp+YG8/`+iWkUE!5fN$.pbTR^IXD(?5=TN[l!ah2@S6+Uk8P3=3G?pPL*%!_A:"(T;WW5]iN_<6Z"CfsHcR6qiK"@F52D]#>!jc(8=/$j9+Wj^UuePC]!+VTV`=8.p]8VXl]cSP#FAdSu&+b&Z;b85f1:XQm[K%T_\]a]IG)jl:IABJUn`,TqGKi%+NU@[+>Ud-H(rq.)&:UF2G*c17fA)8KF=b;)3YR'BI1JGn9"S'A*+'+?=RtThg-OHbcq-?@h8=%D*l&r65b,/K=EK7b51WkE*lY0K1j*m5SB..Vt*idaV+g,.]:Fl,Of?GAV'V+Z$MED&SK_2`fY4[(,aA,e"U/f,aiUK!j*XJqT9NW%oi*@1-X`NG#bS,o97)k'\?dg^m>eaI["u!-^a\2#VEFPMSr$/.kL;0s%3ah]npGe(7F\GIB)olVRAch+K]f<OoYAb5CV6-!]E6fp%;+m+(&n_HMC[LTN,WVN]"TGiAHRM$k>b-/>n^Ch:]`2idpcr2DNE`'$:]?",VG%n?Vb#9r5h0=#a:XU$^HLF4nJTK=fHi)2`3V"*%VSrsUU&M?'")B(D*Jd#iV!QGY"`ZDJ7)n!23"G']Tb<>)ZPko&Z]VL&^2\:tP3Yp[(FiGm3/,:@))csl0X2</Z)eh(1odg"!+Dt2%F62Uj-3I:1KCG+NZ,jVl0s-ZH\^K@h88L(U1:)"0b]4C&+Ce^:m?n;6Ei,M&pEC;\G*20<Ai3%.67UHD1]k[R@%<PC?V+t<]Qh1)%ahX=m)EmYo&rcaV0I=Irn\-#n>h_BKIVi?nAPd[.Lif]-oLW$<::Wq8e0\\GbJ$b@<BFN]]`K`iEL]!3/1oS4RuBJP"m%(q(<B&;%+pF6Fj@2h6G"rt-d4[fe\>!FGGCQL+GbB8G>[''Nj`R<*m+;Vc(e<C_3OD(+FpV\)Z\RP=o\b[M[Ecn+kV4i+*_!=@/_AQH`iTRL%nk9]B>p9#p[pt.t/>O'.dKPe;]IFdFg82*Bh]6U'WgWdI8^\"^1l<kmTH$!b(6de"D#.8*ksV;2Vu@&+FdqJjb-pXL/-SG_JqY/'%_.LXhjRqpV81!&C.E2W)7W*cV=qJd.L:SiE:GkT7c#ZSs8n%Fs/tdD.f&]d_C48+4m];*+!aU*dO9KCE"D#R9VbSie+;_t`)S(B_%9CO#ia_'Zfj9@=TFi1I)U<2rs6X!%9PUaMdUG3j(XrQ5ibP<YBB6=NHgGmk49IceDJj:eKp'J*L'$lYrY_hAORKrX8M*tK$+GE&<%&1/St,E6nelDpMUJuJ**Z9N>@DVY-u(0k:^Z'ga(S7Y9B<.#CYWrb;D_9Esu'DS;"TUsch03W@`+P_Z#7V@*a5kp+"Thl75`Fm64%;Sjr>IWS3Ag'*jg"=dq\d/m@5bY]f'<PkPKam93fbanB+;o:Gu@+U'S@Ltm0.@ckqU]S)-rhMKEAo[nm=`l>!>u(H)%#aH^WC(R;%pE.LFPNeIW5=h(scGp'a7,_p]'Or9G'/B;1-V?+ta=)ff/VT\0Ga:fheXeSaCAFYq9Q_eE;Fd/'+R`=5?>BGpRV`<S9id@b"CEPm%\jKLk6,6>UTkY1Lj39d<pN+n:<D>JO=UrUa"765Jc-umOf[>$B"<pQO1rLRAb?<-h2nE,ONP0H$6L>,_KC]hU"[ZI;VFme!VdSHo%mg8OM\k]Aa$Ah`s2B-;9L4LeRR+TB`BF<9CpsR@+-0%YA$I#E';ru#<C/3%IM"5V,Hs\aS!m4c\D#UCh%5OsqAM+>Ok6@Q?K$LN]%VEW$1K#Q15Y\RX@r?3Y5'rY$NB=N^^NI"@`f2>M99\5*W*p4gI\=4T@q$M:@l69&t_CuX)(*dd%dQfO+K+[()(Bfdk<p2uD786-f%$U;&"4@p<"oA,QsDM`a-?KQ8>[Bea=qAR=AbH'I];fgQt3e>e*FR1o-[gFW8TP0EXaP9u<<iT[cG(PsU@)UUmN<?b^'kl5,/I/Z?%Pso2Tab4$@&L((Ql>9I*iN$pg"A4>TT2Zgk(S9"'<U>0O26pca0%YeT#?/&8OrfV.X"[sS6Hsahb9gET[Ui;_Woi-h^3g+oE:t65%6s*T$V^pF/@LEbpEPOm(Ad^@"R^fu0,Z(Sm[YVpRonD+o2VRu4$XpH.%8eS7L,Xd)XcGq=*%YGMQ%mE*'M\[ua'DN6+^[9WR[3/9%?9tf^$`%%Ur67^2!d2&-eLffX<(5,SJPMtK/UZef'9sJWgrfTbPo>eR-B"%$pZ]8Qgo`mg7RJ$f+Z3.XN/c$2&V_6b1K4#G1=V/L%@FoH+p"PjtI@$j@S62@Q^^8>]CT4MA505?MQ+ETBBc27g[(iGL7",p3q4!2qg/Q)2`..ENf_C`o6s)]^=aEfdeCJO*//$%D7Ekq6%T6Z$IFN`Q!S>Q/j<tN]`5\^Rl+jZ6!!J;k_cL`61@$l$q.sQtQCm=Hk8bQ+pf:h=??Y04U]W]=D&VRF%0bB=PBKT?)S._dii)V,,%$C%2p<t"X7bfgN2(UD*W\ArOWnBns'aHQuk@u+P##$(O,htRj'DocS=^=l+bB.3&_*$SMPm5gVTJ!$`PM&B9VS:N.[.qh&MWjgH"%q.)tcKV]2CHi&fVn2.ON36>^'P[IU`]L#AQ<Y?GkW,2hHZaR?iUD]eGg04Q=5R;R3MZkJCkp:kB^Zf/.nVGj&Ul'jkDY[!;j1[Gs%JO#L(X&aV%,bYf'QBKK$T#2Di/Poo*QHS,sQHH2DEG]Hn#k:r:)Bm.>TBt;7<nASmhPNbk^F#"Mfg,"2(KL[Ul&W+B7<36#0QBNd%X139aR^"JijS!j7V%PJm[")C,Dc;;U<TDnoE\?a-Vs"q9qud7rVbioMh(2H.^dKqDU?cH81uUT^kl(gAA\N,H38Y[jMN:jPob@MM%!ABU.jf_]e!>u0]?R6GReF[3=*2;I$,P5+]eJpJR\GFE,J`F4QmbS.GqYfV%PCU;:lE9Os1"kX/,qc\;,=I:/qo7f1B@!>@lUB4W%gk\ppOLW-K+b^'/lCn$fSi2j/%QXIb<)R=(_lk7_IuhCk=,c=^8;<W#a9<4G?8t8c6,O536%Z;61:(@@Ebf7f&AOmS"G"uO-BQ/k%),\O%rL/aV1sVLR8$_06?PQa]l.R+#3_BRuAkS[Ui?Jl&@$._7R<NM:qX8$2k`$;)GaQLl(%Ri!k]KnG6"b!*m&DSi*p3nW\)H)I%krEINo\#`fBm?$p;+6q4Tc-6l@R),3Lr)it?5<VZV9=ChSSpcB$HpqNWMUra0/u"a1F0qZ<,-h']BhP3j]drE:K10ZhdtB/6!uDf%a\@C!6Y4,L43H8SnCNJ<5acMQ@Y*4DO)8B=[r>>ULk&[)^<q>#g!$;\\u3E=mQf)s^fd7t\[ROr:!R!O$ibk>=BEg`d7hXmC](q=%a$#DN)GS(A(!LAT8PD7_4RmqLD[4N?1:_-9#+BTU+]5Rj'>>fTA3uNd;Ii[hJ9c_HPr]YJf7abnL2gt#7gW7\0T8?;N-EaLO\W?0%_&'(N@t]A0Z5/*#_nqFt0"e/*SM\cs17=@=b=#,1<C@9K!i0NH2Uf$$c*QE8B8f1tm0\t`*i#B^-B-C7Qr%L?./ctq1u\9FX!XQg%Q6^uHr13M\P#mW\X2$3H-mY@!oCRu'%Ja^LmdQ/9=?213XtWe5JPu9K)ffmg>Jk7*X=Y"OEa&j)PH0>2(:;hdO2]/P,,-n%fH&4K%4t*s?1E+V<1dT\$o9sQ,UrLdlQF`A;F)b!SA5`kF>+dK[Rh7\<'BE-s:btSKWTN/Fb12FnU&Yq&m7iQus1r[ghbJU>?-f0t7ROIC%8?t"nr&o?kq5/_2"t31gE*^Fcr:^TGF*&*hX,WBETlhl/()JH]SmM-X4]K[3W1cl/Rh,@F%6[on8s59";).ZqA>@`VS[ui4V"oh(%9T9<@'hLOZEk2CZ4PEb["7ftR0ND)[P%PJJW$I(0j\.%*C344Lkt5tB)"&rJRKZX)Z3#lARMssZMF9\f8(GeXO3;&r1ROk#,hA40%?\$NK8KoYrmhg0lQkZOLAO+hQ5bbRjU6I)QMX3BY&\g(n%t]10`lBH]"JfXW9h+B`aqKB#3E8_^lAFW3bg<.b=I'Rs&LgWGc4e&=%FfJJU^f5t3-`Nm%nI*RLSK[l*n^-J^:ZFcV<lQ7"!Kui)'hg+*W)Y7n#Gb;C/tIk;8<[3T;W3apN@ueDiF,iIk4"fohV;d^o9@KZ%.M.V1LASlc#''F8b]qF3Id@CE'!]sW;*@gMBHK9tZ(qfGRmNPbV+1dQ=/g8;G5iFX[@\P0e:sRYgUmOu-S(I2-3kruV`7PP9iB#E%=gjX7U,[c^\7hioa*1IY;9FcqR4r3c`^1C%h4)pR-5](`OsD72`U#!CqolY4_PBR-HE(SI9Sp"^Ec_o&XUF?4om6:Ah2d.D_jW$[%P:E3G0g[":^:2Dr`4H7eL4E*g7]8f45CjGcZH@`gRa`K/jFs(g:c)3%#t,`C0$6@V6&rnK%LIs_4<n1Yf"BpsJ/JT7)tOKT?E<C-%(YA@VLOjcM"%`\+?g?2),JONuUb$+(Uh:5\V6Z<O<b.AZbYT6Fl9;51/i(`uWOnPI;nP7_ASogP4%CHZ`%k::`si8V:u<QHQKX=^%(]FDVo\9U.J^e-V;\P'i-?7DPb)NP@L,cE5%U`%2^8.5<qS\o1%BF"G4QCHh<E;]Ne84pP?I1sOe"0&6Sgm)T;mRkk)5XMe#C9j^%OutBCXII6/iE+QhQ[6`V]Wb!6M+jL><GF8t?^`5'^IEn6+$$7s/EB$,B,0<(pi;l%F^+HJ/qIshF`Zlsc4p16WVMcZLE]PnOOF6X%1RYL:Li$[#\WdY)5+i-RD,OQY0U2)sQlIV44gQf*RaZ4M!YVbKS48_MNQZlOiJLNf??9a'l5c202;LaC<Q^t&b]shA<QUs_32;_+%a])C\WuNjH[IVg.'K\jKGe6#.#rN[l/EZ^5Vuhht(!qs9#B5GeiL@nRf1Wge+mB(G%!RU%a^=**&>,&\S0OW)0c![R*9j?+6H[bt%J<SOo]ge7ISqEJ2W5gm[F(U=ra@qZEn;N4T<iN]k^m8D2Km@'Z`7_ka",TjPq:uZW_atM1!!U=@#d%%1a<NO&X,cgS.BNm+.sXbR%o+03qV.E^Q(.d8pABWc4J<H?W<)Is;T2mfp-<@]KZ<I[67!33)"dqV$j)fc+9?H++9'W`]^<[liUjh`#+ltl@"Gi40P)sF@(p[3X%PHo_ZU%=T)OXt`\+=Q%I`Sq]T`!B@4"nZP-8/<I"T,!n_C6$S5C?57Moh<O*_BPbI:dJS/kG98m+Pga<)]&f`'NlDlNJlk&!_FgQ%'%;442'O8@aPt[JKt:E17M);M-ODG"\ORd%DU!(X_X]gZ_4G'\Dc\/Y*.:U)h&*[sH^6'B/6jXLZI2SFn)D:o4$+NjJ,ABST4R4_%\kbG$TTF`ue*Q#aHjpY=H<EobRZ<;t8F-FnS*JR\MEs7[K(6/D!T?`*,I&'2:PFlI27>4Q@9s!Z[jD8\:'<j2pl$K1J1:tH-?Z<U%T9/W,3(]:;M0^1/]eufU2Tmu#m#tW:Zg5Bj)%n1kg_Ra;RP#]gMb'9T-R2-<!eP&ELe_M\RL&h[\0L0f#?^<[iVXl#=l1Ia5-$]"%TB2mbW)=BVZ0H4`GWS8LPfnr_:bC1oPeNIKfF\bM[1gJ3-koBa;-SQ9"/@>hHQtkt[3feP5#9n*,rth'jeJnGMq$[lX#a+BE-,1C%#o.XUp6+&"k\.NRKut,$e[lT\=l`0uVhR'mG^4K^?$,1(DGd8r,C8_ZdQnPR,O1g+UaJPQ`-M`cOdBd<h%A!k#U\'4.aR#sh<SuW%5#NIB8J3TOWL<Q.2Nr_/&R@AtpC#_6)X<9JB+5APmB9C0.?.8)/QBm3F^R&5;.cgt64np;BH>!OB(Bf`jQ??V[@EUnVV_PqNC_UX%GFcI9fKs'0C`Kk5QqdU]SSMdl&7OCTSeD.ThBP\VokM`I6\)<HW[]PK[A5OM=i/Ak<_k3iq?8\)F:1eY`2Mf@">+tqFUi@jl#.:b%d+H3p*_="@^6<E?%ktma8sUoUF+X-=(:oJ<ZPg7BV5[E86FaCs,c*jm.:f`P:1[SbegF?].7hLqWjrO<*V#e"'3c^3>j.N[UX4a:%(KVm7_bp0745*JmmlI3=RcL(2Zj@o937DqC*`gRS]"HbH%k;ceOD6fH@<skd)JL=[52J/,*BB;l'SQIS$8.B+D%kk];@m,jN:9B$%479[9hf]h#NEu"hl39C;b.:T:G&fGmk^u%+)6n=!n!A%1\=eHdN6o"ik6[e1W.>m<$oAgqnK(43U_0=pl)^!<9)1E,hlJ4ZVrXEH%g%JT'Qk,a!fa=2P&J`0"*4;__-dP;,'n?iNS-9nUCT))M^WQ.^lS[DQ[!m1l,"oTk&'gp+:j*sP@01rQRKYVp)RYr\&'^D<k;=f\%>buSX-nH-5.+gqf)3C*D)8[saT/#N#N]%X6X$*PjGNLAs#2M*%<$nI?YSY[.B#;iW$-kN/T%=sEkn?ES'<=)jD5`TjfnaY=c[j5<%TFn%QqRQ0^Y1cfSc@l`90gB77M)JL1[^@]eUI#>;Z-4s(2;;(W@$q-)[+&fDg&Ktic)X_-=''KW>"c6p'Z;SmKoA4re\5.&7BmM*%;E4plX0%j`@d8hg6SC54.Osfq["q\&AIAXT>u;uplj;1b9n0>\cVt8W0kjTI&p).iUX0rfbbd"[PU"?i+Ke4k%@LOu74VU?X*hT@%.cbK_@Ss4>J3^NXl=i6lcGTl@IBhR_.QB9,EojSq'r[gHib:gi\D#\.DH'QsYBhJ$8;3^e[A7_&8$esJ-s,05Pdo5KplY)R3L]39%)0=#*@kUXc$@L\]SYft_4tg_l]?p@*RlIr\JQ6`Og_b'P\T#Bd-kN@g3A^qAc^fgH#\AXRZ61W[b6E`E.Mg\>6HO9T)gc2[$^_PX%D`_ij#0C+kYk[VWh51r3!ec.$/co4%bRq40oZ5)mJ\W<j,)$ER=['D?[cI*F*Y"WWHD6X#"l)LXcDY*)-d#%uWLY].Q'o!6IX\Or%2)EMl"KZYk-,sE58k#3"YUYq$$E\,8?V,AP2KKZd.o_<D!21C.-/7;(&1cfR50UaU.Y5u"W(SmsLsrK#SA<`f*$@rr+3duh&b44O%NgL'$OfsN3o?i_N`5=bi>YNj]3aP?OepS!Hnutrs:2]T8NIjf<IWhZT!a2X?NO2Jq\b$7)^^D7K^\"u&lMRHmdOn5\@4GU.6qSmU%\hF`!XTh(o8WVU;P"(5*Kj)TlB;fL:CI1g6mG2<8,aEe=(5_5uWWkBdAnt>2:XJ[LU<+X$1kZ&V+'413>-M[8dGCX]k9WqNT.CR,%1blj5dZNEdF1hul&(HDk&q0]->82?R3e#/5VbrA@k)eDeR.79@7Pqu4F3S";b[[e%Ks70%BlZ#-;EL&#ZDF'Ye(BN$rg&'WkdZ(T%`;E%rYtEYE[!,>+Q[!<mH"-XY(+JR$9#(HB0(!Tm>!C?G7j6YJZ*maOR%qWB=`_V/;-EO!_;[%.ll_3=C-kYMR&To`c9ki/:FJBQ%0<g\WR6,ql"tMO&7CgMj>seDFAt$7<l$Ym^99?O7]40%u'Q+A67[d6glNr2LQN0Q>(o1/+bBp1;WmJ]=e0q%t/2bS-VU>$fVo@%H%Nh^Qi&j[`F5E_HuPdn`p$B!Ni7t<Ge8g>/aoP?roF$ZU'C5X;cM]4!1hR&5Qc)iXo7a_[-N2AGVqM\u?\QKt/FU#E523U#XEV<P(%N`.>7e&[\&AS-?RXEe@iJ8edd-6bo+ClIK&(>B([*R^"(rg'j$q$<cn'hVD-85;EPCiW=''R;TGS97^^N5ZLP,%:>bafeUk&8BM?%_,GY0X!WK=Vra&<,H*C1$,>HTV>799jj$6++MF:c__FqfYsG.t,)t357!4-Qg-ScKK=hR;"dR(V>!Oo)Erqmf)ELag<"JcR565Y[%e;L9J79)d""X0+%TV2?\d]@:k\BOQkKi/SF`Gig>!R'!9P,_3a8@Q4tQ<Fa:)q$[l(\N#A31bCbkUu0I9kPkhNk+qJi#.ggU7#EK%Jr`S9aHZp2`&M$S;]:Ll19Tf-,?S(g9<RuO4j[(NquBi]'(IYZAUBU,P-\_L\(D.@Y[iUdXBMGFK7IW8A\4%->="fuQ8S-RKNDRQ%'tI:Ya-JYA;h?PZ?QRcQ3Slc+.4h7-P"Q^Ai^=$20_Jl]Q+?Q#1P<K7XA7,uD5p's.p[*C%r'l/506/1k@DV%NN0u4+;+=YgKLVo%j3"9k#Y"3.7TM+=C(EBh7*X@kd7A]m:d@#RiE,u+HWZSgW!hGC/INmJ`Lb-i8J>rjG:9NMD5.g_/(#'O7/g*.)(M\Q=fB%[=t1eT%JN4^4Cib?`<9#28Efp@_V_p%qSglXQf;nX;4cMnUK&\aUOY)\0,Gg*"'Wo96_nug7SL+f-B-f,)]"CF_PLd#B4JE.e>)>^2NLFpu%ii5jrjl,N(qJ2eP5'`Y=(=2C_c6/!\fqfEp.DdT@>WkfMhGgZBAG[C0*%+D:33$^W;<jDU5?cq2-"Td%?V1lAb(ja*A5u-A?c\E[%P>Y3*GVcDf9:a-F>M#@-7glV;-<LWi(gE[;#lpq5/We?pX#o!O7]9*c/2@La_)3hTJ0*4;S_RoOnrpJ?p9]"\fM]U2$2^^R(.C-0%l9YAK9PW6IlVP=D;IgE8>BQr&m0FP!Dd1a#,ngiS3)n3r9K$X,W`?P$FODM<$tBf(hhP()l<3"4,9^&WXcBQV,n@4AL7]<Y;oOG`%rp%<ZWtqaFU_GJmf]3ooV7$Q@(mXMpNAWs6>r=972`6l>$E![1*mnHjP2:GXLe:a(EANhR,aF0L9GCok@93jb(a1Cm<Yg&3;Ii<b%Ri(O'2l\LhP#b8WdIj8L3b(cT@tB<Wr[p,0Ad`im<2hERTmfa<H(C>`A>?ZsaJ1FR]0_US]"<&LPkK,AU?D,Gb?+>F#`6[GV,+`E%!d+gN/Oo9,C'8;VWbcRXpMKG!UA9CgBqSD@!h`[a0=rMWXB6&t0eb=Hhb#&'BAn/Z)LT*$k56jM`Fa&I']V1,3ok"70`c#eiiaPm%6U9e&1r`(!h\27nI0hU1Dr^IZo?Y$TFK-P/G$3&bfMp,K<3=7UMOZXDHRY0mFO\6+c;r1E.m#E4Xld7JOetH=:JAlg7Geg8Cr$8'%;H0`brihnX]mkDJV4S@Jilo'H$TR\=U?IjZ6Wc^PDG?'s:)6&Us(:g.Vk3"gjP@,PPaU<tkrVtM,u'L'VB-2#jG1s:RYf;+2B]?B%l167UWYhb.EHHn(0s<#Z*f),[1/j2IRR\lkPU(/=QU!B!XHI.Gc=E^+'/E_b;/CgfW@Gj%2<H[\:p0nDW^nLZ9*.m=KB>S"HU1g=%,mMNc`H\+Bfdt"cEk6QRVmE%NSkPu@NG?!9RS.7Y:dCidep@`CdIb13,V3\/eIE&rRm8)\!`@"DY\q][1l"XuV*uf2P3m(rPTe_l%Z&5]?A6OCS/;(SDJQ]Kt56P=!0WPKm(_&5;*\DL^MVl8"^X@hf9LhY:71"6HBrPL(&KYDi6=+R<:H#[^.1Dsn[*Z[sEe0m($*g`0%qo'[ZbX9o3F@RrHNd.t)'R:5A#:cI;Gb>X=?QnP[JoJD6/Uq:>Cd&"oJ".>rK+ODL:jT']6*e0j-#aaT0O2?-jA$V(8msF8Yb.3F%mMbk.l*jq%/_6C`a=a&b9Q[H0i6'8Y\Ko]l5mfsW'Ikt-/$aT.C1ou5\hH/Lpm])p(fP!&!:F?^$54(+Mku]iai9TP;-t7L@ga,f%;B:a<BrI1m/I6$pM,o\#P,XeAWI]8I\R^p]F0hNOUjGaCqbZOD7Imr&`.ne8ads&82DBs(KEr%HjB9Zr=RA@+m5+kPR[@:\dOdD3%.4nO-J@gN*fOkuVisADR]#><$Ro_a5+/:J;Te[rX>;&T_+Ps%>1ZlAc]2VEZT]B"'8TWRZVJ@m)WYgNCO.t5R=eLkX;2-0X2GM^U%J1qBsRN/-g(\Y7(9ugHXq.00a2']D^';=!l<f\4Fg]_M^+D[`"Fr]K7!=>P/]bGjG1C<IqN[g=bC#s!]>KEJ+HA`";UVOT&FtiDJ%<m8]&,Z"m5PuIo\JW]7Pa32@%V14eVR3?\l^hoTgEsU9j2g5;ZGG=]>Yu#hr0IuW_la;q=^Bm]M25NT-IeC-L,)'f5al3Fre7hJO%jB5/(nD4ptXh!jN7YSeGH1Ekm^o!4;M-R.iD.HVMO<,/_%[?Wf8rRkj1&H;Q_b):oY&!EhB?Cio-"=ap;B.bo6`-L\2E<tEgala=%%qb4-aA@Lc!r$651Eq8lp`bKa(6-)=nVG8Q#9J99_b<`Q2sH>2Z4muJ-q25I9boQTQ8=qHWHlMugIPlpUEiH@,XOknaH-(+#@.ca%0"%*74eXpO&n?ARbuWAb/-@,3Mtl8B%BM/J`/J>gePfK[C<qm2A)T.J@Nt\bB$2j@:2sc`ZB[6o<W!i37*oq[FDl3e!hO)YO^W-+%l7-80TP76(NWqpXFOK#D/XaVY4GbZ*0a*Q^o/sq]Q2EI+]\,5)Kne]nR6OA=#W.,e.eKKQg%d!*@V[uX^jPRDoK#n`_6a5"buB"q%A0jcrW.ZmI6Yg<nbma%!\.07I/Fo)XQJI[&B<c@0Q7ApJ5>='rCb"4-HdIYqN8IQ)B<j]DZj.%$ObOmJCMnoh)0T:me#DDi#_[26%,c'ZB#UBf/De!7PRX+o_)cNc':qEA\j9fNH>B'$M4/-EN7dFE]/c6;nZ\jU!56V*9OA("<;'YUAQ<^'dkuE(k]n+-Vc6<*i$Z;q*%1bM're[e^o%#qAB=#3smTWG!WI("^Y8c_r<8@DhH>]\4J95,$%I-FBLZ3',<H*UU4'nd5$^koh)/HpKg0Xk!j;k7POUc.K]r'H>.%-0*X\T*DE,T]D(/=(-"dq.GDUfb5De($h03-!sAhn(''K_$U_R-kPcR?e!`_h$@[Sko%:SQk/Ehlq&+B.s[0]jFLH9bK(j59\\-^%03Im1D$;tO)dD3#:JiD3Ec(ZB(3471S@i&K#=/?`(>U`C,W7u&F=%^JFF:3p?QgmQKgO(&/!)h0-`V#")B]cTD5s@%:+9J,^kK!!%faj$?1X]C+P]jD,bkAnaQ.#]b1LmhNmTTXJES.AJeN>q2W&.lI\4R/hk=j\#0'PqHcqJI%qm/,c?>47]>!54S;J?=5gYHnWR'7oq%'H#ZXC[ap#$6.$=;Ct7M1-RNs+eY6bQ*%FIMHIC./p*b(af=35"jTYSI]&g4Mq,ntAM_k4J=t8G/_m^r1Thu49l7bpkbm_N:7'f5%!%4Ra>0`-_4MC-Z)V5O`8p?p"qTDRlas:m3JOW2W$#FAc);,WnG/2/*:6%eAY\PaP6(3Z6)>PLp\+m74[!uQQR52Xpp<M?ZmO\[d%0iJbNRoWsk#qkrNg_6hH5kGFq19E0&Z)][k]XIK;`HT7>#2U_I26.b%<B_o:Y%TV@?=T$V`)4Hf'Z&@.ikg%_,]BXmZL6F,>X4Mg%Y^Wqda\cG1=tS$p+IqcK"Ehdn'IY[<Y,;g;W0btB$cZQ@Fl5I;KFNuDp/)5U'IAYu*4)8+I+QKKV#+[U>\S5:SggMp7.oV7[e^YV%VX!eQ..%X\8dsau>%B95#ML=PO&eQe$uqZK'saXgW;pU_iPlJ:9])T`\Q"KR]^77R;AE$?KL"()Ur=`a.1gcJqGXW*7MBGdR+t@>%Kg6n[$Kb>T%\CC,n]Z#=n@CrSkp"7f'QJbLNYA<-7O,0cC/AnHBV'NuZ]e)6=;M-5VE4)FK`tO^P9@#=AgqNB<-DHfT=gAj!!/El%cpG]4Y+Gn-[St9!oodLV"BIHXcDn'0[ES,"N<L*=f*j!A0kpJeNj:JclZAXQ+/TsLoP&kb:7D$fK3ta#1+!t1V($Ti^i'b"%28Q2%3A=#5jdg!0Cu0G1CXP!3!mMVg_co8ri+FFG1EO\tRF6/D#%rVB$T-aA-p27FhSIEL9+K';TUEou77RFoX5*nt*W]oMML2?mGTGu%%Qn#h=b*!_?UQME[UlW]3Q,sQQgjidc?HV?oMG1D4_&+NG/54F[T]H@]l<3e%A*Jlh8@:dl;1*(cFUB_/QsG=1AQl@a9ZX88ra-3c%/79nh+fJYCF/MVb%(F;(ZoQQ=`7So-[1EoIgdPR0,";]RN&QT.0^`tbcA]:!qP2b!6m,4;K-]IL7g$^mjo:$5#O0\.ID&d'9#%th%oa*)RO/RS-Y3$0)R7e^lb[-i^.MHsEphTuYE3l#6FI]8>#%@03Q-#c1mIlE%KCi'!\`kK7SZdDj^RdTDFd8bU,X59t6\m9l_RQau%W0KaU2;=OuY7Xr1atU6?l`upJ@ZXZ4[V>S"GZQc'GO8`LB;T1(de/7(8BM'\!B'juZ'kt5bXMnVX4rdc<EOFBmX_2MWOa5<W:k'r%5h`AS.+9SZA2drYLP%)Te*VR/N$d#dbjI#\-Zh`@4/Ia:;PESNR'Us3057Ytl-'2FMh2jA.Zi?b&EHV4<][i0F9KrL9+fR"(FU4)%=&Z@jqP=sB^o<bdYF:3sNgBG,qM5?)/#5TWPk[(+QMUCjUHl>VdY>IiagPkpY>2LkB3fqPT?'^\**+Lm;R!<%jOSG,0JVs)+9YUD%Z\@6Kq>%&Kj&c+O7lq&MBII>A-R'N&=f*WO_PI0C,4e=j:L,pV!i9W+K$7>O5VKTspeeL(0kt0-h4@oScY>G<Y1II;G:Q?9KUf,?%UOSmH.jR7RP82S\1+I)5qE.49BJhqf0XilTN_GjL!AnZZ>\OdNR7E],pB/ODlsYVLV;pic[-6l)SH,8O_qML":a^=Cc;u]'\;b[G%d\"`/Y:tiJ#O97O0pRK;n?/3`Wb)UBi$i\TeahT1+\rkaN_bRU?ChZ*hV@OD[UZEtX%fILj5Lo;eD!5A2B2&Zg=j=qq3bM503XQ/%+H>PR6ic)o_6]pUB]701p)E$'[9^.>,uR*b$rY9+T%K-M2^`Y,*[[PnPs(rk#3du0q>)"1Y$B_d&jn!=A%_F<jJWutC:0%hBJH'H%"V:uN6llB[%HUndq-BH<C*>:E?\kIqe]sb7\o`_X!5i\Reu<5b1K="ZSK[nO"b9d-h,NQk5)lqR=X$@'0'#>e["!'e$^'/Z7'sq`%F5T&p1.*'d2G+A43;I.]\"SX/9a#/ZVBhHgGik]S3m2"F)pf)ED*;u3!/5mdOYWr'N/LF-JlRDtlDm7UJp]RKeQ:dPUWp/C4kRDi%d3Mr/C3*trb:mJC\.h89+<#Q(A<9!VnI97,i9=p+9"A]7[RS(M9lGbD6g@b:3M@ZsQ>."kksqc-<r:8_L299Ad>=ZuVhp;FmI1;K%l*gqj+9Lbt)+Yt-r6-hGD,t]o@MaX&1ID[)0:;qK0\g$=5>Sp=$S?t<5h3_M=_U,^1aa%Rk^C7B7C*_%5Re5im&j;E`GOa/0KGLb%apZ]L!c-tCMQ(2</LEe#E+IglYaF<EiDZu)F(FFMJeL#[.`f$7NY:'^RnP!,,%XqH%b0EGDcQ6VI^AZbk_t26!uiaV_t9BhAC+OA%[9f_'gWc4'(tI-D_g#b\2U$G[0]'LM`YojSnAWDM;"Q8DAoaP;TQV%="jBZCX^iEs">"Upl-jB$ms-]-%e6Hh-%VSk4\0?\:R_M_%R89UJ$aGI\?Z+\+Retq+<n/7U,"i`?l(\es73+P&?'&GA82#d^#f^6rh8^F_aNoW%;m^Q.^lq-%.^IojDe`C^MNX/6`]#o\iBNP7%:DRh],'#AI-MN)NJMO5XF945f5SL;$8@@7\E6-srW;0p11cm%bR&<hYAX0f;UHOe3<6/gGits7B#6B]WJV$2jS>r0B_.5HL$X+[d%_%5Hm\E'0[;'elNOM7rB>M!k02j-V0dEY*1p8rZ8#!I$b-s*8.$_NmOIC-2PK]sIn>)>j=iXO<+0@$675XMRqbGc.!5j2.XJWEWb%NV[[4!I[3C9k6J*"[ce"&@=o0(AO(;)Moo+R$Pc<-=$Z!NJKLCJDa:]VEi>u8,LQF3t[@)-6TP#bch4N)Db11=^3HCW5dq&>6L\'%9TXcLcr`0?`_n<lG,Ak==]o?ON"V.sl8lsrreO5g%";C1U15l7`)$(N3).B;E2-g65AHo,COQZ2Rn96HIOC*1W?QC^+c:oKf@3X$%B$4#KU=1u.jAi4oeOW/Wk_`Q8/B\K7g'R^E6+U=.ca8Ys'"t9?M]rSAfu.(KqJ';//V+-kZf%[1F;$A3_MQE2NM;g)@;9nM)jeu[%D-DZf?WVk#`.#L[hf#].bOFrngju#i,_dusdo,NE>5AGh9%noFUu#tjKS#m&K;sIjS8hA`f2*mc@=;K&]3XXDBuI>CRNIh.Io++?%c7!@"ECPA<B;e:d?4*!Q+0@];E[?N=.eDhJK#C8oZ!muQ:h-):@O&m%o<T:6C875'-nV/CVEul>$?N*_MUS;+fusIH1asbNMGpGm%e!\=i"=0rIEM?%FN1b`"*lB8uS\_[>'j#8aKZmlPIqi'>+O?(IfT;nV2eBjuB$m[eWD-j3#&<Y7YgQ^-9eDA;eu6_E+3V-o$k$!L%X=8fTRa"O%ph4(l.^#_H4:N&G2'7$,LIQ%*o'@\:Io=0<d06`b)J#`WXiDoCni'3Wk$p'OcGM5t/Eo^_/2B=@1[7fO+YlC1G9\p.%CLIfX2+?9E:`Et)>.;nSXAGDWC25*(O"nV=_=[llb]Gl+hWZtDUD811r/f#e\QT?K80nIf"f-NcCEuD%T2a3PFB;VoE:MLI1NROD%)lG=>$`A,59J30d_hh?,(!A'I/:7tLs"!/g'cM8=9Lk!^H@O-8Eh%7d&1D&sT=3XAkTcrm;+QdWO]?NdcXis=a+t=WFI"#:6k@1s%3/o77L'\)O>YpOtA$#I0J.[(-'pAD&JA.-S(+C"&c]lUgVjTI?9l"&\DRl,ch`TAO<[O]:PL2J^T.q)1)@jkie(:&8-^u0N$:mnI%3--!*P[Y.A(/TX%O=XWs/jWG%dY_O$Ut21*A14.*)sVD%2sF\TkUSft8a/V+&M3J^EDl=t`H6BkMB?3W9/[4sG%IJBJ2u$^TK:@-%\ra7tN6n!*GX0:@%JX9d/`E95_;_tr_Sh*8NKd7HG%#A0j9Q*'Q#5lFpa@;D]U0R#lF;Q?bKTfA3[diM<RlXbR7eOj:=WKPR:M24%Fmtt=V!D2U'EoN+QkS;Ig'>Fa;^3GF1^12&21p:FE_CfgH46!7?[XZ+Ip8CAHmdCX/#Q!sl=:4PnE!8A6Ee(1+"F^,;nY$r<i;fp%N9Edj"@G.>7Y2ArE'e=2$pnYLo[4ebh%P)[F@(ULbe[`-QV'OJ!M=ssYl^(T?%5`!PV^DjMcD^&3"/$2iQu&C8`Y4:\O0"po-A'#%.G_cuQue\WhSb:a:8Pq<W'h@TWtp(b&6/e6<0Lo558l.Uc`)^C1l?'I1BZ9K#38iW&>Xm_X>HD^0&*(?-S.`D<W$3&(p1pFWi1\u%@YZ7c.ufYAWp;U+EbmSQ,BC1khDH0W1M6_cp9Et5LrJ$4@e5g@Jdb.9eOm0g@cGtG8:oteA1,L8-K?'KhsP!M(sB]4HA;^&X'0<[%7FLV`Yq0O1+So+)RuX7A7Xp"NFdY,;rUS6EMeZM<:$+^9Tkf^;_0/D?7c:+C6Lbt%@"A_iLI=IZ";]6f-k]YU)!)UsW'UcGDIbV(%Q("-HgHZA3+d)ia9fn`a+G:$D)&Q:^oo@P@(UDYK-/jp1!ZJ'FT[&fX'@8U?7mo=)#YA4tN)#;.U8.khU;Cjf.1oHUPhQBhC[$O#%$Vl9N<a;[a-m9;Ie_W]fa\SubiB>/>on%Zm&8\QMOsWD%RQe:OSrJ1EVFZ(48?,j)CGV5U?>k?FVm1i"Q78!W%GKc?X_"gWf3;"L%;ZR15R^$GN%MK',#k%+"Osu.-!LZg9!$00(keu:r7Wp=#U_6(`-%W/RRjIk6k&MBYW@6$"*p;3.c^)LI95Nj/lGTRIWl-WS,bVi8%GA`D=#f;E=Zcn]-):I7".e"6e=YhUj9gi'^eMs[3Z?hnb+7%@_Iar2,TZ^D;BYAr'!(UU8>$kJll=0Jg9uu;B/>#s`jOc/f>04"Y%Zia9#b3fU)HJ0]X$-!'Xm9cVG0hfZ@ibu&X@Hs+tU:kMtSHMMQg6b5M[nK4_VC#'C/dE;8-,dk,EIL25&+s.-_n:0#'W?\r$2"_]%&S0.@aEl8A3QiO3;gLe([^[=;3:s@H]qg7EO,7S%3"olWL2i&=l%b$?3tC;3-L6m[Nam#!nS&B\5BR+>,\d#V/tA*WYd)"(X7UCJ%]Z)3UL![q3pXD-kMI+BAhHOWSg8i1<p/#'9,Vd5N'=d/>%?MUR!CFNMLlKG[(6$jCm_^[@jht2eG&-0JVTcK8Ja(LZ9qio/oJCl:%)cR%)mi#;J]<%AsAuQGpON\r2QIdn5#WJ&e2%D"?DLM0O?t=E`fakdfMMg?M4kS!(^-09fJ(cD>rqE&M'nHuI>*`&]Mr`!mh?7ip%Uf7TM.j=-W;"8OVG4r2:7u\JJP3977l)PK@cAe_td`2,4ASU\PdM2ZP$)/`\/6.ih]f)FCe!GB$SO(B.Z2rYC>Hi_CL#!JGXW6s=%=YddGU3kU_2(^Ij>DsSgO)d3Y%EGPF./m&2U<7c/)Qlg@".*"t2bUUH&gU>30OGX]V:a"'>[pi11=d2)A)F9iCpqMYb=X?!_se_)%fM7\I2hk$R6S&a8P.*`IgAArd4fo90jF`gD$;.>a?e'`]D0))q-WiNJJa?$2+@Q_i$FHm=Z.bl2qY$H"e[W=agar7(2"DVE[593M%C(F"][%oN[HU1eW_RfD#6<`JChH1??c0IoOm<gdpTE=0A#0,`W`X;%^]Ee:Bi6#V=6A>@<%GW8^+(ka(L<&6h7S$k(*bV.[na6`h%5&>c9lO+)&XVOLbUl:X7&GA6KALh40FIO3onHWkNC)b670uGV:9prA.gSFJ#ZQn;H3GWPMB5<1s)&tr6e_t4cU?ciZQ@iOH4Dbq5%h2,/C.mlPd?9tHmNlYrTl>!ICeh?=ZURB(2LN1mcE-U(BohQSo/r=m/edIuQIAJUdn1$?!YY+Pl>D;_\=1_Y;;t+h`MKKV>Y$5>2%pl1IOG]&fLB*^L_8'!)Zo*/WNJ]N!=KY2#EXau66Lst,_/THeGC#k'?iPpQfWQgk4%+:\+@jX-T@9H_H'oc?LX1]G62e;Fj8icOC%IR=l(VNn#b$b=n9,/gHCJ`A_]dmYf?Me]O'j*'e0@D!Q&_s/A9pE-fcZ)_lC4Yo3;K_hU,@'Q35Hib+eZF8S(J`Tm:g_`!3ZBBqF%11>[feQEeC)nTH%Q(<@lWejF08L"*Q:L&[@A(dP.M[pM*K6_W!5u`+IGed4bY-X#<Q%FRd-tqs\H!K4aA4Vq*J`u*^[1.=sJaB-I%`4imh8H3FY`7GZ(GHJ-5i3:pp:!6SLdS-oPG-@>,AD(J7Z/.GHD:%/9W'rj#?$ba35CXp!X4@LJOJdAONIL0)B[t-T!a%\[MkDt5%[7-`-a&21BT8#Coj0&dq-#=R1BGCDZCX$@%06Q@E;fi(Vm7E>Pm+go$&.3?`??KGi"[t_0Bqp?)3*".MY/Vd\)/62h:BX(E5K]B#%F>ET$k$[b01;1Lb\7oLpMK_rZ-un!EP"H&iC%]:COp%;>(.b?LZeg]%;#"?>">ahiUIrsC"pG/ToHlJ4)oo4Br!4m3=U,>o+Eob1%6j)bUi5..d6_jAXA07N<RTAGe1s+U&<L*dB!:Q2T>`S_VetiXg]iE7[J\dOX0m?2D&Dc2j6_THoRBA>4M<3#`TXQ[[W$>DkV[2,C%)Ae3.UK599NC2g.>-'+?$L/P\!29I.mC#X/0$QMGd%uW=a=3o*`G2*Y=!>Y8V:u"TW!k&"!NEU7e*nq!6Qs]H0Z^-F]+*dI)`O&4%AY=cdX4t#qqp)ptVPIF3Y0(-*cD7,]9A<F\I),g!^e)TWFPE>=:GZ4VXIr<a4':IKh;&4aXhXd#AS0?Z,)"PAGoYFnUB!E%UCNF_%VEWo*JgmCpZWRNS\[q%F2.sRlXZ8pA[47=a`!Vq`aBG.95aVY?PM0kmb8DI6B>hN,(h^:#.q]KR9u<-51I5)Xh]20&n6n/pfC&!-%Y7ds<bo5.cKY&t&Fp0J[OV*727A/"u6IhZ>5L<VB/8mJ-Md6q\:Q))X3F=\IIBs]f$iO5P1nB9'gGc#k/Ru25Nhh9`e5\Ya.*E*l%W9QU=l<#$Inc)R$7R9@%eLd)fAK6+/j3ndb4?tEYAa8&YP[SjF)/<)P+AV=-ZA^;49qR@k1rg*?[eZFs>G]#aAjOK"#`HCBZ)sF!%)hu`iQi\#Hri$pD1YnaV@"n8QZIRb?d-f<^d/^qoggI&sYR:^0XVE[k)uY,OaH_$Ol=ZNN@O8Z&RkQr6!l;?'GU/S4?]F[>C*=`<%+YuEd5g#((b6/\D<V/HPi+K=N1*t\pou"@'bRY'78?/Sq2CeA@qc&ef;-%R`VPu-@[u8[_>gbI@iC1?EQk81e!i7nak_gD!;qoer%1"N5)^qWTYetRTho'DD7H4t+:Bqeg@Fk5DQ]UV\V0-PX/kFH`7j3U)""egR35fpYuJ_^d9)k>DkJhTPCl!FL=2rMpM=2!iC&JnlB%TU'T$a_GMrPc/V,(G*lb%gMQLkV'7\QSK"&%,2B8,]f7MFK1))i%$Y4=C+GMpLm!9)&_32RRT=]Te3S^q!tc>B`tT@iUm>lBip@Q%ldldun;qi5RWJdcF$aV%H`5U!HABa6=M7%/&)8=^aNbdbk4uXqC=kIHTIH3:.)<e_*#/KoIokYQZ*Oc2#%S4T'o7H@!l=4^+mbUM%,4T=NE@P,c3"?rW"@<Tp5[&!U+AT$ME0bKl-^LYfqpt:=-1n56NH%fWNXXf!6N(+YODA<SP%EU@aTgc,2cK%^EAX@MdnJlI3QGtB%DE2,JkcX[XCWg!o'\j%Y\1LJC+T#:O#eOkcpSqcEO9/s1XCGP2>nD83QG5amm2b>b?OnDKO$X2"s/$n^>TuC&^/O9n%W?*Y1ou7P%cWL]\Bcr\OLp!4i-<)<t<ki<&W\A=\FF:r&-H)<#PeS-gZk8?a#XXcA33Id>C?@88%hEa"m3=dS_-2J%T2+F]$k(j7/\K26NVeP8%@tCLO'(";jBA%I)HZhH-gH`>ahQZ+R]_NTr7^EJUQGs!&::V;RDSK,H9?@(7#ZniD%X1P@cZm,^pf;muR_S7V`Us-nFt-o@AbbWD%RikAl-hakfR%a]s:BQO2_,P0qj1+#_?8b%lL7\pN=^sT7a$iISbZYPg#$^I?G"\.m@j7mACh,Yg,tUU_\]"s;Xd&>]"r&cDh#OQe%f)X4+Qcs7e(Hl/O]kE,OjKkAo26\",aauM3<qeBrM0OupUA_q[/TVcrd#"nE,+Qc2Z.1O!d#lF[CT,as>91)^n;0Tr/(5:LdJ!%:%V_97P82:=7;%f-N<Bb/,PZH>kK*LSaLh:_/@6@`2Zd;9Ur5E?`VdYh!fAaCqaRY/i`g,cX?H[X`PHW#LQ-F#_F'RasLE<!%&L\H(%b2Up=6jN.jp!HBkhde)ZU(QGN!;/=^Ia/.np1JM=&++ZiO7t[JDn-&SA="UJGPUN%8L0n.X39*ZX5D8FLc8Z$aPua-Ko[#5\<)DX%m_t<9oN`NYEOuuq1d\m\_?c<jp2+(`XrN'g_V>[[3"2^,Hkm7a+CQjWIMpaU`ptftJEQjMO!\_O[i2Xc>uZ"GLcFki7Bum<a=FV;%[/9H@",s2IYW-+Y.]Nk(`:\gAcW@lbd^!AU#4N2sB6OD#U&'4ZS8W!!=i4J:+.U3:Negi6V=EA3BV?"_a?Dh*q4c5aJCDQWf@l[r%`jr[X&IhIHPXJ3'%h0+9d?6LHga@]<3-N7)&O6@7MqrGESOcaQ\fPQhF6NLpT1+=VG:KBpal%_J*/-T-JgeNeC]ZQjd[-<d+V\0+%SLSJW.Q<*aOL+ag,>pQ:U;rH/V_T$%2(juTReAj/^'@/=f'V)Xn'R=>>PbUhan0h$OieG[9^.Y")t_(ugEE\u<An@W8?K2.+'7L6%2Ut$-Jbgr>5mlA0A'ifVb2-VR*#Y<k<hh-L3"$JD)laumC=_>tXJ">Bn188bP;[orR-S9?::iHe*k"=D]:0:N4c5YgQW5PJ4s!eW%HMsqbD5r4$]AZZ?f[=6i@;I(;m4`F7/:ft&%C,ia<3uY73$Sp3?3]^"/:elK!qO#p;Ir'p;<>aP6/%K1k\sbm@5R2Teq0oijj(]D%B!1^H(l<#Q"eC_kliqYp+U]V&eCp4.]LS0B'ch:-.V:JFidpa,]>C@,HEa&.dPJIAV4!ha@7(Bb]O7L]$_q[_T[\DgH%W1*#Sh_E%Y&bsOM)H7&cFuHW^Q1TKZRLq4E<(t_9'Tnj"D/c"Y6A*kbdniaX'=b7.P1E^>in`PHQ:$s2q-p0LBY#H`R1BJF,T?]kWqAEr;\F-%3eH0TQNL4fgS3[&b>q5TXIM2gTpt2],38o7Bc))j#f\1uO:A1jSBAntCLge6O[mPYqjc5";LX9hSh*e.F*8dd'UdZk0?,2O[r6@(%WI>"gT=p^nXXM(2R:jT8@:YKMGh\sF-<;^u3,h5[%;g,)j3W^#@?Dea=epZ1@)aB\N%@l"(fk`Va['3r;mjf513,q]0=-e'39uN#%`okjnRG!>T`%i'$TW_c;1=i]3_'7tahMlnrH&mM`W>^uT`jg:#=8Y[6#*u`L8(R+9)on5gVg5%?j0*bR4QAEa>$a@/K_hU,+I>J/%7J"Z8.R/IT2(l,B4#1\A$c*ZrDa"gn"X!QEmN^u.O+rAsQP@NBN+qd*Af&XZ931@kZZ&L`7CC2._Bn;I+^\^:Ou6'&2C9kS<I5oA%9N%NU1NI,kEp/.bc#ISh7Q^KGU6<Zf:$O<iATOBM%I@nO5mB4rTXJ2Hf]7X,2Q>c*1sNn%U1I",Hr@STRDuHbN4:Y-#_Hn1BrdJg%T$#'_Kh7D)Dt:$$I=$Ko+.FfcG$O+t]j='g]mERJ:.aSYSUfMF(2*sE1g#5j%Ws,!6P3ST@rV9?g=/AD7ppQZ.r(O7g@YGD4]98e%YlnSVSRcsI!ghIDas%_!1Gd4>%HB2WgP60%Oed]_%=K_K1!.\/XG\%<H1RJaOLMZ[,H+%EG;hf/7sPi7p-$Pu\fRd'+o;TuShQ+5%$lL2.2GGSq?9MHlg!XR:*s"6^f&G]=j3`&^FoMU0q*nC?>,Xcn+-!MTOAN#%[H?/l%T8a'D(UGYE`Q;.ef[`<iifCkW)P/Vg=),0%6Eiq@N4:#&5sHDr4Xs+LkdjmuY(0]^6/"`4eXr+i'f(V>JHZB'i\n2sn88MbXU2\sP1?3_aJRta`c:5.+V5QZ//Np1g(mek>\OjH%qprL/,a8I\Fb'79IpJ^AZ;FNEm*2kkZoXpIG,jr:0&uerAuX/m`;4*K(ptdamKVg!K)74*`9m=HK\!VY)977t5b1:Gg<Gs<#f`'+%AEQo5o[oq5qP$LI*bB-D-MeZ0&I_K)S_Ot0--d)jPNLu6FrU!s8?2?Uf>A<Gju>GCehse<CSj*MD/(s.Lppdu"c2<l;lG)V8>n[U%,F_pi[$u2=ekfF\7Z7Bm+tj\q<2;`a+a[@=[:L>mF*ng^L7#3Y^A&<5X%*6@eZ-n]W)dmbqFK0)Yiq'-f2-X%JTq=Fj^B!=2.Q8A%E3p8$X;Rg4)8!6sLVj%kVfcYb&OqkV6pg:#;;bipe64OD?=b"P4cr2_-a@o6?2S+$?'VIDh>nO[mV.S:`gp8:[gp+c!O6"*\$d;"%44")ZSL4e9`k&b`]CTQd@d24VgPOLD3qYfuXMoH/+(f=2c4c1X\%iYuSlG#]1?_nu[0R!L5Ab7,:Fo/Q)Wf3'9Hl5Y?2YU+W[S@i%)jQfoXa.&@oOGCil\BV.>!LN3Wg-`UF>^3($WXF#KHe,u3l,KI4c7:#H&Ft1*1:1N1:87%)amWZcaEO_dg##SP*E(MegK@)]+:a^%j/<d.h?4G8Tr$0&l7`K#q6E0o;H5lF\hT4([HiMJ3AZn'0TEFeF7c`4Q7TWBd4F2a5m%0gUTISs`/^7+NC%3;96@lZ0#1e+dRr';%#j@YMg"<EE+NX](Q2.2[*U_WTdTAGQ0U&0h,A\ulh&t+o_T7V[7(YV<Hl9@#XK*[@qb:$f?>aXL@E<mhq)#4A3o8Z'W"Pta=&qCg%h-I!S\8fD:l2ZigGD,hK*PlE+1sn7%\.'27][h:.$Hc>W0b1<#<_lq;Ge^j*,m;8.NFe]:V_qt&j0(@A5$j4QhQB([Jblj9@,L4!%)mZPM@la/2$9&`M[[l%SLuR%(N\Q[+PDqGq[%,J.T^a9sNN:&j8ZAtCLn-4p79MFW,XRK6%8<$Ga'0'FXX,G.4$.WEh"P%%eL$a\%"A6K^dhHI7G>]r_.:bmWkq$#\ns+S<Db[\P%E"E<!"%f/\'#neeor-JNATYd4<P^j(@/=/H\YO:h)h,;Gr'j0E%6Pgot(2m70m-K%/#/V27N@-@<!j(WlS-Ksna3G.ejOgs0?X5PnH[W(S59Dddq^;=I@cB9Ha>0)+Fa/t\&Am;CLc$m"*s[g'5:9T>M"g.)BK,d5M_$p%#3`^I*%?V1]QNcaS)8mlOE9^4*acOk-hd;=hg9k!-@pM6jEDc/^-q;4h*Gi2&Jm<HK(V`N8^ad)&p(%@[>fh=LRgaY;k5$o95bGE%Q?WY*(m^!uj_^EtZUh^@NrC8okoo)ia/Q_XH5NYDO$DmfG$'_B'HMO"LF`OJKs<RnP,uJOe?%]$6(CII5E;M,a`L)<'PpBE\$X9o%'n.En$gf"jkfe,hd^l*[8XrCaW%5A&<0jF"e<Ppq*$V^)d'64?$B!@p;.no<g>:/iU64V9Z#8-mDIHbT!6#J5RT%<]*,@Y%dcI]B%Jcba1\Ck`2g026&W*6D[-+"9L'QO=J8c;.79(VD=ZD,P!N#CZcWa0dL:KoU\44/2Qe[0jm?/sB8W64s<qpcV*d9a,_V%N"M3eCV#%?o3)dKu$H$isH$7k#m\=SW,*C^7i`-T),>V5E>()GC^aS;:cCnU'!u8QCOrY]V#>"Q]j[`FYjOF6>&@q;:p#8"0980eJQ5>pT)&3%>XHL81cpD(K<;@[4d<lm4ZpEWh:X7Ck!RrALCP*b%!)8je8^aXm2>!;pmuec3KBscUi4hg!A.9LKA@FprLFQQdB'5mmq+):g-DL.%",u9MX5-ObJn!W="lj/'7Lf=CR%>M1?T\aCPT%Q\IL&)2p^<8[:!l]^bIJ+X3a_JZ,OQfU\$HlLr3&tf.iN3(NEs[O^KuKIC+11Y%Ygp!W=!l:<8Dflt%E<Ao%2>3L?<3/C;U)0D*BFMdBo*-T9Pp)&Fj0bd3iZ2gg_n-)DfDcjs7*Sdm'QhCYP_PVXfdga^0ZA$9DVYZ%Go6dk5+&)OVIe4kQ>qcK+QYtCk'A\B8#^(S);>AU[i*/WCQGf.<gSoneFG;-26MEqJ5'^<:Yj^iqu8;`5IE4U->uqjn9Pbld@**C%o<Cad_/*>spf>W*(k!)Z96QpX+Qi2>D]Mqcf+"EC.)J(W[IbkF9G.$C1t<@HVC-.FBsa!Z""L<B92@>+#AD-r9:@Cg=]7(tf2,1"%ZEII"Y$_#c"f*)iM-l,c$OC9%b79ABg1m5dE(LsNJX*(R#Df4dVo?heG3e*UbeC24m!8_!,t,XM2jPu&[]/SEAFl\&/*d<Kg1[0]%cpbE(Y)CM?3Aa(p$`lVg&+DDs;"XKQ6`c]hY)dikME7c:$>>@,Nd+LHX^]-NR`6H!et1]a@Z7b#n)\:`pQ8/#YA`r2R."Mg,&]lB%&6C%6XdP;on9p6KZAbi\%,6H<VX^G;7/,K>SLDukhDcG!NlH<sBMojG>"=n=fHF0g#&mF7#1,IS.gVI3iT1j$LOpcdN]hJ3[VY9l%;sj2!S%OQ]NP1P\4f$aK>#^MoG+-h0h*,k@1i#1WA<![`0!:6XQ%[0F7t^<g9X#J$KSGqUb;el^fF=Eg@V3Z+d7j1U:\M:^X@9Ho%U"d]=D=`F>`:c.Sj/UAj<-L(Od5I&?^AhP]f<Sl/Ea6B;r54q-O:9`?jh$7&aC#Rf#6oNe0!1%Jka'GXZ16^u8&SRCOa56V"WI+"%W7mN)OcObJ$3Wc(B]Hfo[!j4Cc1i(PXAg@FG3nX/"?gqTlD+fp.tU+#5mTUbm*GhdT'Tl.e1IbX&P(>F$gh(*!BR5O:[V$nj1G%i%;HC7F>)Ug;)<0_VO[2;1.=la\8KapJK"P!Wk7GQEi1CfY7AUA7G*,DS6!AJI%dNU$#,=*3*U46bAWQ:qU-e_u&qKEn%WVNIQ62<6%L)OL^<&>2T1J+VANe37ad]&itOG`>b8ZqD!PTo][ISg@f9&51j/Sk7Y"@Wt[LlPk']$sl:WGB%CO^tlC9kFR%!g.m1II.Ls/\cQI%Cb&>SU@a+A/Wra\e;#nL6d$+Jia%4H#B;Hd+:cC:8._[+%*3ih'co#;l?T^`HBo7Pn6,\SV7FQd'Il+$C4..3d/"^a]u`.OVm-_C%#[>@[@Q!mgNNJnA&XTtgUk9iRRMp*cNQum,COVSeoZ1s?B*:trcL"f_Z0&'1leAiCm<]67kA:C_D[6,Gp#RE."Y$j2FA'6AZU647%5"m"bPX@,-afG$"#cM=BPpXNuA7rQR\m:Mm\[ZcCfZ\oDO?;@1ZuuYV!52MK?iu2>YZ96pB*R=B(t34R9\<I`:E[!pjL2ulnPbh(%18nGC#/ep?ls>>.&4+!$J[EkUf$k;"@NfB<DtRtKY8Yd:\j,Io3[iT:N96j]#13o4;uk'Ko7lql2iGPn5-<.`ep3EnV&tNfGH6dS%Cht)[W[c@QH*%f]V)o.Da>X[7EoEj"Hg)S(F.,T_6.fK9d0+KfmD^<OWp7!M,E]?Tr[:GfjN"u=,Q-nGq8V,@Rb)<-n'L:R&//1C%%4/rZO?uHdFn!aRdZ)cU/9fp[O_T>PD(8I0]!&Ck\JqW#?ZaDLXP"V_>dP-"RYb)RMZL3s?]_lG-="_$::)4ed;<8Oc5T1F<s+k-%%Z`l5S]A6C2@.iH2@Nej1KS,^o$cbG=FgCaYanmbVtTn>CZZ#RW(2Mm:./*FnaoOnR"^gmKjg#:I8C1C%YP%p'q#/FXO1tD=gpW_%)StW8M=EI7>-$pCU9>"_a.kn*((.T:CVDr_[-/j12g_o+Z+)_Q]tl%O/sCn>h%>31.t$p=b:Wjb5sIEuSB24GbB+Ok%+Ao2Jd8J/%bU7^(f,0#XR_1PE+Z2CV7th[!q'lD/jDrG*ar/\Sas6X6/(/M3lbFBLAIYJ9\C4Z"[\39Ie42k[Gd-&\:(R]6#h3h=./o^>Y:'FV%a0.?23SZj6CetZ+nW%[l=phUM$l>cQo[WD\Ja?e_C">VdOE*,HB#E@[Ma\adB_ceg+Z5m3+Y;\X6Zb$=<lSF*?e&Q24QLHS1YRp5%Ded;=,BADB7n*-@#1)S^^DcNTLKlE5(-#JL%1T<8L6U6KUZVLja>F*J=el&N1oZ%A/nnRBW0[u[J+lI,l0eku)<"E9)n@rYb!*KW%0(>]/aEFDZ9$W`>8rI8gmVV744jH*tog(3seT2bi:iCB`1-;=4.7:bIZ[m8K4Kqk6%o)^SaMXdULmsp6X$EeOXO`'oW2Y90j!737%PND?4d4SG&`uu3+YeP!]W8G=uH@HuGPn_NVCjFLY_8cR+5H$nL-VP\YotPHIP)t-lq"@l,HQcn@h*\k]s+!+Ipl?ca39*oojD(7K%gPe5PpeeZC]ZJitdV(t%GS&RpX*5d"gGOp%4TBpuGSD*"QIG06Jlm3!ZIiGr4elE%f;DU'_TlWLl+nPD6:YL1!t$W,gWcCioFbf9%>+=TmdmZhf)">6C$A%HKeO#(je`<MI`Sr'cak/X^_Kfg8'3fC&gq_`SG*5$L^tklP"q>TG02GC=JISVah\N/A`rLnO->1q^Pt=8)%bSeiU1jjE%BKg=s--S^@![u0Bnq'QJhcTCOnpP*eDd?PToO?:X)@^1\g_R!m^;XCE3Ynh+q+T'V(9IU\aL!S<B>jB2C;IcD/&^!p%[abJU,hn265TGp)Ub6WDh_d]dZi0"h+o`m%b_b*/!qM(X&02s]k5'O=S06_B\p&1@A2u`A.(&IeYG6>(7[2CHC#gZ0H-a;8'S1']%Mo*cV8+edQckhPk4'ni:KOo>b$o>^6/-TIZOr]Tp'Lae-Ho5-<qCQ5*)B[=/au4?Sh_\(0q)1.i!QBohq),W-FR\#MOD0</G.,Pe%2==6phu.q6FJq!:8&0gi;!$OEYW;IA\fP)$OD?'lSB=YXMaMLT9;AoEL!\Jt,];.)?7c?WAlY,08$?iLEj8-.-J>qH]m]\dpj'KI%,fsc,Xc3(rJSFhG6;s6Naf643";;4^.<"o*\mfC'5^?dkoc!+np9I$`\tFEngN2RUX7kr(N]!jO0SSArD3g1Zk%<u<6eWsUOR$$H%Of>EUTnW]hQT/]W%2)e\`CX:-6$CRW+m]cLO0A>:]<2$gKUF3@MbMC!9tTf[/.rqJ%]PK%"_[02HFi].43/=^inH*3VG\;k($l?(%Dq.gF-(T]KmcdChNO%#I()sri"(HI9;7MPl:Btr_FRDf,9AV?kZ]pV!DlfZ@DSJMuCa1^0-pd.FMUG<-e''%j$BGB>.h[^sm7ncF%II)<YQ!>P>X\r]Nli>.-!AWN&]K-YO0Ln.X:N/:E/O!a]^F$^Qkm(m?J!MVXJQW)l_],D'ZM\dm&^^.dHU@.a@53uKif3@+-Z=GA%e::Y1YTW$G!T?V?Wj<Z\`T]KjGAL=k0AS+&fm\p-mfG@K5FSdd6W(<CJL!b!\KhV&lg_e9P,7?dj6Ua].SX'O%q00[=-JaP\6`pe%@AR30#J0=u(C5fp(_X_9;[t1B^7bEgqAbr6NILcM])?mn_Opr.=BBtli3[h8)['?U?LLJDboUX_>uRWo\M$"]cfEA&Tp204M1MDN%MAN1'2%2fMBRnG/nKl1hVr`LlXXME>RSMsP0!(^5,D8R8]ad'_;G3RSlo*7(GS928a7m7cL*4$4'BH%;#55o(Q/YniS-tCl[^IP+%r[P%k,hHG&`S7K\JoX]=n]_:TmnI_8kq$g^7/O8Uno-W]e<Q>/16%"@-R5QPf`Emf<iAk3G"k,W]l0S![O63-!mNS?a=rCX5tYH0%l8Y9^ll)pe-m\"()o"@5MMAesq1"&#<sp^8+XN4jG/kKWMp^^or_/o^,\QiFE4X7%dDFPO9$1W'RgOL2$$t23#`fn5;NbPCo<<"`%I+CuCA5*ADLWh<YRna;V-1\7^2=mjjEee@p&T;C#clkOj^i&J.R(7RmGD'4Nb%=6P<'$Rr6,)`p8YXQQE8C,-fYd@uRaaV7Pr-c0%=3H8=2]Ng]H7j2)9MM&iTI?pa/9'a]+cW7s6!WX5r&qh4-hEeg63`u*;E3q'lfaMJJPut9#l1`Id*Bm6oH-M5h15DKS3W17jR!"j%9],1nDdU3\Ibr)Q;!FGFpMkd]5cJb<2HsK1:;0Q?'lJPc2)hWQ$Y4RQ!\U]7-3\d"g/M]7+KN=NT*u4PMIRQccmoT?:r%a;!j4Kf%K?,QqTc=Bu2R)BrG`;!Fn!ig9G+A&(8N'^W/;BlWFRU\[qEn[Y0,.,S[daFNlXiL;a]'dggj8+kcXt78kQLJS+FZ]E4k#nSh"TtI%O#TP]DXks3)ZYrg"J$SWIIm^"FW>H#F?$mj.f\ep16pt$]-5RV"@ZNNLd%4TRZ_uW*55Vf$VAV7S8ur-gXr%2dY7rjV^n-rCLC.n%@oiOtBGYeZ8gF%LkgDj&NMLV%U1QHnP/6Qo4t7fh;o4Za2j8E$SmN/MQ-qeeG/\84rZdkF5-)"'&@6k\`_BV]k2Bb)LH<Ue]OGHp%ORJh[`('(Q)S7_\PIFiP'f!lt?1ZgDf(lE*l5t%18`FRp29!"2Q"l6/394N`DX0^'W@.Id<.kF/2R:_o6(IO*LqK!j*dF[9Rr0@k%7-GXRH"'8:"DRHKRZZ:gOUL]7S*'Ot:%P$FnRhGVZ)?(9OlO!a<h)jT$WL4kik6r<+]g$5L"5dFo5`U$Kqb$E&=+BreA.g'&Pl5j%4W/pH,)l:Cff00fFD$t(.2We?<Y]1mS'fl+Al&9]in`j9V:kHjG]trjT&cR2XJnAHjQ5@f5qF6`4mQS01S"^P9M8LmD(,k2c_(=s%6k'!p\un#cOAYcV>mQf&drr?BTQ%5-;A$:G9.XWUBoS'RU,3OW,RBJ!Z#G=fgJ7P`j91_c1p]^$'6_8[F!>WM*06\"mh^Xki_,M$%X//?H*o1>b3^)GQN47Ukd^B&=*Tt+tCV>\eD#nod1[)3mh?N]/c,lB#3.4E?@@F^fUGph+hmY#1B=Tt%f@%rjhXL0GbrTZSc$+o;%P$7%1X(F]ri#,qRofH&@h"$Smnh-EX5WMOlPCqt,8W<@,[sYPL-<;[$5)R`R!j:$>?RTb06#]_ri?O9W[JDKYc&?tU)/<%2gHi,8%VCdE_[-)>up>nBokA>+2!8&9U')1DdKB1Q8c_^SXJ?smTRltN>Ue.`L[S`Q8[9>YAQ)A'Pp1qttf8iuJMSr;6h!j4_9&"R?"DL7!%W.UWdL.4HIp4km8cHG2%9cYK.Rp:@K9pZ')6G$clNl'3m38kEAe:Ob-Rc$NHdO*sZ5uQHW8O.KplhS+Z<+C^76,U3KnnC#VqZ-nj%U604d38L]>$bigkaH$0oFlPAZ/9j:+mA/,8KoJK4hbXT,P:LiGYSq&8,jL\&]r+qbSP64j=NW+g9:c9LU"Q/TJRQ[9%59gr5sZCV%+hed#<[jEo6F)[4aq.!^4Uo>b^C"CZfsIP1CLr-C(^lo+5&p0e+J&t?_&78fcQFQ9H5l%,cs,:>.^@GE-9&J?)lk#uo.s3:kpi]S%b$?h6j5@RRWQ22WiIl[$\QbYDbE01jKBSNk2U5@6qLmr\HFS2@=,9"VCroDoYKUF2;8"KME1GGn8XX9n=/O4/WcU%-)CjoH-mkUp%<R_"._^`_Mf[XLPkeZ>+kV7^P=:jTJemn;JWQ]4f3]'s-UsF>)\Q4X8']iY:"P/3-XXlbcNl5,XEU?sW2(7oSQiYH^>mI`;oCX&1%T%+>5-./F]'Ot$((0E/>SnBoP@Wc)#9mV#B[?(=fY<Yu!fcSCoXBH+!)rGNYGuO-Ao\K7U5.Z<;G:[uX<KIHGNs"I-bRb':VJjK<%)VKc%qP&r=(Som__<!(3qV]:t+G0%d)?kJ6G_47R]$2`ng)M<GH%g4,6OB5`b0TC=h<DAL5j_;XHJ37nluH1\(UAU]524b-J=q**%bfLA*/n0Ukk1r;/;WVa3NkDT-"hI3]lL@sAHqq5\#7^nUquQ!<:EL"72n'M[Y<X+4L"j8g_b*oN2Qp&JVdoVBmAeFp?/WTT$ipU>%d@3C'(64(DnU`+)4^k3=$25[+"/C)1Mo4bH\6lT\]rtH!JOr>+GM;0KA8+bu=160sVoU3o"o8ki2IJeSG$i&?K6QkiAL%p&&),"X%,Y)J!A9X2&G-cA2+3up@bLr03m;5[Sr2Z,^F,8)kO-^%2%F$$,@mq'`AW*lMGA[2>OMgu%@s?mXq.AtG>[^Fg^;-D)N84[*Ps^Ig%S8H_55Y37B$"MT'XQ'fs0K*G8iC4]kjoJ>-13Obp\_iA%#M4^:Yq,]=h[d:/3"<`b7EYC;m?4V_PM1V9$#iPh+kjJ@S"Q=!mP&Qd%^&ri<L*k]1$We"kEqhU[Vk*0FUd]Tl+?a?W^#;O8)bKJ;4@e8&EaL"\BO/FTBgl3=fGJ/2b?uU6W=;96R;qnU46!\=S+FfeK;$+L%3Em/mO5@6<ZWo)<AWihV"qB?].:NW.i;c;'6>j*g>D>7JP!Rmq5!UnEohu3<oUTXML`?`[I7?-(afVrthM*11IW%NBOA0VBhtU&!%=KL#G%48?@@DU24V\Ceoj2s2CKC#ftBnpL9mX=M2p"r`G(p3^<6$?saW.aZ=Omh[X%GRK1;q_eO>T(J>!eJPr1RU+tI%A`,EJ$BO%(l><tDo%Ui/rU1hjp]eAdgcSMWf>3-J].HS4!=O$IG?/NiP2V!2J*&sce6"SS&?T44N`RP(X[tK%5!o^O]r9n@4-rO"pBU>"@Rqr%ho_?JgFjNPpXT<d91aLq^qS%q2]:X3Sg\[pZT65)fs<an^KWjpbk-+Q;F0O@UW`qQZQIp?3D9T_$^10/kdJ.I%AIFDJRqnohi:#^%!:`W=1ZTHMU3GRl29L<<CT3FYYf#I!110+MiGe)[^:B";O0p4hcYa`\,>F8Tj>X<+aO\G`eb%h5n/n#m5+4Yeagl]UDhB8EQ\G//%%SJ1Q4)PSJc@J\2NuD(cQr9!LV3H*fIQhc#9Yg8IlPo0Z\PNS\4*Cb^]sZ!.%oYSsk)^rCCnP@C$`*Dtdlh12rd,]c+o+btcHfFn%]*71Kan&AoKRR_I!2l!PT"1MQp<[0m>S(l%Zf>nFLaqdgo'?L8mI^>W0p<UIZY4_k3jT1WB7fDhh!<'07r#_b;O1):TnCPYA`Qp4%m$@Y48Lb!%^!eo#*i?H+A;E^k#+G)O>]Dl]M4rgHVu'_DeEnj1\[KN4>cYoR7Mf58+kQZiT1_X$:<;%HH&+aDj#b\g0pqsgq3!l<%l!2A.4jU<ZF9DOegpgBdiN"6kWh\o*@o5PcHL61Hm1WM&<ieeR%?Q=`-e!*':8/99a"/[oe[&BeP+%t>@if#d72C0<jYDr.8q5@s%)#uC;Cao*2k=lL3GVa2sL;&)6nXiF3.tMD-[B+Q7m:-6<ZF.=GbIY;;?t5$'Fq#"EG0j]QB?3fPCokrth2rVor;et6^8se-8cAl2%:Jg=[5fe"3N5ObO$-c*eSkXY1?Mja0BlPa&Tq2nddsRZnm0IOdc;Y%DNC&'EJ/D%d$XK7WXb3&!ApW:nHnH84:hd2K2M_)JOICeT%5YOsC@HPL\?3RiEcTIkHo3J=LE-]J&W*F#Hn`\5"5>ikTW^1ea0mf+j#[)TqTOrsZ53cPMUo:$`F.`XkW2\_YLl^8fA@Z:I.P6p9%I]d;KQW=ti>HMN3CgJ#WN!J03Ro_n?!mQctnRbYZ+gb4TfHHP^GGrNL-GX*bYMKeoTcS3*Pi"?JS8ibY%C=b\0e5Uu=6is&&7:O"%CUu4W.CL^SnmITjR<52$NH3WB2G6D28HA.+T&o*6:L_i/bn(lu)qZ;,P.0NlB.Nohh<"b.F%m*2:6bFgpU93V>lm;6eQPa'7"+[M%]K>+CKkbT";f3WEqPKMYTeEc,.U)IdO#*qaoW3EC^.ZRS'j=ZfgG$_ad13/8MD-[Tfk=@Im^`FSXIMFCJI4!tT3cY"7@C+H%Y[51%jHmsjXCds:TAY@apSP!K+G6jRQS0I>U?uF_A`@k!`toOf94Y*c>/?*JDUmN74rdiELHVW6OKG,+ZCUJ38VM\kg&"UT:*;G0"nVq4%WbNj11WuF.T*BEX=WWfUPP\Qq"iR7.:V,3:KL`#'%=3mjF`:?s>tT[*Ra'B8#F.<Be]Nbdqh]F>KpIaE)q6+#JrluTT6-0i0`#:3%*2s7^6K0j2Z2AH1c;_4*ESgP*<?&]u]=QD'TW!goY$+gSCisuN"IL^G'.]G*Q50Xl4*#,AF<K(Fl=@Ej97-oq!O@<X^\<7n5A*JB%`p`X8N4I;nS\3Om9K.X[!MNe$n*ha"s36iF!NC$]8<?1,cdq-[4fg"G[,DYWUeWopI:t'^_'/PGD]h[@8Ua@BDei%%YS0a2]dncL%mG<NuENPl+S);*q9$!Khi@l33BY)LLrd/^$8d.`(WKsU#A1rPqqjSfPTA75sN3W%0Uii0;qf.5??lp<dYqnL3hWYRr.Si4GXF+a9%5iD)",6FId0iu`#4;Lg@F9h'-k]$1IV<3RY)G-X*TaO;Yp#<JfFn7*I9?V1o4hNknSp7WcX]`ePb9!35$TZPd><n.7>3=ZgVo6:F%[Mpr"FjTHXq?fNW<2CCu/DP#`==2\KDbKX<fP&ODP)PMhaH'6T=F,!(pLA.NZ?G@"lBYe]b:36i4tL5X(/N$[YT]!<4ud+QrsZ$Y%70p$)C*uSj(sQnYefYI1+/R&^]#eXqV#=k*3o]p3/*==aXjV4l1?.]F+SoTD;7JSd8ee]-mP'rR@Mn9HH@3@@0+:NmF[oc]LM(62%>D!BhJl-jY^S'.6PgVArMJ=FUA9oem&OlPj+%?[E>g1?j\'#b@NaT:Ej!leE8>oH35It[o<s[Q^a89X3h.?.8FI]cSn'gm%/I#PC%Q#cAY$Y5C:4;h2$5W?UX`iu#"ZOD+Bm0l=nA7b#O!EhuHBFWNFF]E&89$:OmSoZMH`Wrr1`Tl4G'61EB_9[6=/Z'gqMqi^\[$(d=%UBc<;\n-obrS0>/`/5]0miGtc<cY,Cc\rCbO$\<XT4VKpdA/\79_6Z[/rL;&L1n5Ocb4b1Q1*T8s,+HWgqKWOR?c@F48/s5=s]8n%H,kRLa>2fV^"K.d7V"M0jL@LhE-`7K&cj_rrM8KnIpj8-QIb\E.i'X[Pc\]97%i93fTrX>R(ju!UCNb\la+q?5'S"?,_h=JB[mQ*%(1DA6[UG0cqkf';P]OYc=r'"la'\WL*#2VHL#pIpjWoE5;3D`1O5bna#?'>7V'Ut^l\fbI$ceVG6eF',$o-<1UDG^S2`VhBr&-el%eX+CNQSh;4]fWV)C+pTuRXTDL]NZ7lZ>rNYIMqcc&G5&#(lYFpo=U.-a(jG3$f)oKFKN9rOHET@POl=&6lBb=1-fu?nGu>_YRJDI%O<KVNUlW,46!1@rG[b4p,IP[<G8\9;F+K!/)/V2f[$bL=<9JG+HW[<rT/'mNrC!=j]iD,(#ksDiA:P>ugcL3.TtSQ(-""jKS3iCj%fFDn-(-<Vt]_$B1]2<T2]hNC6[DN:eZYPc2l&ad<O>f%LMbfeP*Skn6*6m'J2fi&0)"'3hKh-nN0S]43SnJQ2$aO$u:lq0I>?7O=%]_4qS&k&iqO?:E:W%RN4%BN`bbRi7H8mf;]*&_oJ6_tV[G'&!@0=/fFq.3(u/Bj!_`Vf/o'mLO88dfJU8K+k<A[-7_GKQp7iLBFh%k=n1QQ5R]P`#c7&9Kt`Qb/Rq:7T'Mr?r-DIV]N+Ul)&CL`m$f6MtIN:*fb(R8pG7"Dr9<U5I]ohi@M!@l[0Zp[CfVk`t(-j$>UtQ%WXi.LR=7j=(+sQ+dVVUlRVJW0Vi6?0ZeTCUIjK)C<js%^GI8u6o4Qn0`T_nX73$,P8Sm<`2oTub=3Sg!$A@#6c+;T@*:%C+2`SDb%WoVu0P%e7G7(\Xe*p%bh@ZNRjlg9%OpfDV7AEET;$I?"X5B_l>YjPN&1PD/TODC1,PV:6M-qiB^BT01TD&$r$K(R1:\]t\`!8e6u%"s%?$\>I`@=/;FHVkt,H!QJ<g>q<*KmXSB]c8c(1C<cQKc>$pghEYdeFrHFePEEn*YmrN($5R')e8pX?"+1DAcLTTB0C#C($1V*a%QKTZ.4(!H+<Su22*VGm4mbX.@C1FQWF@_&%FRY1/;jfetI-Y8G21[GCRrI)uZ0K<gRq9HRT'$+Fd4Kpn4&-@H9*,PB/gA?I=bOTM%<TAhhc*J??S&Ute46:99<8urP@o1iGBi!cFjjQZY*80D[p.lZ.1?+cp"rf`B8WE.3GT-/dPLJL<WX8WcF,(-IYa55!c!1#YL++:t%\L>JP3`RC(C1lO'QIC^PqqD2CVIje@]!XJJh:=SDF8)Ob$+]n;N(3D#O><9+g<NVfN."4,pZW8aJZ(E!8R6a_=lBF=>22O*j@1\9%H0;jIb_LCH0p+@3o1$%"0U8"_3m9Z1lNeldi.8XG6LHp$9KAE**FZrf9+$"ChB3rR%ir.$2-=PW(-!GokRuNRN4TEZSEEB5p>oNF%oBpFFIG@?WirBZEHU2VC<"sf43pdrm7utDJIb1W(5/)46Uedh%#rkATi2(ZIlm?M&U9>5DEOBGR\tqHu$4=f51'/SG#h"a>>j!8d%Wk>jr[:!TqJQMrB:R8sfei:c&Z3TFk?9Bcb*TP-96_Q(>2*8:5/ur]sM'9+Oh"Ji$<?kpo(b@_dS,)C]Lf]]@N)P@9jGHlg%t4/Y%/FFifDNoDhk\rUhE*UW;eJYiBQK92<oWZs*Q3RP(_!RbURoW<:n#m&g$9S>iY9#g:GVHiQWeHUqGk*:CemEjAZ<W^-CWt`@NIYSG%\2,F!06FMq1r(3'3E@o1@51PQ^cR.gdJPOsk]!.bopo?XMbR/hrihZS[Ya`L@04=N0d/B+aPdiS%Q/rhlt=c30B!!Ld'AKe\V<;a%e\M[UnM7jU@3UON"\ot<gBj:>e=8el@")P8*>^MZ'Rdqr@embjWRuOPrl/e%=-/[?.LO&&)!*k(E&22p`r05aJ1f^=L(e*)Gr[A;%$N9\3Ac%ZLKMO=iT!,p*p"+]jf?\lu\ur6Oq;oe\A%Yjaeo(p[I=-;cA]+QIh3VLIj0-5sc'Q&B#OAdX^2+o$'0,LAm-A[XHXEmA%9(;=mr0'I^qn"LGr8o*t^]4"g^]3+cs7c+<5Q:H>LEHNkVa(+W0>IGWTC5#Eo&UC3rono]rqb(cs!Ze)o7+IQoCWX/r;>aXrmNMb%J,Stgr98\7Gs+La++F"P5Q1PIrs(21&G,~>%AI9_PrivateDataEnd