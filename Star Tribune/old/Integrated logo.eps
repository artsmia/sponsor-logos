%!PS-Adobe-3.1 EPSF-3.0%%Title: Integrated logo.eps%%Creator: Adobe Illustrator(R) X%%AI8_CreatorVersion: 10.0%AI9_PrintingDataBegin%%For: Elizabeth Mullen%%CreationDate: 9/30/04%%BoundingBox: 0 0 541 380%%HiResBoundingBox: 0 0 540.5606 379.3111%%CropBox: 0 0 540.5606 379.3111%%LanguageLevel: 2%%DocumentData: Clean7Bit%ADOBeginClientInjection: DocumentHeader "AI10"%ADOEndClientInjection: DocumentHeader "AI10"%%Pages: 1%%DocumentNeededResources: %%DocumentSuppliedResources: procset Adobe_AGM_Image (1.0 0)%%+ procset Adobe_CoolType_Utility_MAKEOCF (1.13 0)%%+ procset Adobe_CoolType_Core (2.12 0)%%+ procset Adobe_AGM_Core (2.0 0)%%+ procset Adobe_AGM_Utils (1.0 0)%%DocumentFonts: %%DocumentNeededFonts: %%DocumentNeededFeatures: %%DocumentSuppliedFeatures: %%DocumentProcessColors:  Cyan Yellow Black%%DocumentCustomColors: %%CMYKCustomColor: %%RGBCustomColor: %AI7_Thumbnail: 128 92 8%%BeginData: 12020 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FFFFFF7D52FD05F82752FD05FFA8A8A8FD6EFF27FD0AF8A8FFFF52%F8F8F852FD19FF52FD0FF852FD04FF7DF8F8F827FFFD04F8FD34FF27FD0C%F8A8FF7DF8F8F87DFD19FF7DFD0FF87DFD04FF52F8F8F827FFFD04F8FD33%FF7DFD04F82752A87D52FD04F827FF52F8F8F852FD19FF52FD0FF852FD04%FF7DF8F8F827FFFD04F8FD33FF52F8F8F827FD05FF5227522752FF7DF8F8%F87DFD19FFA8275227522727F8F8F8272752275227A8FD04FF7D52275252%FFFD04F8FD33FF27F8F8F852FD09FFA827FD05F82727FFFFFF5227FD04F8%277DA8FFFFA827272752A852F8F8FD06FF27F8F8F827FFFD04277D52F8F8%527D27272752FFFD04F8FF5227F8F8F87DA8FFA8FD0427FD04FFA8272727%52FF52272727A87D27F82727FD06FFA852FD04277DFD04FF52F8F8F827A8%FD08FFA8FD08F8FFFF27FD08F827A8FFA8F8F8F82727F8F8F8FD06FF52F8%F8F852FFFD04F827F8F8F87D52F8F8F827FFFD04F827FD06F827A8A8FD04%F8FD04FF7DF8F8F827FF27F8F8F827FD06F87DFFFFFF7DFD07F827FFFFFF%52FD05F8277D7DFD05FF7DFD08F8FF52FD04F82727FD05F8FFA8FD08F8FD%06FF27F8F8F827FFFD08F8527DF8F8F827FFFD0CF87D7DFD04F8FD04FFA8%F8F8F827FF27FD0BF8A8FF52FD09F827A8FFFFFD09F82752FD04FF7DF8F8%F87DFFFFFF27F8F8F8A8FFFFA827F8F8F8FFA8FD06F85252FD06FF52F8F8%F852FFFD06F82752A852F8F8F827FFFD05F8277DA827F8F8F852A8FD04F8%FD04FFA8F8F8F827FF27FD0BF87DA8FD05F87D5227F8F8F852FFFFA8FD0B%F852A8FF52F8F8F852FFFFFF2727277DFD04FF27F8F8F87DA8FD05F8A8FD%08FF27F8F8F827FFFD05F87DFFFFFF7DF8F8F827FFFD04F827A8FFFFFF27%F8F87D7DFD04F8FD04FFA8F8F8F827FF27F8F8F8277DFFA827F8F8F8FF27%FD04F8A8FFFFA8FD04F8A8FFFFFF5227FD09F827FF7DF8F8F87DFD08FF7D%7D27FD04F8A87DFD04F8A8FD09FF27F8F8F87DFFFD04F87DFD04FF52F8F8%F827FFFD04F87DFD05FFF8F852A8FD04F8FD04FFA8F8F8F827FF27F8F8F8%7DFFFFFF7DF8F852FFFD04F87DFD04FF52F8F8F852FD05FFA87D52FD07F8%FF52F8F8F852FD04FFA827FD09F87DA8FD04F8FD0AFF27F8F8F852FFFD04%F87DFD04FF7DF8F8F827FFFD04F8A8FD05FF27F87D7DFD04F8FD04FFA8F8%F8F827FF27F8F8F8A8FFFFFFA8F8F852A8FD0DF827FD09FFA87DFD04F8FF%7DF8F8F87DFFFFFF52FD07F827F8F8F8A8A8FD04F8FD0AFF52F8F8F87DFF%FD04F8FD05FF52F8F8F827FFFD04F8FD06FF27F852A8FD04F8FD04FFA8F8%F8F827FF27F8F8F8A8FFFFFFA8F8F87DA8FD0EF8527D527DFD07FF27F8F8%F8FF52F8F8F852FFFF7DFD05F87D7DFF52F8F8F87DA8F8F8F827FD0AFF27%F8F8F852FFFD04F8FD05FF7DF8F8F827FFFD04F8A8FD05FF27F87D7DFD04%F8FD04FFA8F8F8F827FF27F8F8F8A8FFFFFFA8F8F852A8FD12F87DFD06FF%52F8F8F8A87DF8F8F87DFFFF27F8F8F852FD04FF7DF8F8F87DA8FD04F8FD%0AFF52F8F8F87DFFFD04F8FD05FF52F8F8F827FFFD04F87DFD05FFF8F852%A8FD04F8A8FFFFFF7DF8F8F827FF27F8F8F8A8FFFFFFA8F8F87DA8FD04F8%FD0AFFFD05F8FD05FFA8FD04F8A852F8F8F852FFFF27F8F8F87DFD04FFFD%04F852A8FD04F8FD0AFF27F8F8F852FFFD04F8FD05FF7DF8F8F827FFFD04%F827A8FFFFFF27F8F87DA8FD04F827FFFFFF27F8F8F827FF27F8F8F8A8FF%FFFFA8F8F8F8FFFD04F87DFD04FFA8527D527D7DFD04F8277D527D27FD05%F8A87DFD04F827FF27FD04F8A8A87D27FD04F87DA8FD04F8FD0AFF52F8F8%F87DFFFD04F8FD05FF52F8F8F827FFFD05F8277D7D27F8F8F827FFFD05F8%522727FD04F827FF27F8F8F8A8FFFFFFA8F8F8F8A87DF8F8F827A8FFFFA8%FD04F827FF52FD0CF852FFA8FD05F87D7DFD0CF852A8FD04F8FD0AFF27F8%F8F852FFFD04F8FD05FF7DF8F8F827FFFD0CF827FF52FD0BF827FF27F8F8%F8A8FFFFFFA8F8F8F827A8FD05F82727FD05F8A8FFFF7DFD09F8277DFFFF%FF52FD04F827FF52FD07F827F8F8F87D7DFD04F8FD0AFF27F8F8F87DFFFD%04F8FD05FF52F8F8F827FFFD0CF87DFFA827FD0AF827FF27F8F8F87DFFFF%FF7DFD04F8FFA827FD09F87DFD05FF5227F8F8F827277DA8FD05FF7D7D52%7D52FFFFA82727F82727A87D7D527D7DA8527D527DFD0AFF522727277DFF%FD0427FD05FF7D27272752FFFD0427A827FD04F827A8FFFFFFA827FD04F8%52A827272752FF52272727A8FFFFFFA8FD0427FFFFA827FD07F8A8FD52FF%A8A8FD09FFA8A8FD1AFF7D7D527DA8FDFCFFFD4BFF52A8A827277DFD62FF%277DFD0DFF5252FD06FFA8F852A8F8F87DFD3FFFA8FD05FFA8FFFFFFA8FD%04FFA8FFFFA8FD05FFA8FD05FFA8A8FFFFFFF827FFFFFF7DFD06FFA8FFFF%F827FFFFA8FFA8FFFF7DA8FF52F852A8A8FD09FFA8FFA8A8A8FFFFFF7DA8%FD06FFA8A87DFFFFFFA8A8A8FFFFA8FFFFA8FFA8A8FD11FF52F87DA8F852%A8F82752F8A87DF852A8F85227F8A852F87D7DF852FFFFFF7DF8F8277DFD%04F8FFF8F8F87DFF52F852F87DFD04F852F827F87DF8F827FF7DFD04F87D%7DF8F852F8F8A852F827F8F827A8FF27F8F827FD04FFA827F8F827FF52F8%F827A87DF827F8F827F8F852FD10FFA8F85252F8F87DF8527DF85252F827%52F8527DF87D27F82752F87DFFFFFFF8F827F85227F8F827FF7D27F8F8FF%52F8F8F85227F8F8277DF8F8F87DF8F827FF52FD05F87DF8F87DF8F87D7D%FD05F8A852FD04F8A8FFFFFF27F827F8F87DFD04F8277DFD08F8FD11FF27%F827F8F827F8A8FFF827F8F8F827F8FFA8F827F8F8272727FD04FF52F8F8%52FFFFF852FFA8FD04F8FFFFF827A8FFFFF827FFFFF8F8A8FFA8F852FF7D%F827FF27F8A827F8FF52F8A8FF27F8FF27F8A852FD04F852FFFFFFF8F8A8%A8527DF852A8F8F8FF27F8FFF8F8FFF8F8FD11FF7DF8F827F8F8F8FFFF52%FD05F852FFFF27F8F827F8F852FF7DFFFF7D2727F87DFFF8F8FFF8F852F8%F8FFFFF827FFFFFFF827A8FFF8F8FFFF7DF827FF27F8F87DF8F8A827F87D%F8F87DFF27F8FF27F8A827F8275227A8A87DFFF8F87D7DA852F8F87DF8F8%A827F8FFF8F8FFF8F8FD12FFF8F87DF8F87DFFFFA8F8F8A8F8F87DFFFF7D%F8F87DF8F8A8A8F827FF2727F8F87DFFF8F85227F827F8F85252F8F852FF%FF27F87D27F8F852FFF8F8F852FD05F827FF27FD04F82752F8F82727F8F8%7DFD04F8A852F8A852FD04F8FFFD04F8277DF8F827F8F852F8F827FD11FF%5227FF5227A8FFFFFF2727FF5227FD04FF2727FF2752FFFF277DFFA827F8%52FFFF7D27A8A827F87D27A85227277DFFFF7D277D52272752FF2727277D%525227F827FFFFA827277D527D7D272752522727FF7DF82752FFA827A8FF%27F827A8FFA827F827FF7D272752272752272752FDFCFFFDFCFFFDFCFFFD%FCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDBEFFA8%A8A8FD7AFFA85FFD04110B345FFD76FF34110B110B110B110B110B84FFFF%59110B1159FD19FF59110B110B110B110B110B110B110B1159FD04FFAE0B%110B34FF110B110BA8FD33FF34121111111211111112111111AEFF831112%1183FD19FF8311111112111111121111111211111183FD04FFA811111234%FF11121111A8FD32FF84110B110B345FAE845F0B110B1134FF5F110B115F%FD19FF59110B110B110B110B110B110B110B1159FD04FFAE0B110B34FF11%0B110BA8FD32FF8311110B34FD05FF5F345E3434FF8311110B83FD19FF84%345EFD043411110BFD04345E3484FD04FFA85E343459FF11110B11A8FD32%FF34110B1158FD09FFA8340B110B110B3434FFFFFF83580B110B111183AE%FFFFAEFD0434AE5F0B1184FD05FF34110B1134FFFD0434845F0B1159AE34%34345FFF110B110BAE83340B113383A8FFFFFD0434FD04FFAEFD0434FF5F%343434AE8458113434AFFD06FF59FD043484FD04FF5F11111134AEFD08FF%AE1112111111121111FFFF34111112111111121134A8FFA8111112113411%1211AEFD05FF5F1111115FFF111112113411121183A812111134FF111111%123411111211111134AEFF11121111FD04FFA812111111FF341111123411%111211111183FFFFFF84111111121111113AFFFFFF5F110B110B11348384%FD05FF84110B110B110B110BFF83110B110B3411110B110B11FFAE0B110B%110B110B1184FD05FF34110B1134FF0B110B110B110B115FA80B110B34FF%110B110B110B110B110B110B8384110B110BFD04FFA80B110B11FF340B11%0B110B110B110B110BAEFF830B110B110B110B110B34AEFFFFFD04110B11%11110B345FFD04FF5F0B11115F84AEFF340B1111AEFFFFAE340B1111AE84%1111110B11113459FD06FF340B111134FF1111110B1111345FAEA8110B11%34FF0B1111110B345F84341111115FAE11110B11FD04FFA8110B1111FF34%1111110B1111110B1111115FAF11110B113383583411110B34FFFFAE0B11%0B110B110B110B110B58A8FF59110B1159FFFFFF3434345FFD04FF34110B%1184A80B110B110BAEFD08FF34110B1134FF0B110B110B84FFFFFFAE0B11%0B34FF110B110B11A8FFFFFF11110B8384110B110BFD04FFAE0B110B11FF%340B110B1184FFFF340B110BAF34110B110BAEFFFFA8110B110BA8FFFFFF%5F341112111111121111113AFF8311121183FD08FFA883341111121184A8%12111111AEFD09FF5E1112115EFF121111115FFD04FFA811111234FF1112%111183FD05FF11115FAE11111112FD04FFA811111211FF3412111183FFFF%FFAE121134FF3411111183FD04FF8311111234FD05FFAF835F11110B110B%110BAE5F110B115FFD04FFA834340B110B110B110B115FA80B110B11A8FD%09FF34110B1134FF0B110B1183FD04FFAE0B110B34FF110B110BA8FD05FF%340B8384110B110BFD04FFAE0B110B11FF340B110BA8FFFFFFAF0B1159AE%0B110B110B110B110B110B110B34FD09FFAE5F0B111111848311110B83FF%FFFF8311110B1111110B3411110B83A8110B1111FD0AFF5E11110B5EFF11%0B1111FD05FF8411111134FF11110B11A8FD05FF34115FAE0B111111FD04%FF841111110BFF34110B11A8FFFFFFA8110B83A8110B1111110B1111110B%1111110B59835983FD07FF580B110BA859110B1159FFFF840B110B110B5F%84FF59110B1159AE0B110B11FD0AFF34110B1134FF0B110B11FD05FFA80B%110B34FF110B110BAEFD05FF340B8384110B110BFD04FFA80B110B11FF34%0B110BAEFFFFFFAE0B1159AE0B110B110B110B110B110B110B1112111111%84FD06FF5F121111A88311111183FFFF3412111134FD04FF8311111183A8%11111211FD0AFF5F1111115FFF11111211FD05FFA812111134FF11111112%83FD05FF11125FFF11121111AEFFFFFF8312111111FF34111112A8FFFFFF%A811115FAE11111211FD0AFF11110B110BFD05FFA8110B110BA859110B11%34FFFF340B110B83FD04FF11110B1159AE0B110B11FD0AFF34110B1134FF%0B110B11FD05FFA80B110B34FF110B110B34AEFFFFFF59110B5FFF110B11%0B34FFFFFF340B110B11FF340B110BAEFFFFFFAE0B1111FF11110B1184FD%04FFA859835F83840BFD0411838483583411110B11A8AE0B11111134FF34%110B1111AEA8AE34110B111183841111110BFD0AFF340B111134FF111111%0BFD05FFA8110B1134FF0B1111110B348384FD041134FF11110B11115F58%3411110B1111FF3411111184FFFFFF84111111848311110B34A8FFFFFF34%110B1134FF5F0B110B110B110B110B110B1134FFA8110B110B1183840B11%0B110B110B110B110B1159A80B110B11FD0AFF34110B1134FF0B110B11FD%05FFAE0B110B34FF110B110B110B110B110B110B11FF5E0B110B110B110B%110B110B11FF340B110BA8FFFFFFA80B110B34A8110B110B1133340B110B%110BAEFFFF83111111121111111211115FFFFFFF581211111134FF5F1112%11111112113411121183A812111111FD0AFF5E1112115EFF12111111FD05%FFA811111234FF11121111111211111112111183FFAE3411121111111211%11111211FF34121111A8FFFFFFA812111111FFAE34111211111112111111%AEFD05FF59340B110B343483A8FD05FF84835F8359FFFFA834340B1134AE%8483598384AF59835F83FD0AFF5934343459FFFD0434FD05FFAE3434345F%FFFD0434A834110B110B3484FFFFFFA8340B110B1158AEFD0434FF5F3434%34AEFFFFFFAEFD0434FFFFA8340B110B110B111184FD51FFAFAEA8FD09FF%84AEFD19FFAF83835F83A8FDFCFFFD4BFF52A8FF27277DFD62FF2727FD0D%FF5227FD06FFA8F827FFF8F87DFD3FFFA8FD05FFA8FFFFFFA8FD07FFA8FD%05FFA8FD05FFA8A8FFFFFFF8F8FFFFFF7DA8FFFFFFA8FFFFA8FFF8F8FFFF%A8FFA8FFFFA8A8FF52F852A8A8FD09FFA8FFA8A8A8FFFFFFA8A8FD06FFA8%A8A8FFFFFFA8A8A8FD04FFA8A8FFA8A8FD11FF7DF87DA8F852FFF8277DF8%A87DF852FFF85252F8A87DF87DA8F852FFFFFF7DF8F827A8FD04F8FFF8F8%F8A8FF7DF852F8A8FD04F852F827F87DF8F852FF7DFD04F87D7DF8F852F8%F8A852F82727F827FFFF27F8F827FD04FFA827F8F827FF52F8F8277D7DF8%27F8F827F8F852FD10FFA8F82752F8F87DF8527DF82752F8277DF8527DF8%7D27F8277DF87DFFFFFF27F827F87D27F8F827FF7D27F8F8FF52F8F8F87D%27F8F8277DF8F8F87D27F827FF52FD05F852F8F87DF8F87D7DFD05F8A852%FD04F87DFFFFFF27F827F8F87DF8F827F8F87DFD08F8FD11FF27F827F8F8%27F87DFF2727F8F8F827F8FFFFF827F8F8F827F8FD04FF52F8F852FFFFF8%F8FF7DFD04F8FFFFF8F8A8FFFFF8F8FFFFF8F8A8FFA8F852FF7DF827A827%F8A827F87D52F8A8FF27F8A852F8A827FD04F852FFFFFFF8F8A8A8527DF8%27A827F8A8F8F87D27F8FF27F8FD11FF7DF8F827F8F8F8FFFF52FD05F827%FFFF27F8F827F8F827FFA8FFFF7D2727F87DFFF8F8FFF8F827F8F8A8FFF8%F8FFFFFFF8F8A8FFF8F8FFFF7DF827FF27F8F87DF8F87D27F852F8F852FF%27F8FF7DF8A827F8F85227A8FFA8FFF8F87D7DA852F8F87DF8F8A827F8A8%27F8FF27F8FD12FFF8F87D27F87DFFFFA8F8F8A8F8F87DFFFFA8F8F87DF8%F8A8A82727FF2727F8F87DFFF8F85227F827F8F82752F8F827FFFF27F852%52F8F852FFF8F8F852FD06F8FF27FD04F82752F8F85252F8F87DFD04F87D%7DF8A852FD04F8A8FD04F8277DF8F82752F85227F827FD11FF7D27A85227%A8FFFFFF5227FF5227FD04FF5227FF2752FFFF527DFFA827F852FFFF7DF8%A8A827F852277D52272752FFFF7D277D7D272752FF2727277D525227F827%A8FFA827275252527D2727527D2727FF7DF82752FFA827A8FF272752A8FF%A827F827FF7D272752522752522752FDFCFFFD0BFFFF%%EndData%%EndComments%%BeginDefaults%%ViewingOrientation: 1 0 0 1%%EndDefaults%%BeginProlog%ADOBeginClientInjection: DocumentProlog Start "AI10"%ADOEndClientInjection: DocumentProlog Start "AI10"%%BeginResource: procset Adobe_AGM_Utils 1.0 0%%Version: 1.0 0%%Copyright: Copyright (C) 2000-2000 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Utils 60 dict dup begin put/bdf{	bind def} bind def/nd{	null def}bdf/xdf{	exch def}bdf/ldf {	load def}bdf/ddf{	put}bdf	/xddf{	3 -1 roll put}bdf	/xpt{	exch put}bdf/ndf{ 		exch dup where{		pop pop pop	}{		xdf	}ifelse}def/cdndf{	exch dup currentdict exch known{		pop pop	}{		exch def	}ifelse}def/bdict{	mark}bdf/edict{	counttomark 2 idiv dup dict begin {def} repeat pop currentdict end}def	/ps_level	/languagelevel where{		pop systemdict /languagelevel get exec	}{		1	}ifelsedef/level2 	ps_level 2 gedef/level3 	ps_level 3 gedef/ps_version	{version cvr} stopped {		-1	}ifdef/makereadonlyarray{	/packedarray where{		pop packedarray	}{		array astore readonly	}ifelse}bdf/map_reserved_ink_name{	dup type /stringtype eq{		dup /Red eq{			pop (_Red_)		}{			dup /Green eq{				pop (_Green_)			}{				dup /Blue eq{					pop (_Blue_)				}{					dup /Cyan eq{						pop (_Cyan_)					}{						dup /Magenta eq{							pop (_Magenta_)						}{							dup /Yellow eq{								pop (_Yellow_)							}{								dup /Black eq{									pop (_Black_)								}{									dup () cvn eq{										pop (Process)									}if								}ifelse							}ifelse						}ifelse					}ifelse				}ifelse			}ifelse		}ifelse	}if}bdf/AGMUTIL_GSTATE 22 dict def/get_gstate{	AGMUTIL_GSTATE begin	/AGMUTIL_GSTATE_clr_spc currentcolorspace def	/AGMUTIL_GSTATE_clr_indx 0 def	/AGMUTIL_GSTATE_clr_comps 12 array def	mark currentcolor counttomark		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def} repeat pop	/AGMUTIL_GSTATE_fnt rootfont def	/AGMUTIL_GSTATE_lw currentlinewidth def	/AGMUTIL_GSTATE_lc currentlinecap def	/AGMUTIL_GSTATE_lj currentlinejoin def	/AGMUTIL_GSTATE_ml currentmiterlimit def	currentdash /AGMUTIL_GSTATE_do xdf /AGMUTIL_GSTATE_da xdf	/AGMUTIL_GSTATE_sa currentstrokeadjust def		/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def	/AGMUTIL_GSTATE_op currentoverprint def	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def	currentcolortransfer cvlit /AGMUTIL_GSTATE_gy_xfer xdf cvlit /AGMUTIL_GSTATE_b_xfer xdf		cvlit /AGMUTIL_GSTATE_g_xfer xdf cvlit /AGMUTIL_GSTATE_r_xfer xdf	/AGMUTIL_GSTATE_ht currenthalftone def	/AGMUTIL_GSTATE_flt currentflat def	end}def/set_gstate{	AGMUTIL_GSTATE begin	AGMUTIL_GSTATE_clr_spc setcolorspace	AGMUTIL_GSTATE_clr_indx {AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def} repeat setcolor	AGMUTIL_GSTATE_fnt setfont	AGMUTIL_GSTATE_lw setlinewidth	AGMUTIL_GSTATE_lc setlinecap	AGMUTIL_GSTATE_lj setlinejoin	AGMUTIL_GSTATE_ml setmiterlimit	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash	AGMUTIL_GSTATE_sa setstrokeadjust		AGMUTIL_GSTATE_clr_rnd setcolorrendering	AGMUTIL_GSTATE_op setoverprint	AGMUTIL_GSTATE_bg cvx setblackgeneration	AGMUTIL_GSTATE_ucr cvx setundercolorremoval	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer		AGMUTIL_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or		{		currenthalftone /HalftoneType get AGMUTIL_GSTATE_ht /HalftoneType get ne			{			  mark AGMUTIL_GSTATE_ht {sethalftone} stopped cleartomark			} if		}{		AGMUTIL_GSTATE_ht sethalftone		} ifelse		AGMUTIL_GSTATE_flt setflat	end}def/AGMUTIL_str256 256 string def/AGMUTIL_src256 256 string def/AGMUTIL_dst64 64 string def/AGMUTIL_srcLen nd/AGMUTIL_ndx nd/rdline{	currentfile AGMUTIL_str256 readline pop} bdf/rdcmntline{	currentfile AGMUTIL_str256 readline pop	(%) anchorsearch {pop} if} bdf/filter_cmyk{		dup type /filetype ne{		0 () /SubFileDecode filter	}if	[	exch	{		AGMUTIL_src256 readstring pop		dup length /AGMUTIL_srcLen exch def		/AGMUTIL_ndx 0 def				AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{			1 index exch get			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put			/AGMUTIL_ndx AGMUTIL_ndx 1 add def		}for		pop		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval	}	bind	/exec cvx	] cvx} bdf/AGMUTIL_imagefile nd/AGMUTIL_imbuf nd/read_image_file{	AGMUTIL_imagefile 0 setfileposition	dup /DataSource {AGMUTIL_imagefile AGMUTIL_imbuf readstring pop} put	exch	load exec}def/write_image_file{	begin	{ (AGMUTIL_imagefile) (w+) file } stopped{		false	}{		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 		Adobe_AGM_Utils/AGMUTIL_imbuf Width BitsPerComponent mul 7 add 8 idiv string ddf		1 1 Height { 			pop			DataSource dup type /filetype eq{				AGMUTIL_imbuf readstring pop			}{				exec			} ifelse			AGMUTIL_imagefile exch writestring		}for		true	}ifelse	end}def/close_image_file{	AGMUTIL_imagefile closefile (AGMUTIL_imagefile) deletefile}def/consumeimagedata{	begin	currentdict /MultipleDataSources known not		{/MultipleDataSources false def} if	MultipleDataSources		{		1 dict begin		/flushbuffer Width cvi string def		1 1 Height cvi			{			pop			0 1 DataSource length 1 sub				{				DataSource exch get				dup type dup 				/filetype eq					{					exch flushbuffer readstring pop pop					}if				/arraytype eq					{					exec pop					}if				}for			}for		end		}		{		/DataSource load type dup 		/filetype eq			{			1 dict begin			/flushbuffer Width Decode length 2 div mul cvi string def			1 1 Height { pop DataSource flushbuffer readstring pop pop} for			end			}if		/arraytype eq			{			1 1 Height { pop DataSource pop } for			}if		}ifelse	end}bdf/addprocs{     2{/exec load}repeat     3 1 roll     [ 5 1 roll ] bind cvx}def/modify_halftone_xfer{	currenthalftone dup length dict copy begin    currentdict 2 index known{    	1 index load dup length dict copy begin		currentdict/TransferFunction known{			/TransferFunction load		}{			currenttransfer		}ifelse	    addprocs /TransferFunction xdf 	    currentdict end def		currentdict end sethalftone	}{ 		currentdict/TransferFunction known{			/TransferFunction load 		}{			currenttransfer		}ifelse		addprocs /TransferFunction xdf		currentdict end sethalftone				pop	}ifelse}def/doc_setup{	Adobe_AGM_Utils begin}bdf/doc_trailer{	currentdict Adobe_AGM_Utils eq{		end	}if}bdfsystemdict /setpacking known{	setpacking} if%%EndResource%%BeginResource: procset Adobe_AGM_Core 2.0 0%%Version: 2.0 0%%Copyright: Copyright (C) 1997-1999 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Core 205 dict dup begin put/nd{	null def}bind def/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def/AGMCORE_str256 256 string def/AGMCORE_src256 256 string def/AGMCORE_save nd/AGMCORE_graphicsave nd/AGMCORE_c 0 def/AGMCORE_m 0 def/AGMCORE_y 0 def/AGMCORE_k 0 def/AGMCORE_cmykbuf 4 array def/AGMCORE_screen [currentscreen] cvx def/AGMCORE_tmp 0 def/AGMCORE_&setgray nd/AGMCORE_&setcolor nd/AGMCORE_&setcolorspace nd/AGMCORE_&setcmykcolor nd/AGMCORE_cyan_plate nd/AGMCORE_magenta_plate nd/AGMCORE_yellow_plate nd/AGMCORE_black_plate nd/AGMCORE_plate_ndx nd/AGMCORE_get_ink_data nd/AGMCORE_is_cmyk_sep nd/AGMCORE_host_sep nd/AGMCORE_will_host_sep nd/AGMCORE_avoid_L2_sep_space nd/AGMCORE_distilling nd/AGMCORE_composite_job nd/AGMCORE_producing_seps nd/AGMCORE_ps_level -1 def/AGMCORE_ps_version -1 def/AGMCORE_environ_ok nd/AGMCORE_CSA_cache 0 dict def/AGMCORE_CSD_cache 0 dict def/AGMCORE_pattern_cache 0 dict def/AGMCORE_currentoverprint false def/AGMCORE_deltaX nd/AGMCORE_deltaY nd/AGMCORE_name nd/AGMCORE_sep_special nd/AGMCORE_err_strings 4 dict def/AGMCORE_cur_err nd/AGMCORE_ovp nd/AGMCORE_current_spot_alias false def/AGMCORE_inverting false def/AGMCORE_feature_dictCount nd/AGMCORE_feature_opCount nd/AGMCORE_feature_ctm nd/AGMCORE_ConvertToProcess false def/AGMCORE_Default_CTM matrix def/knockout_unitsq nd/AGMCORE_CRD_cache where{	pop}{	/AGMCORE_CRD_cache 0 dict def}ifelse/AGMCORE_key_known{	where{		/Adobe_AGM_Core_Id known	}{		false	}ifelse}ndf/flushinput{	save	/CompareBuffer 3 -1 roll def	/readbuffer 256 string def	mark	{	currentfile readbuffer {readline} stopped		{cleartomark mark}		{		not			{pop exit}		if		CompareBuffer eq			{exit}		if		}ifelse	}loop	cleartomark	restore}bdf/getspotfunction{	AGMCORE_screen exch pop exch pop	dup type /dicttype eq{		dup /HalftoneType get 1 eq{			/SpotFunction get		}{			dup /HalftoneType get 2 eq{				/GraySpotFunction get			}{ 				pop				{					abs exch abs 2 copy add 1 gt{						1 sub dup mul exch 1 sub dup mul add 1 sub					}{						dup mul exch dup mul add 1 exch sub					}ifelse				}bind			}ifelse		}ifelse	}if} def/clp_npth{	clip newpath} def/eoclp_npth{	eoclip newpath} def/stkpath_clp_npth{	strokepath clip newpath} def/stk_n_clp_npth{	gsave stroke grestore clip newpath} def/npth_clp{	newpath clip} def/graphic_setup{	/AGMCORE_graphicsave save def	concat	0 setgray	0 setlinecap	0 setlinejoin	1 setlinewidth	[] 0 setdash	10 setmiterlimit	newpath	false setoverprint	false setstrokeadjust	Adobe_AGM_Core/spot_alias get exec	/Adobe_AGM_Image where {		pop		Adobe_AGM_Image/spot_alias 2 copy known{			get exec		}{			pop pop		}ifelse	} if	100 dict begin	/showpage {} def	mark} def/graphic_cleanup{	cleartomark	end	AGMCORE_graphicsave restore} def/compose_error_msg{	grestoreall initgraphics		/Helvetica findfont 10 scalefont setfont		/AGMCORE_deltaY 100 def	/AGMCORE_deltaX 310 def				clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath	0 AGMCORE_&setgray	gsave 1 AGMCORE_&setgray fill grestore 	1 setlinewidth gsave stroke grestore			currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto		/AGMCORE_deltaY 12 def	/AGMCORE_tmp 0 def	AGMCORE_err_strings exch get		{		dup 32 eq			{			pop			AGMCORE_str256 0 AGMCORE_tmp getinterval			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt				{				currentpoint AGMCORE_deltaY sub exch pop				clippath pathbbox pop pop pop 44 add exch moveto				} if			AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show						0 1 AGMCORE_str256 length 1 sub				{				AGMCORE_str256 exch 0 put				}for			/AGMCORE_tmp 0 def			}			{				AGMCORE_str256 exch AGMCORE_tmp exch put				/AGMCORE_tmp AGMCORE_tmp 1 add def			} ifelse		} forall} bdf/doc_setup{	Adobe_AGM_Core begin		/AGMCORE_will_host_separate xdf	/AGMCORE_ps_version xdf	/AGMCORE_ps_level xdf		errordict /AGM_handleerror known not{		errordict /AGM_handleerror errordict /handleerror get put		errordict /handleerror {			Adobe_AGM_Core begin			$error /newerror get AGMCORE_cur_err null ne and{				$error /newerror false put				AGMCORE_cur_err compose_error_msg			}if			$error /newerror true put			end			errordict /AGM_handleerror get exec			} bind put		}if			/AGMCORE_environ_ok 		ps_level AGMCORE_ps_level ge		ps_version AGMCORE_ps_version ge and 		AGMCORE_ps_level -1 eq or	def		AGMCORE_environ_ok not		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if		/AGMCORE_&setgray systemdict/setgray get def	level2{		/AGMCORE_&setcolor systemdict/setcolor get def		/AGMCORE_&setcolorspace systemdict/setcolorspace get def	}if	/AGMCORE_distilling		/product where{			pop systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and		}{			false		}ifelse	def	/AGMCORE_in_rip_sep		/AGMCORE_in_rip_sep where{			pop AGMCORE_in_rip_sep		}{			AGMCORE_distilling 			{				false			}{				userdict/Adobe_AGM_OnHost_Seps known{					false				}{					level2{						currentpagedevice/Separations 2 copy known{							get						}{							pop pop false						}ifelse					}{						false					}ifelse				}ifelse			}ifelse		}ifelse	def	level2 not{		/xput{			dup load dup length exch maxlength eq{				dup dup load dup				length dup 0 eq {pop 1} if 2 mul dict copy def			}if			load begin				def 			end		}def	}{		/xput{			load 3 1 roll put		}def	}ifelse	/AGMCORE_GSTATE AGMCORE_key_known not{		/AGMCORE_GSTATE 21 dict def		/AGMCORE_gstack 32 array def		/AGMCORE_gstackptr 0 def		/AGMCORE_gstacksaveptr 0 def		/AGMCORE_gstackframekeys 8 def													/AGMCORE_&gsave /gsave ldf		/AGMCORE_&grestore /grestore ldf		/AGMCORE_&grestoreall /grestoreall ldf		/AGMCORE_&save /save ldf		/AGMCORE_gdictcopy {			begin			{ def } forall			end		}def		/AGMCORE_gput {			AGMCORE_gstack AGMCORE_gstackptr get			3 1 roll			put		}def		/AGMCORE_gget {			AGMCORE_gstack AGMCORE_gstackptr get			exch			get		}def		/gsave {			AGMCORE_&gsave			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gstackptr 1 add			dup 32 ge {limitcheck} if			Adobe_AGM_Core exch			/AGMCORE_gstackptr exch put			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gdictcopy		}def		/grestore {			AGMCORE_&grestore			AGMCORE_gstackptr 1 sub			dup AGMCORE_gstacksaveptr lt {1 add} if			Adobe_AGM_Core exch			/AGMCORE_gstackptr exch put		}def		/grestoreall {			AGMCORE_&grestoreall			Adobe_AGM_Core			/AGMCORE_gstackptr AGMCORE_gstacksaveptr put 		}def		/save {			AGMCORE_&save			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gstackptr 1 add			dup 32 ge {limitcheck} if			Adobe_AGM_Core begin				/AGMCORE_gstackptr exch def				/AGMCORE_gstacksaveptr AGMCORE_gstackptr def			end			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gdictcopy		}def		0 1 AGMCORE_gstack length 1 sub {				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put		} for	}if	/currentcmykcolor [0 0 0 0] AGMCORE_gput	/currentstrokeadjust false AGMCORE_gput	/currentcolorspace [/DeviceGray] AGMCORE_gput	/sep_tint 0 AGMCORE_gput	/sep_colorspace_dict null AGMCORE_gput	/indexed_colorspace_dict null AGMCORE_gput	/currentcolor_intent () AGMCORE_gput	/customcolor_tint 1 AGMCORE_gput	end}def/page_setup{	/setcmykcolor where{		pop		Adobe_AGM_Core/AGMCORE_&setcmykcolor /setcmykcolor load put	}if	Adobe_AGM_Core begin	/setcmykcolor	{		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput		1 sub 4 1 roll		3 {			3 index add neg dup 0 lt {				pop 0			} if			3 1 roll		} repeat		setrgbcolor pop	}ndf	/currentcmykcolor	{		/currentcmykcolor AGMCORE_gget aload pop	}ndf	/setoverprint	{		pop	}ndf	/currentoverprint	{		false	}ndf	/AGMCORE_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def	/AGMCORE_plate_ndx 		AGMCORE_cyan_plate{ 			0		}{			AGMCORE_magenta_plate{				1			}{				AGMCORE_yellow_plate{					2				}{					AGMCORE_black_plate{						3					}{						4					}ifelse				}ifelse			}ifelse		}ifelse		def	/AGMCORE_composite_job		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def		/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def		/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def		/AGM_preserve_spots 		/AGM_preserve_spots where{			pop AGM_preserve_spots		}{			AGMCORE_distilling AGMCORE_producing_seps or		}ifelse	def	/AGM_is_distiller_preserving_spotimages	{		currentdistillerparams/PreserveOverprintSettings known		{			currentdistillerparams/PreserveOverprintSettings get				{					currentdistillerparams/ColorConversionStrategy known					{						currentdistillerparams/ColorConversionStrategy get						/LeaveColorUnchanged eq					}{						true					}ifelse				}{					false				}ifelse		}{			false		}ifelse	}def	/convert_spot_to_process where {pop}{		/convert_spot_to_process		{			dup dup (None) eq exch (All) eq or				{				pop false				}{				AGMCORE_host_sep				{ 					gsave					1 0 0 0 setcmykcolor currentgray 1 exch sub					0 1 0 0 setcmykcolor currentgray 1 exch sub					0 0 1 0 setcmykcolor currentgray 1 exch sub					0 0 0 1 setcmykcolor currentgray 1 exch sub					add add add 0 eq					{						pop false					}{						false setoverprint						1 1 1 1 5 -1 roll findcmykcustomcolor 1 setcustomcolor						currentgray 0 eq					}ifelse					grestore				}{					AGMCORE_distilling					{						pop AGM_is_distiller_preserving_spotimages not					}{						Adobe_AGM_Core/AGMCORE_name xddf						false						currentpagedevice/OverrideSeparations known							{							currentpagedevice/OverrideSeparations get								{								/HqnSpots /ProcSet resourcestatus									{									pop pop pop true									}if								}if							}if												{							AGMCORE_name /HqnSpots /ProcSet findresource /TestSpot get exec not							}{							gsave							[/Separation AGMCORE_name /DeviceGray {}]setcolorspace							false							currentpagedevice/SeparationColorNames 2 copy known							{								get								{ AGMCORE_name eq or}forall							not							}{								pop pop pop true							}ifelse							grestore						}ifelse					}ifelse				}ifelse			}ifelse		}def	}ifelse	/convert_to_process where {pop}{		/convert_to_process		{			dup length 0 eq				{				pop false				}{				AGMCORE_host_sep				{ 				true exch					{					convert_spot_to_process and					}				forall				}{				false exch					{					convert_spot_to_process or					}				forall				}ifelse			}ifelse		}def	}ifelse		AGMCORE_host_sep AGMCORE_will_host_separate not and {		/AGMCORE_cur_err /AGMCORE_color_space_onhost_seps def		AGMCORE_color_space_onhost_seps	}if	/AGMCORE_avoid_L2_sep_space  		version cvr 2012 lt 		level2 and 		AGMCORE_producing_seps not and	def	/AGMCORE_is_cmyk_sep		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or	def	/AGM_avoid_0_cmyk where{		pop AGM_avoid_0_cmyk	}{		AGM_preserve_spots 		userdict/Adobe_AGM_OnHost_Seps known 		userdict/Adobe_AGM_InRip_Seps known or		not and	}ifelse	{		/setcmykcolor[			{				4 copy add add add 0 eq currentoverprint and{					pop 0.0005				}if			}/exec cvx			/AGMCORE_&setcmykcolor load dup type/operatortype ne{				/exec cvx			}if		]cvx def	}if	AGMCORE_host_sep{		/AGMCORE_get_ink_data			AGMCORE_cyan_plate{				{pop pop pop}			}{			  	AGMCORE_magenta_plate{			  		{4 3 roll pop pop pop}			  	}{			  		AGMCORE_yellow_plate{			  			{4 2 roll pop pop pop}			  		}{			  			{4 1 roll pop pop pop}			  		}ifelse			  	}ifelse			}ifelse		def		/clip AGMCORE_key_known not{			Adobe_AGM_Core/AGMCORE_&clip /clip load put			/clip			{				current_spot_alias{					currentdict/InksUsed known{						[						InksUsed{							dup map_alias{								/Name get exch pop							}if						}forall						]						/InksUsed xdf					}if				}if				AGMCORE_&clip			}def		}if		/eoclip AGMCORE_key_known not{			Adobe_AGM_Core/AGMCORE_&eoclip /eoclip load put			/eoclip			{				current_spot_alias{					currentdict/InksUsed known{						[						InksUsed{							dup map_alias{								/Name get exch pop							}if						}forall						]						/InksUsed xdf					}if				}if				AGMCORE_&eoclip			}def		}if	}if	AGMCORE_in_rip_sep{		/setcustomcolor		{			exch aload pop			dup 7 1 roll inRip_spot_has_ink not	{ 				4 {4 index mul 4 1 roll}				repeat				/DeviceCMYK setcolorspace				6 -2 roll pop pop			}{ 				Adobe_AGM_Core begin					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf				end				[/Separation 4 -1 roll /DeviceCMYK				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}				]				setcolorspace			}ifelse			setcolor		}ndf		/setseparationgray		{			[/Separation (All) /DeviceGray {}] setcolorspace_opt			1 exch sub setcolor		}ndf	}{		/setseparationgray		{			AGMCORE_&setgray		}ndf	}ifelse	/findcmykcustomcolor	{		5 makereadonlyarray	}ndf	/setcustomcolor	{		exch aload pop pop		4 {4 index mul 4 1 roll} repeat		setcmykcolor pop	}ndf		/has_color		/colorimage where{			AGMCORE_producing_seps{				pop true			}{				systemdict eq			}ifelse		}{			false		}ifelse	def		/map_index	{		1 index mul exch getinterval {255 div} forall	}def		level2{		/mo /moveto ldf		/li /lineto ldf		/cv /curveto ldf		/knockout_unitsq		{			1 setgray			0 0 1 1 rectfill		}def		/level2ScreenFreq{			begin			60			HalftoneType 1 eq{				pop Frequency			}if			HalftoneType 2 eq{				pop GrayFrequency			}if			HalftoneType 5 eq{				pop Default level2ScreenFreq			}if			 end		}def		/currentScreenFreq{			currenthalftone level2ScreenFreq		}def		level2 /setcolorspace AGMCORE_key_known not and{					/AGMCORE_&&&setcolorspace /setcolorspace ldf			/AGMCORE_ReplaceMappedColor			{				dup type dup /arraytype eq exch /packedarraytype eq or				{					dup 0 get dup /Separation eq					{						pop						dup length array copy						dup dup 1 get						current_spot_alias						{							dup map_alias							{								begin								/sep_colorspace_dict currentdict AGMCORE_gput								pop pop	pop																	[ 									/Separation Name 									CSA map_csa									dup /MappedCSA xdf 									/sep_colorspace_proc load								]								dup Name								end							}if						}if						map_reserved_ink_name 1 exch put					}{						/DeviceN eq 						{							dup length array copy							dup dup 1 get [ 								exch {									current_spot_alias{										dup map_alias{											/Name get exch pop										}if									}if									map_reserved_ink_name								} forall 							] 1 exch put						}if					}ifelse				}if			}def			/setcolorspace			{				dup type dup /arraytype eq exch /packedarraytype eq or				{					dup 0 get /Indexed eq					{						AGMCORE_distilling						{							/PhotoshopDuotoneList where							{								pop false							}{								true							}ifelse						}{							true						}ifelse						{							aload pop 3 -1 roll							AGMCORE_ReplaceMappedColor							3 1 roll 4 array astore						}if					}{						AGMCORE_ReplaceMappedColor					}ifelse				}if				AGMCORE_&&&setcolorspace			}def		}if		}{				/adj		{			currentstrokeadjust{				transform				0.25 sub round 0.25 add exch				0.25 sub round 0.25 add exch				itransform			}if		}def		/mo{			adj moveto		}def		/li{			adj lineto		}def		/cv{			6 2 roll adj			6 2 roll adj			6 2 roll adj curveto		}def		/knockout_unitsq		{			1 setgray			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image		}def		/currentstrokeadjust{			/currentstrokeadjust AGMCORE_gget		}def		/setstrokeadjust{			/currentstrokeadjust exch AGMCORE_gput		}def		/currentScreenFreq{			currentscreen pop pop		}def		/setcolorspace		{			/currentcolorspace exch AGMCORE_gput		} def				/currentcolorspace		{			/currentcolorspace AGMCORE_gget		} def				/n_color_components		{			dup type /arraytype eq{				0 get			}if			dup /DeviceGray eq{				pop 1			}{				/DeviceCMYK eq{					4				}{					3				}ifelse			}ifelse		} def				/setcolor_devicecolor		{			dup type /arraytype eq{				0 get			}if			dup /DeviceGray eq{				pop setgray			}{				/DeviceCMYK eq{					setcmykcolor				}{					setrgbcolor				}ifelse			}ifelse		}def			/setcolor		{			currentcolorspace 0 get			dup /DeviceGray ne{				dup /DeviceCMYK ne{					dup /DeviceRGB ne{						dup /Separation eq{							pop							currentcolorspace 3 get exec							currentcolorspace 2 get						}{							dup /Indexed eq{								pop								currentcolorspace 3 get dup type /stringtype eq{									currentcolorspace 1 get n_color_components									3 -1 roll map_index								}{									exec								}ifelse								currentcolorspace 1 get							}{								/AGMCORE_cur_err /AGMCORE_invalid_color_space def								AGMCORE_invalid_color_space							}ifelse						}ifelse					}if				}if			}if			setcolor_devicecolor		} def	}ifelse		/sop /setoverprint ldf	/lw /setlinewidth ldf	/lc /setlinecap ldf	/lj /setlinejoin ldf	/ml /setmiterlimit ldf	/dsh /setdash ldf	/sadj /setstrokeadjust ldf	/gry /setgray ldf	/rgb /setrgbcolor ldf	/cmyk /setcmykcolor ldf	/sep /setsepcolor ldf	/idx /setindexedcolor ldf	/colr /setcolor ldf	/csacrd /set_csa_crd ldf	/sepcs /setsepcolorspace ldf	/idxcs /setindexedcolorspace ldf	/cp /closepath ldf	/clp /clp_npth ldf	/eclp /eoclp_npth ldf	/spclp /stkpath_clp_npth ldf	/f /fill ldf	/ef /eofill ldf	/s /stroke ldf	/sclp /stk_n_clp_npth ldf	/nclp /npth_clp ldf	/gset /graphic_setup ldf	/gcln /graphic_cleanup ldf		currentdict{		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {			bind		}if		def	}forall}def/page_trailer{	end}def/doc_trailer{}defsystemdict /findcolorrendering known{	/findcolorrendering systemdict /findcolorrendering get def}ifsystemdict /setcolorrendering known{	/setcolorrendering systemdict /setcolorrendering get def}if/test_cmyk_color_plate{	gsave	setcmykcolor currentgray 1 ne	grestore}def/inRip_spot_has_ink{	dup Adobe_AGM_Core/AGMCORE_name xddf	convert_spot_to_process not}def/current_ink{	dup length 0 eq{		pop true	}{		Adobe_AGM_Core/ink_result false put		{			dup /ProcessCyan eq{				AGMCORE_cyan_plate ink_result or Adobe_AGM_Core/ink_result xddf			}{				dup /ProcessMagenta eq{					AGMCORE_magenta_plate ink_result or Adobe_AGM_Core/ink_result xddf				}{					dup /ProcessYellow eq{						AGMCORE_yellow_plate ink_result or Adobe_AGM_Core/ink_result xddf					}{						dup /ProcessBlack eq{							AGMCORE_black_plate ink_result or Adobe_AGM_Core/ink_result xddf						}{							dup /sep_colorspace_dict AGMCORE_gget dup null eq{								pop false ink_result or Adobe_AGM_Core/ink_result xddf							}{								/Name get eq{									1 setsepcolor									currentgray 1 ne ink_result or Adobe_AGM_Core/ink_result xddf								}{									false ink_result or Adobe_AGM_Core/ink_result xddf								}ifelse							}ifelse						}ifelse					}ifelse				}ifelse			}ifelse			pop 		} forall		ink_result	}ifelse}def/map255_to_range{	1 index sub	3 -1 roll 255 div mul add}def/set_csa_crd{	/sep_colorspace_dict null AGMCORE_gput	begin		CSA map_csa setcolorspace_opt		set_crd	end}def/setsepcolor{ 		/sep_colorspace_dict AGMCORE_gget begin		dup /sep_tint exch AGMCORE_gput		TintProc	end} def/sep_colorspace_proc{	Adobe_AGM_Core/AGMCORE_tmp xddf	/sep_colorspace_dict AGMCORE_gget begin	currentdict/Components known{		Components aload pop 		TintMethod/Lab eq{			2 {AGMCORE_tmp mul NComponents 1 roll} repeat			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll		}{			TintMethod/Subtractive eq{				NComponents{					AGMCORE_tmp mul NComponents 1 roll				}repeat			}{				NComponents{					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll				} repeat			}ifelse		}ifelse	}{		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get		aload pop	}ifelse	end} def/sep_colorspace_gray_proc{	Adobe_AGM_Core/AGMCORE_tmp xddf	/sep_colorspace_dict AGMCORE_gget begin	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get	end} def/sep_proc_name{	dup 0 get 	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{		pop [/DeviceGray]		/sep_colorspace_gray_proc	}{		/sep_colorspace_proc	}ifelse} def/setsepcolorspace{ 		current_spot_alias{		dup begin			Name map_alias{				exch pop			}if		end	}if	dup /sep_colorspace_dict exch AGMCORE_gput	begin	/MappedCSA CSA map_csa def	Adobe_AGM_Core/AGMCORE_sep_special Name dup () eq exch (All) eq or ddf		AGMCORE_avoid_L2_sep_space{		[/Indexed MappedCSA sep_proc_name 255 exch 			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 		] setcolorspace_opt		/TintProc {			255 mul round cvi setcolor		}bdf	}{		MappedCSA 0 get /DeviceCMYK eq 		currentdict/Components known and 		AGMCORE_sep_special not and{			/TintProc [				Components aload pop Name findcmykcustomcolor 				/exch cvx /setcustomcolor cvx			] cvx bdf		}{ 			AGMCORE_host_sep Name (All) eq and{ 				/TintProc { 					1 exch sub setseparationgray 				}bdf 			}{				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 				AGMCORE_host_sep or				Name () eq and{					/TintProc [						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{							cvx /setcmykcolor cvx						}{							cvx /setgray cvx						}ifelse					] cvx bdf				}{					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{	 					/TintProc [							/dup cvx							MappedCSA sep_proc_name cvx exch							0 get /DeviceGray eq{								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx							}if							/Name cvx /findcmykcustomcolor cvx /exch cvx														AGMCORE_host_sep{								AGMCORE_is_cmyk_sep							}{								Name inRip_spot_has_ink not							}ifelse							{		 						/pop cvx 1							}if							/setcustomcolor cvx						] cvx bdf 					}{ 						/TintProc /setcolor ldf												[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt					}ifelse				}ifelse			}ifelse		}ifelse	}ifelse	set_crd	setsepcolor	end} def/setindexedcolorspace{	dup /indexed_colorspace_dict exch AGMCORE_gput	begin		/MappedCSA CSA map_csa def		AGMCORE_host_sep level2 not and{			0 0 0 0 setcmykcolor		}{			[/Indexed MappedCSA 			level2 not has_color not and{				dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{					pop [/DeviceGray]				}if				HiVal GrayLookup			}{				HiVal 				currentdict/RangeArray known{					{ 						/indexed_colorspace_dict AGMCORE_gget begin						Lookup exch 						dup HiVal gt{							pop HiVal						}if						NComponents mul NComponents getinterval {} forall						NComponents 1 sub -1 0{							RangeArray exch 2 mul 2 getinterval aload pop map255_to_range							NComponents 1 roll						}for						end					} bind				}{					Lookup				}ifelse			}ifelse			] setcolorspace_opt						set_crd		}ifelse	end}def/setindexedcolor{	AGMCORE_host_sep{		/indexed_colorspace_dict AGMCORE_gget/Lookup get 4 3 -1 roll map_index setcmykcolor	}{		setcolor	}ifelse} def/ignoreimagedata{	currentoverprint not{		gsave 		dup begin		1 setgray		0 0 ImageMatrix itransform 		Width Height ImageMatrix idtransform rectfill 		end		grestore		}if	consumeimagedata}def/add_csa{	Adobe_AGM_Core begin			/AGMCORE_CSA_cache xput	end}def/map_csa{	dup type /nametype eq{		Adobe_AGM_Core/AGMCORE_CSA_cache get exch get	}if}def/add_csd{	Adobe_AGM_Core begin		/AGMCORE_CSD_cache xput	end}def/get_csd{	dup type /nametype eq{		Adobe_AGM_Core/AGMCORE_CSD_cache get exch get	}if}def/get_csd_by_name{	dup type dup /nametype eq exch /stringtype eq or{		Adobe_AGM_Core begin		/AGMCORE_CSD_Name xdf		AGMCORE_CSD_cache		{			dup /Name get AGMCORE_CSD_Name eq			{				exch pop exit			}{				pop			}ifelse			pop		}forall		end	}if}def/cachepattern_level2{	4 dict begin	/comparebuffer exch def	/holdbuffer exch def	/readbuffer 1024 string def	/LZWFilter holdbuffer /LZWEncode filter def	{		currentfile readbuffer readline not			{pop exit}		if		dup LZWFilter exch writestring		LZWFilter (\n) writestring		comparebuffer eq			{exit}		if	}loop	LZWFilter closefile	end}def/cachepattern_level3{	3 dict begin	/comparebuffer exch def	/readbuffer 1024 string def	/DoEOL false def	{ 		DoEOL			{			(\n)			/DoEOL false def			}			{			currentfile readbuffer readline not				{pop ()}				{				dup length 0 eq					{ pop(\n)}					{					dup comparebuffer eq						{pop ()}						{/DoEOL true def}					ifelse					}				ifelse				}			ifelse			}		ifelse	} /ReusableStreamDecode filter	end}def/add_pattern{	Adobe_AGM_Core begin		/AGMCORE_pattern_cache xput	end}def/get_pattern{	dup type /nametype eq{		Adobe_AGM_Core/AGMCORE_pattern_cache get exch get	}if}def/make_pattern{	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform	exch 3 index /XStep get 1 index exch 2 copy div cvi mul sub sub	exch 3 index /YStep get 1 index exch 2 copy div cvi mul sub sub	matrix translate exch matrix concatmatrix	makepattern}def/set_pattern{	dup /PatternType get 1 eq{		dup /PaintType get 1 eq{			false sop [/DeviceGray] setcolorspace 0 setgray		}if	}if	setpattern}def/setcolorspace_opt{	dup currentcolorspace eq{		pop	}{		setcolorspace	}ifelse}def/updatecolorrendering{		currentcolorrendering/Intent known{		currentcolorrendering/Intent get	}{		null	}ifelse		Intent ne{		false  		Intent		AGMCORE_CRD_cache {			exch pop 			begin				dup Intent eq{					currentdict setcolorrendering_opt					end 					exch pop true exch						exit				}if			end		} forall		pop		not{			systemdict /findcolorrendering known{				Intent findcolorrendering pop				/ColorRendering findresource 				dup length dict copy				setcolorrendering_opt			}if		}if	}if} def/add_crd{	AGMCORE_CRD_cache 3 1 roll put}def/set_crd{	AGMCORE_host_sep not level2 and{		currentdict/CRD known{			AGMCORE_CRD_cache CRD get dup null ne{				setcolorrendering_opt			}{				pop			}ifelse		}{			currentdict/Intent known{				updatecolorrendering			}if		}ifelse	}if}def/setcolorrendering_opt{	dup currentcolorrendering eq{		pop	}{		begin			/Intent Intent def			currentdict		end		setcolorrendering	}ifelse}def/cdndf{	exch dup currentdict exch known{		pop pop	}{		exch def	}ifelse}def/cpaint_gcomp{	convert_to_process Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf	Adobe_AGM_Core/AGMCORE_ConvertToProcess get not	{		(%end_cpaint_gcomp) flushinput	}if}def/cpaint_gsep{	Adobe_AGM_Core/AGMCORE_ConvertToProcess get	{			(%end_cpaint_gsep) flushinput	}if}def/cpaint_gend{	newpath}def/AGMCORE_ctm_stack bdict	/push_ctm {		stack length size le{			stack dup length 2 mul array 			dup /stack exch def			copy pop		}if		stack size 3 -1 roll put		/size size 1 add def	}	/pop_ctm {		/size size 1 sub def		size 0 lt{ 			/size 0 def		}if		stack size get	}	/stack 1 array	/size 0 edict def/save_ctm{	matrix currentmatrix AGMCORE_ctm_stack begin 		push_ctm 	end}def/restore_ctm{	AGMCORE_ctm_stack begin		pop_ctm 	end	setmatrix}def/path_rez{	dup 0 ne{		AGMCORE_deviceDPI exch div 		dup 1 lt{			pop 1		}if		setflat	}{		pop	}ifelse 	}def/rdcmntline {	currentfile AGMCORE_str256 readline pop	(%) anchorsearch {pop} if} def/set_spot_alias_ary{	/AGMCORE_SpotAliasAry where{		pop pop	}{		Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf		true set_spot_alias	}ifelse}def/set_spot_alias{	/AGMCORE_SpotAliasAry where{		/AGMCORE_current_spot_alias 3 -1 roll put	}{		pop	}ifelse}def/current_spot_alias{	/AGMCORE_SpotAliasAry where{		/AGMCORE_current_spot_alias get	}{		false	}ifelse}def/map_alias{	/AGMCORE_SpotAliasAry where{		begin			/AGMCORE_name xdf			false				AGMCORE_SpotAliasAry{				dup/Name get AGMCORE_name eq{					save exch					/Adobe_AGM_Core currentdict def					/CSD get get_csd					exch restore					exch pop true					exit				}{					pop				}ifelse			}forall		end	}{		pop false	}ifelse}bdf/spot_alias{	true set_spot_alias		/AGMCORE_&setcustomcolor AGMCORE_key_known not {		Adobe_AGM_Core/AGMCORE_&setcustomcolor /setcustomcolor load put	} if	/customcolor_tint 1 AGMCORE_gput		Adobe_AGM_Core begin	/setcustomcolor	{				dup /customcolor_tint exch AGMCORE_gput				current_spot_alias{			1 index 4 get map_alias{				mark 3 1 roll				setsepcolorspace				counttomark 0 ne{					setsepcolor				}if				pop				pop			}{				AGMCORE_&setcustomcolor			}ifelse		}{			AGMCORE_&setcustomcolor		}ifelse	}bdf	end}def/begin_feature{	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if}def/end_feature{	2 dict begin	/spd /setpagedevice load def	/setpagedevice { get_gstate spd set_gstate } def	stopped{$error/newerror false put}if	end	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if}def/set_negative{	Adobe_AGM_Core begin	/AGMCORE_inverting exch def	level2{		currentpagedevice/NegativePrint known{			currentpagedevice/NegativePrint get Adobe_AGM_Core/AGMCORE_inverting get ne{				true begin_feature true{						bdict /NegativePrint Adobe_AGM_Core/AGMCORE_inverting get edict setpagedevice				}end_feature			}if			/AGMCORE_inverting false def		}if	}if	AGMCORE_inverting{		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer		gsave newpath clippath 1 /setseparationgray where{pop setseparationgray}{setgray}ifelse 		fill grestore	}if	end}def/lw_save_restore_override {	/md where {		pop		md begin		/pmSVsetup{} def		/endp{}def		/pse{}def		/psb{}def		/orig_showpage where			{pop}			{/orig_showpage /showpage load def}		ifelse		/showpage {orig_showpage gR} def		end	}if}def/pscript_showpage_override {	/NTPSOct95 where	{		begin		showpage		save		/showpage /restore load def		/restore {exch pop}def		end	}if}def/driver_media_override{	/md where {		pop		md /initializepage known {			md /initializepage {} put		} if		md /rC known {			md /rC {4{pop}repeat} put		} if	}if		Adobe_AGM_Core /AGMCORE_Default_CTM matrix currentmatrix put}def/driver_check_media_override{	Adobe_AGM_Core /AGMCORE_Default_CTM get matrix currentmatrix ne	{		Adobe_AGM_Core /AGMCORE_Default_CTM get setmatrix	}if}defAGMCORE_err_strings begin	/AGMCORE_bad_environ (Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. ) def	/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate with on-host methods. ) def	/AGMCORE_invalid_color_space (This job contains an invalid color space. ) defendendsystemdict /setpacking known{	setpacking} if%%EndResource%%BeginResource: procset Adobe_CoolType_Core 2.12 0%%Copyright: Copyright 1997-2001 Adobe Systems Incorporated.  All Rights Reserved.%%Version: 2.12 0userdict/Adobe_CoolType_Core 60 dict dup begin put/Level2? systemdict/languagelevel known dup{pop systemdict/languagelevel get 2 ge}if def Level2?not{/currentglobal false def/setglobal/pop load def/gcheck{pop false}bind def/currentpacking false def/setpacking/pop load def/SharedFontDirectory 0 dictdef}if currentpacking true setpacking/@_SaveStackLevels{Adobe_CoolType_Databegin @opStackCountByLevel @opStackLevel 2 copy known not{2 copy 3 dict dup/args 7 index 5 add array put put get}{get dup/args get dup length 3 index lt{dup length 5 add array exch 1 index exch 0 exch putinterval 1 index exch/argsexch put}{pop}ifelse}ifelse begin count 2 sub 1 index lt{pop count 1 sub}ifdup/argCount exch def dup 0 gt{exch 1 index 2 add 1 roll args exch 0 exchgetinterval astore pop}{pop}ifelse count 1 sub/restCount exch def end/@opStackLevel @opStackLevel 1 add def countdictstack 1 sub@dictStackCountByLevel exch @dictStackLevel exch put/@dictStackLevel@dictStackLevel 1 add def end}bind def/@_RestoreStackLevels{Adobe_CoolType_Data begin/@opStackLevel @opStackLevel 1 sub def@opStackCountByLevel @opStackLevel get begin count restCount sub dup 0 gt{{pop}repeat}{pop}ifelse args 0 argCount getinterval{}forall end/@dictStackLevel@dictStackLevel 1 sub def @dictStackCountByLevel @dictStackLevel get endcountdictstack exch sub dup 0 gt{{end}repeat}{pop}ifelse}bind def/@_PopStackLevels{Adobe_CoolType_Data begin/@opStackLevel @opStackLevel 1 subdef/@dictStackLevel @dictStackLevel 1 sub def end}bind def/@Raise{exch cvxexch errordict exch get exec stop}bind def/@ReRaise{cvx $error/errorname geterrordict exch get exec stop}bind def/@Stopped{0 @#Stopped}bind def/@#Stopped{@_SaveStackLevels stopped{@_RestoreStackLevels true}{@_PopStackLevels false}ifelse}bind def/@Arg{Adobe_CoolType_Data begin @opStackCountByLevel@opStackLevel 1 sub get/args get exch get end}bind def/doc_setup{Adobe_CoolType_Core begin/mov/moveto load def/nfnt/newencodedfont load def/mfnt/makefont load def/sfnt/setfont load def/ufnt/undefinefont load def/chp/charpath load def/awsh/awidthshow load def/wsh/widthshow load def/ash/ashowload def/sh/show load def end userdict/Adobe_CoolType_Data 6 dict dup begin/AddWidths? false def/CC 0 def/charcode 2 string def/@opStackCountByLevel 32dict def/@opStackLevel 0 def/@dictStackCountByLevel 32 dict def/@dictStackLevel 0 def end put}bind def/doc_trailer{currentdictAdobe_CoolType_Core eq{end}if}bind def/page_setup{Adobe_CoolType_Core begin}bind def/page_trailer{end}bind def/unload{systemdict/languagelevel known{systemdict/languagelevel get 2 ge{userdict/Adobe_CoolType_Core 2 copy known{undef}{pop pop}ifelse}if}if}bind def/ndf{1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse}def/findfont dup systemdict begin userdict begin/globaldict where{/globaldict get begin}if dup where pop exch get/globaldictwhere{pop end}if end end def/systemfindfont/findfont load def/undefinefont{pop}ndf/copyfont{currentglobal 3 1 roll 1 index gcheck setglobal dup null eq{0}{dup length}ifelse 2 index length add 1 add dict begin exch{1 index/FID eq{poppop}{def}ifelse}forall dup null eq{pop}{{def}forall}ifelse currentdict endexch setglobal}bind def/copyarray{currentglobal exch dup gcheck setglobal duplength array copy exch setglobal}bind def/newencodedfont{currentglobal{SharedFontDirectory 3 index known{SharedFontDirectory 3 index get/FontReferenced known}{false}ifelse}{FontDirectory 3 index known{FontDirectory3 index get/FontReferenced known}{SharedFontDirectory 3 index known{SharedFontDirectory 3 index get/FontReferenced known}{false}ifelse}ifelse}ifelse dup{3 index findfont/FontReferenced get 2 index findfont ne{pop false}if}if{pop 1 index findfont/Encoding get exch 0 1 255{2 copy get 3 index 3 1roll put}for pop pop pop}{findfont dup dup maxlength 2 add dict begin exch{1index/FID ne{def}{pop pop}ifelse}forall/FontReferenced exch def/Encoding exchdup length array copy def/FontName 1 index dup type/stringtype eq{cvn}if defcurrentdict end definefont pop}ifelse}bind def/SetSubstituteStrategy{$SubstituteFont begin dup type/dicttype ne{0 dict}if currentdict/$Strategiesknown{exch $Strategies exch 2 copy known{get 2 copy maxlength exch maxlengthadd dict begin{def}forall{def}forall currentdict dup/$Init known{dup/$Init getexec}if end/$Strategy exch def}{pop pop pop}ifelse}{pop pop}ifelse end}binddef/scff{$SubstituteFont begin dup type/stringtype eq{dup length exch}{null}ifelse/$sname exch def/$slen exch def end{findfont}@Stopped{dup length dup 21add string dup 4 3 roll 0 exch 128 string cvs putinterval exch 1 index exch(_was-malformed-so-was)putinterval cvn{findfont}@Stopped{pop/Courier findfont}if}if $SubstituteFont begin/$sname null def/$slen 0 def end}bind def/isWidthsOnlyFont{dup/WidthsOnly known{pop pop true}{dup/FDepVector known{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}{dup/FDArray known{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}{pop}ifelse}ifelse}ifelse}bind def/?set{$SubstituteFont begin/$substituteFound false def/$fontname 4index def/$doSmartSub false def end 3 index findfont $SubstituteFont begin$substituteFound{false}{dup/FontName known{dup/FontName get $fontname eq 1index/DistillerFauxFont known not and/currentdistillerparams where{pop false 2index isWidthsOnlyFont not and}if}{false}ifelse}ifelse exch pop/$doSmartSubtrue def end{exch pop exch pop exch 2 dict dup/Found 3 index put exch findfontexch}{exch exec exch findfont 2 dict dup/Downloaded 6 5 roll put}ifelse dup/FontName 4 index put copyfont definefont pop}bind def/?str1 256 string def/?str2 256 string def/?add{1 index type/integertype eq{exch true 4 2}{false 31}ifelse roll 1 index findfont dup/Widths known{Adobe_CoolType_Data/AddWidths?true put gsave dup 1000 scalefont setfont}if/Downloaded known{exec exch{exch?str2 cvs exch findfont/Downloaded get 1 dict begin/Downloaded 1 index def?str1 cvs length ?str1 1 index 1 add 3 index putinterval exch length 1 add 1index add ?str1 2 index(*)putinterval ?str1 0 2 index getinterval cvn findfont?str1 3 index(+)putinterval 2 dict dup/FontName ?str1 0 6 index getintervalcvn put dup/Downloaded Downloaded put end copyfont dup/FontName get exchdefinefont pop pop pop}{pop}ifelse}{pop exch{findfont dup/Found get dup lengthexch ?str1 cvs pop ?str1 1 index(+)putinterval ?str1 1 index 1 add 4 index?str2 cvs putinterval ?str1 exch 0 exch 5 4 roll ?str2 cvs length 1 add addgetinterval cvn 1 dict exch 1 index exch/FontName exch put copyfont dup/FontName get exch definefont pop}{pop}ifelse}ifelse Adobe_CoolType_Data/AddWidths? get{grestore Adobe_CoolType_Data/AddWidths? false put}if}bind def/?sh{currentfont/Downloaded known{exch}if pop}bind def/?chp{currentfont/Downloaded known{pop}{false chp}ifelse}bind def/?mv{currentfont/Downloadedknown{moveto pop pop}{pop pop moveto}ifelse}bind def setpacking userdict/$SubstituteFont 25 dict put 1 dict begin/SubstituteFont dup $error exch 2copy known{get}{pop pop{pop/Courier}bind}ifelse def/currentdistillerparamswhere dup{pop pop currentdistillerparams/CannotEmbedFontPolicy 2 copy known{get/Error eq}{pop pop false}ifelse}if not{countdictstack array dictstack 0 getbegin userdict begin $SubstituteFont begin/$str 128 string def/$fontpat 128string def/$slen 0 def/$sname null def/$match false def/$fontname null def/$substituteFound false def/$doSmartSub true def/$depth 0 def/$fontname nulldef/$italicangle 26.5 def/$dstack null def/$Strategies 10 dict dup begin/$Type3Underprint{currentglobal exch false setglobal 11 dict begin/UseFontexch $WMode 0 ne{dup length dict copy dup/WMode $WMode put/UseFont exchdefinefont}if def/FontName $fontname dup type/stringtype eq{cvn}if def/FontType 3 def/FontMatrix[.001 0 0 .001 0 0]def/Encoding 256 array dup 0 1255{/.notdef put dup}for pop def/FontBBox[0 0 0 0]def/CCInfo 7 dict dup begin/cc null def/x 0 def/y 0 def end def/BuildChar{exch begin CCInfo begin 1string dup 0 3 index put exch pop/cc exch def UseFont 1000 scalefont setfontcc stringwidth/y exch def/x exch def x y setcharwidth $SubstituteFont/$Strategy get/$Underprint get exec 0 0 moveto cc show x y moveto end end}binddef currentdict end exch setglobal}bind def/$GetaTint 2 dict dup begin/$BuildFont{dup/WMode known{dup/WMode get}{0}ifelse/$WMode exch def $fontnameexch dup/FontName known{dup/FontName get dup type/stringtype eq{cvn}if}{/unnamedfont}ifelse exch $deepcopyfont exch 1 index exch/FontBasedOn exch putdup/FontName $fontname dup type/stringtype eq{cvn}if put definefont}bind def/$Underprint{gsave x abs y abs gt{/y 1000 def}{/x -1000 def 500 120 translate}ifelse Level2?{[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]setcolorspace}{0setgray}ifelse 10 setlinewidth x .8 mul[7 3]{y mul 8 div 120 sub x 10 div exchmoveto 0 y 4 div neg rlineto dup 0 rlineto 0 y 4 div rlineto closepath gsaveLevel2?{.2 setcolor}{.8 setgray}ifelse fill grestore stroke}forall popgrestore}bind def end def/$Oblique 1 dict dup begin/$BuildFont{currentglobalexch dup gcheck setglobal null copyfont begin/FontBasedOn currentdict/FontNameknown{FontName dup type/stringtype eq{cvn}if}{/unnamedfont}ifelse def/FontName$fontname dup type/stringtype eq{cvn}if def/currentdistillerparams where{pop}{/FontInfo currentdict/FontInfo known{FontInfo null copyfont}{2 dict}ifelse dupbegin/ItalicAngle $italicangle def/FontMatrix FontMatrix[1 0 ItalicAngle dupsin exch cos div 1 0 0]matrix concatmatrix readonly end 4 2 roll def def}ifelse FontName currentdict end definefont exch setglobal}bind def end def/$None 1 dict dup begin/$BuildFont{}bind def end def end def/$ObliqueSetSubstituteStrategy/$findfontByEnum{dup type/stringtype eq{cvn}if dup/$fontname exch def $sname null eq{$str cvs dup length $slen sub $slengetinterval}{pop $sname}ifelse $fontpat dup 0(fonts/*)putinterval exch 7 exchputinterval/$match false def $SubstituteFont/$dstack countdictstack arraydictstack put mark{$fontpat 0 $slen 7 add getinterval{/$match exch def exit}$str filenameforall}stopped{cleardictstack currentdict true $SubstituteFont/$dstack get{exch{1 index eq{pop false}{true}ifelse}{begin false}ifelse}forallpop}if cleartomark/$slen 0 def $match false ne{$match(fonts/)anchorsearch poppop cvn}{/Courier}ifelse}bind def/$ROS 1 dict dup begin/Adobe 4 dict dup begin/Japan1[/Ryumin-Light/HeiseiMin-W3/GothicBBB-Medium/HeiseiKakuGo-W5/HeiseiMaruGo-W4/Jun101-Light]def/Korea1[/HYSMyeongJo-Medium/HYGoThic-Medium]def/GB1[/STSong-Light/STHeiti-Regular]def/CNS1[/MKai-Medium/MHei-Medium]defend def end def/$cmapname null def/$deepcopyfont{dup/FontType get 0 eq{1 dictdup/FontName/copied put copyfont begin/FDepVector FDepVector copyarray 0 1 2index length 1 sub{2 copy get $deepcopyfont dup/FontName/copied put/copiedexch definefont 3 copy put pop pop}for def currentdict end}{$Strategies/$Type3Underprint get exec}ifelse}bind def/$buildfontname{length $str 1 index(-)putinterval 1 add $str 1 index $cmapname $fontpat cvs putinterval $cmapnamelength add $str exch 0 exch getinterval cvn}bind def/$findfontByROS{/$fontnameexch def $ROS Registry 2 copy known{get Ordering 2 copy known{get}{pop pop[]}ifelse}{pop pop[]}ifelse false exch{dup/CIDFont resourcestatus{pop pop save 1index/CIDFont findresource dup/WidthsOnly known{dup/WidthsOnly get}{false}ifelse exch pop exch restore{pop}{exch pop true exit}ifelse}{pop}ifelse}forall{$str cvs $buildfontname}{false(*){save exch dup/CIDFont findresource dup/WidthsOnly known{dup/WidthsOnly get not}{true}ifelse exch/CIDSystemInfo getdup/Registry get Registry eq exch/Ordering get Ordering eq and and{exchrestore exch pop true exit}{pop restore}ifelse}$str/CIDFont resourceforall{$buildfontname}{$fontname $findfontByEnum}ifelse}ifelse}bind def end endcurrentdict/$error known currentdict/languagelevel known and dup{pop $error/SubstituteFont known}if dup{$error}{Adobe_CoolType_Core}ifelse begin{/SubstituteFont/CMap/Category resourcestatus{pop pop{$SubstituteFont begin/$substituteFound true def dup length $slen gt $sname null ne or $slen 0 gtand{$sname null eq{dup $str cvs dup length $slen sub $slen getinterval cvn}{$sname}ifelse dup/CMap resourcestatus{pop pop dup/$cmapname exch def/CMapfindresource/CIDSystemInfo get{def}forall $findfontByROS}{128 string cvs dup(-)search{3 1 roll search{3 1 roll pop{dup cvi}stopped{pop pop pop pop pop$findfontByEnum}{4 2 roll pop pop exch length exch 2 index length 2 index subexch 1 sub -1 0{$str cvs dup length 4 index 0 4 index 4 3 roll add getintervalexch 1 index exch 3 index exch putinterval dup/CMap resourcestatus{pop pop 4 1roll pop pop pop dup/$cmapname exch def/CMap findresource/CIDSystemInfo get{def}forall $findfontByROS true exit}{pop}ifelse}for dup type/booleantype eq{pop}{pop pop $findfontByEnum}ifelse}ifelse}{pop pop pop $findfontByEnum}ifelse}{pop pop $findfontByEnum}ifelse}ifelse}{//SubstituteFont exec}ifelse/$slen 0def end}}{{$SubstituteFont begin/$substituteFound true def dup length $slen gt$sname null ne or $slen 0 gt and{$findfontByEnum}{//SubstituteFont exec}ifelseend}}ifelse bind readonly def Adobe_CoolType_Core/scfindfont/systemfindfontload put}{/scfindfont{$SubstituteFont begin dup systemfindfont dup/FontNameknown{dup/FontName get dup 3 index ne}{/noname true}ifelse dup{/$origfontnamefound 2 index def/$origfontname 4 index def/$substituteFoundtrue def}if exch pop{$slen 0 gt $sname null ne 3 index length $slen gt or and{pop dup $findfontByEnum findfont dup maxlength 1 add dict begin{1 index/FID eq{pop pop}{def}ifelse}forall currentdict end definefont dup/FontName known{dup/FontName get}{null}ifelse $origfontnamefound ne{$origfontname $str cvs print( substitution revised, using )print dup/FontName known{dup/FontName get}{(unspecified font)}ifelse $str cvs print(.)print}if}{exch pop}ifelse}{exch pop}ifelse end}bind def}ifelse end endAdobe_CoolType_Core/findfont{$SubstituteFont begin $depth 0 eq{/$fontname 1index dup type/stringtype ne{$str cvs}if def/$substituteFound false def}if/$depth $depth 1 add def end scfindfont $SubstituteFont begin/$depth $depth 1sub def $substituteFound $depth 0 eq and $doSmartSub and{currentdict/$Strategyknown{$Strategy/$BuildFont get exec}if}if end}bind put}if end end%%EndResource%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.13 0%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated.%%Version: 1.13 0systemdict/languagelevel known dup{currentglobal false setglobal}{false}ifelseexch userdict/Adobe_CoolType_Utility 2 copy known{2 copy get dup maxlength 25add dict copy}{25 dict}ifelse put Adobe_CoolType_Utility begin/ct_Level2? exchdef/ct_Clone? 1183615869 internaldict dup/CCRun known not exch/eCCRun knownnot ct_Level2? and or def/ct_UseNativeCapability? systemdict/composefont knowndef/ct_MakeOCF 35 dict def/ct_Vars 25 dict def/ct_GlyphDirProcs 6 dict def/ct_BuildCharDict 15 dict dup begin/charcode 2 string def/dst_string 1500string def/nullstring()def/usewidths? true def end def ct_Level2?{setglobal}{pop}ifelse ct_GlyphDirProcs begin/GetGlyphDirectory{systemdict/languagelevelknown{pop/CIDFont findresource/GlyphDirectory get}{1 index/CIDFontfindresource/GlyphDirectory get dup type/dicttype eq{dup dup maxlength exchlength sub 2 index lt{dup length 2 index add dict copy 2 index/CIDFontfindresource/GlyphDirectory 2 index put}if}if exch pop exch pop}ifelse +}def/+{systemdict/languagelevel known{currentglobal false setglobal 3 dict begin/vmexch def}{1 dict begin}ifelse/$ exch def systemdict/languagelevel known{vmsetglobal/gvm currentglobal def $ gcheck setglobal}if ?{$ begin}if}def/?{$type/dicttype eq}def/|{userdict/Adobe_CoolType_Data known{Adobe_CoolType_Data/AddWidths? known{currentdict Adobe_CoolType_Data begin begin AddWidths?{Adobe_CoolType_Data/CC 3 index put ?{def}{$ 3 1 roll put}ifelse CC charcodeexch 1 index 0 2 index 256 idiv put 1 index exch 1 exch 256 mod putstringwidth 2 array astore currentfont/Widths get exch CC exch put}{?{def}{$ 31 roll put}ifelse}ifelse end end}{?{def}{$ 3 1 roll put}ifelse}ifelse}{?{def}{$ 3 1 roll put}ifelse}ifelse}def/!{?{end}if systemdict/languagelevel known{gvmsetglobal}if end}def/:{string currentfile exch readstring pop}executeonly defend ct_MakeOCF begin/ct_cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_CID_STR_SIZE 8000 def/ct_mkocfStr100 100 string def/ct_defaultFontMtx[.0010 0 .001 0 0]def/ct_1000Mtx[1000 0 0 1000 0 0]def/ct_raise{exch cvx excherrordict exch get exec stop}bind def/ct_reraise{cvx $error/errorname get(Error: )print dup(                    )cvs print errordict exch get exec stop}bind def/ct_cvnsi{1 index add 1 sub 1 exch 0 4 1 roll{2 index exch get exch 8bitshift add}for exch pop}bind def/ct_GetInterval{Adobe_CoolType_Utility/ct_BuildCharDict get begin/dst_index 0 def dup dst_string length gt{dupstring/dst_string exch def}if 1 index ct_CID_STR_SIZE idiv/arrayIndex exch def2 index arrayIndex get 2 index arrayIndex ct_CID_STR_SIZE mul sub{dup 3 indexadd 2 index length le{2 index getinterval dst_string dst_index 2 indexputinterval length dst_index add/dst_index exch def exit}{1 index length 1index sub dup 4 1 roll getinterval dst_string dst_index 2 index putintervalpop dup dst_index add/dst_index exch def sub/arrayIndex arrayIndex 1 add def 2index dup length arrayIndex gt{arrayIndex get}{pop exit}ifelse 0}ifelse}looppop pop pop dst_string 0 dst_index getinterval end}bind def ct_Level2?{/ct_resourcestatus currentglobal mark true setglobal{/unknowninstancename/Category resourcestatus}stopped{cleartomark setglobal true}{cleartomarkcurrentglobal not exch setglobal}ifelse{{mark 3 1 roll/Category findresourcebegin ct_Vars/vm currentglobal put({ResourceStatus} stopped)0()/SubFileDecodefilter cvx exec{cleartomark false}{{3 2 roll pop true}{cleartomark false}ifelse}ifelse ct_Vars/vm get setglobal end}}{{resourcestatus}}ifelse bind def/CIDFont/Category ct_resourcestatus{pop pop}{currentglobal true setglobal/Generic/Category findresource dup length dict copy dup/InstanceType/dicttypeput/CIDFont exch/Category defineresource pop setglobal}ifelsect_UseNativeCapability?{/CIDInit/ProcSet findresource begin 12 dict beginbegincmap/CIDSystemInfo 3 dict dup begin/Registry(Adobe)def/Ordering(Identity)def/Supplement 0 def end def/CMapName/Identity-H def/CMapVersion 1 def/CMapType 1 def 1 begincodespacerange<0000><ffff>endcodespacerange 1begincidrange<0000><ffff>0 endcidrange endcmap CMapName currentdict/CMapdefineresource pop end end}if}{/ct_Category 2 dict begin/CIDFont 10 dict def/ProcSet 2 dict def currentdict end def/defineresource{ct_Category 1 index 2copy known{get dup dup maxlength exch length eq{dup length 10 add dict copyct_Category 2 index 2 index put}if 3 index 3 index put pop exch pop}{pop pop/defineresource/undefined ct_raise}ifelse}bind def/findresource{ct_Category 1index 2 copy known{get 2 index 2 copy known{get 3 1 roll pop pop}{pop pop/findresource/undefinedresource ct_raise}ifelse}{pop pop/findresource/undefined ct_raise}ifelse}bind def/resourcestatus{ct_Category 1 index 2 copyknown{get 2 index known exch pop exch pop{0 -1 true}{false}ifelse}{pop pop/findresource/undefined ct_raise}ifelse}bind def/ct_resourcestatus/resourcestatus load def}ifelse/ct_CIDInit 2 dict begin/ct_cidfont_stream_init{{dup(Binary)eq{pop null currentfile ct_Level2?{{cid_BYTE_COUNT()/SubFileDecode filter}stopped{pop pop pop}if}if/readstring load exit}if dup(Hex)eq{pop currentfile ct_Level2?{{null exch/ASCIIHexDecode filter/readstring}stopped{pop exch pop(>)exch/readhexstring}if}{(>)exch/readhexstring}ifelseload exit}if/StartData/typecheck ct_raise}loop cid_BYTE_COUNT ct_CID_STR_SIZEle{2 copy cid_BYTE_COUNT string exch exec pop 1 array dup 3 -1 roll 0 exch put}{cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi dup array exch 2 sub 0 exch 1exch{2 copy 5 index ct_CID_STR_SIZE string 6 index exec pop put pop}for 2index cid_BYTE_COUNT ct_CID_STR_SIZE mod string 3 index exec pop 1 index exch1 index length 1 sub exch put}ifelse cid_CIDFONT exch/GlyphData exch put 2index null eq{pop pop pop}{pop/readstring load 1 string exch{3 copy exec popdup length 0 eq{pop pop pop pop pop true exit}if 4 index eq{pop pop pop popfalse exit}if}loop pop}ifelse}bind def/StartData{mark{currentdict dup/FDArrayget 0 get/FontMatrix get 0 get .001 eq{dup/CDevProc known not{/CDevProc1183615869 internaldict/stdCDevProc 2 copy known{get}{pop pop{pop pop pop poppop 0 -1000 7 index 2 div 880}}ifelse def}if}{/CDevProc{pop pop pop pop pop 01 cid_temp/cid_CIDFONT get/FDArray get 0 get/FontMatrix get 0 get div 7 index2 div 1 index .88 mul}def}ifelse/cid_temp 15 dict def cid_temp begin/cid_CIDFONT exch def 3 copy pop dup/cid_BYTE_COUNT exch def 0 gt{ct_cidfont_stream_init FDArray{/Private get dup/SubrMapOffset known{begin/Subrs SubrCount array def Subrs SubrMapOffset SubrCount SDBytes ct_Level2?{currentdict dup/SubrMapOffset undef dup/SubrCount undef/SDBytes undef}if end/cid_SD_BYTES exch def/cid_SUBR_COUNT exch def/cid_SUBR_MAP_OFFSET exch def/cid_SUBRS exch def cid_SUBR_COUNT 0 gt{GlyphData cid_SUBR_MAP_OFFSETcid_SD_BYTES ct_GetInterval 0 cid_SD_BYTES ct_cvnsi 0 1 cid_SUBR_COUNT 1 sub{exch 1 index 1 add cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add GlyphData exchcid_SD_BYTES ct_GetInterval 0 cid_SD_BYTES ct_cvnsi cid_SUBRS 4 2 rollGlyphData exch 4 index 1 index sub ct_GetInterval dup length string copy put}for pop}if}{pop}ifelse}forall}if cleartomark pop pop end CIDFontNamecurrentdict/CIDFont defineresource pop end end}stopped{cleartomark/StartDatact_reraise}if}bind def currentdict end def/ct_saveCIDInit{/CIDInit/ProcSetct_resourcestatus{true}{/CIDInitC/ProcSet ct_resourcestatus}ifelse{pop pop/CIDInit/ProcSet findresource ct_UseNativeCapability?{pop null}{/CIDInitct_CIDInit/ProcSet defineresource pop}ifelse}{/CIDInit ct_CIDInit/ProcSetdefineresource pop null}ifelse ct_Vars exch/ct_oldCIDInit exch put}bind def/ct_restoreCIDInit{ct_Vars/ct_oldCIDInit get dup null ne{/CIDInit exch/ProcSetdefineresource pop}{pop}ifelse}bind def/ct_BuildCharSetUp{1 index beginCIDFont begin Adobe_CoolType_Utility/ct_BuildCharDict get begin/ct_dfCharCodeexch def/ct_dfDict exch def CIDFirstByte ct_dfCharCode add dup CIDCount ge{pop0}if/cid exch def{GlyphDirectory cid 2 copy known{get}{pop pop nullstring}ifelse dup length FDBytes sub 0 gt{dup FDBytes 0 ne{0 FDBytes ct_cvnsi}{pop 0}ifelse/fdIndex exch def dup length FDBytes sub FDBytes exch getinterval/charstring exch def exit}{pop cid 0 eq{/charstring nullstring def exit}if/cid0 def}ifelse}loop}def/ct_SetCacheDevice{0 0 moveto dup stringwidth 3 -1 rolltrue charpath pathbbox 0 -1000 7 index 2 div 880 setcachedevice2 0 0 moveto}def/ct_CloneSetCacheProc{1 eq{stringwidth pop -2 div -880 0 -1000 setcharwidthmoveto}{usewidths?{currentfont/Widths get cid 2 copy known{get exch pop aloadpop}{pop pop stringwidth}ifelse}{stringwidth}ifelse setcharwidth 0 0 moveto}ifelse}def/ct_Type3ShowCharString{ct_FDDict fdIndex 2 copy known{get}{currentglobal 3 1 roll 1 index gcheck setglobal ct_Type1FontTemplate dupmaxlength dict copy begin FDArray fdIndex get dup/FontMatrix 2 copy known{get}{pop pop ct_defaultFontMtx}ifelse/FontMatrix exch dup length array copy def/Private get/Private exch def/Widths rootfont/Widths get def/CharStrings 1dict dup/.notdef<d841272cf18f54fc13>dup length string copy put def currentdictend/ct_Type1Font exch definefont dup 5 1 roll put setglobal}ifelse dup/CharStrings get 1 index/Encoding get ct_dfCharCode get charstring putrootfont/WMode 2 copy known{get}{pop pop 0}ifelse exch 1000 scalefont setfontct_str1 0 ct_dfCharCode put ct_str1 exch ct_dfSetCacheProc ct_SyntheticBold{currentpoint ct_str1 show newpath moveto ct_str1 true charpath ct_StrokeWidthsetlinewidth stroke}{ct_str1 show}ifelse}def/ct_Type4ShowCharString{ct_dfDictct_dfCharCode charstring FDArray fdIndex get dup/FontMatrix get dupct_defaultFontMtx ct_matrixeq not{ct_1000Mtx matrix concatmatrix concat}{pop}ifelse/Private get Adobe_CoolType_Utility/ct_Level2? get not{ct_dfDict/Private3 -1 roll{put}1183615869 internaldict/superexec get exec}if 1183615869internaldict Adobe_CoolType_Utility/ct_Level2? get{1 index}{3 index/Privateget mark 6 1 roll}ifelse dup/RunInt known{/RunInt get}{pop/CCRun}ifelse getexec Adobe_CoolType_Utility/ct_Level2? get not{cleartomark}if}bind def/ct_BuildCharIncremental{{Adobe_CoolType_Utility/ct_MakeOCF get beginct_BuildCharSetUp ct_ShowCharString}stopped{stop}if end end end end}bind def/BaseFontNameStr(BF00)def/ct_Type1FontTemplate 14 dict begin/FontType 1 def/FontMatrix[.001 0 0 .001 0 0]def/FontBBox[-250 -250 1250 1250]def/Encodingct_cHexEncoding def/PaintType 0 def currentdict end def/BaseFontTemplate 11dict begin/FontMatrix[.001 0 0 .001 0 0]def/FontBBox[-250 -250 1250 1250]def/Encoding ct_cHexEncoding def/BuildChar/ct_BuildCharIncremental load defct_Clone?{/FontType 3 def/ct_ShowCharString/ct_Type3ShowCharString load def/ct_dfSetCacheProc/ct_CloneSetCacheProc load def/ct_SyntheticBold false def/ct_StrokeWidth 1 def}{/FontType 4 def/Private 1 dict dup/lenIV 4 put def/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def/PaintType 0 def/ct_ShowCharString/ct_Type4ShowCharString load def}ifelse/ct_str1 1 string defcurrentdict end def/BaseFontDictSize BaseFontTemplate length 5 add def/ct_matrixeq{true 0 1 5{dup 4 index exch get exch 3 index exch get eq and dupnot{exit}if}for exch pop exch pop}bind def/ct_makeocf{15 dict begin exch/WModeexch def exch/FontName exch def/FontType 0 def/FMapType 2 def/FontMatrixmatrix def/bfCount 1 index/CIDCount get 256 idiv 1 add dup 256 gt{pop 256}ifdef/Encoding 256 array 0 1 bfCount 1 sub{2 copy dup put pop}for bfCount 1 255{2 copy bfCount put pop}for def/FDepVector bfCount dup 256 lt{1 add}if arraydef BaseFontTemplate BaseFontDictSize dict copy begin/CIDFont exch def CIDFont/FontBBox known{CIDFont/FontBBox get/FontBBox exch def}if CIDFont/CDevProcknown{CIDFont/CDevProc get/CDevProc exch def}if currentdict endBaseFontNameStr 3(0)putinterval 0 1 bfCount dup 256 eq{1 sub}if{FDepVectorexch 2 index BaseFontDictSize dict copy begin dup/CIDFirstByte exch 256 muldef FontType 3 eq{/ct_FDDict 2 dict def}if currentdict end 1 index 16BaseFontNameStr 2 2 getinterval cvrs pop BaseFontNameStr exch definefont put}for ct_Clone?{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}if FontName currentdict end definefont ct_Clone?{gsave dup 1000 scalefontsetfont ct_BuildCharDict begin/usewidths? false def currentfont/Widths getbegin exch/CIDFont get/GlyphDirectory get{pop dup charcode exch 1 index 0 2index 256 idiv put 1 index exch 1 exch 256 mod put stringwidth 2 array astoredef}forall end/usewidths? true def end grestore}{exch pop}ifelse}bind def/ct_ComposeFont{ct_UseNativeCapability?{2 index/CMap ct_resourcestatus{pop popexch pop}{/CIDInit/ProcSet findresource begin 12 dict begin begincmap/CMapName3 index def/CMapVersion 1 def/CMapType 1 def exch/WMode exch def/CIDSystemInfo3 dict dup begin/Registry(Adobe)def/Ordering CMapName ct_mkocfStr100 cvs(Adobe-)search{pop pop(-)search{dup length string copy exch pop exch pop}{pop(Identity)}ifelse}{pop(Identity)}ifelse def/Supplement 0 def end def 1begincodespacerange<0000><ffff>endcodespacerange 1 begincidrange<0000><ffff>0endcidrange endcmap CMapName currentdict/CMap defineresource pop end end}ifelse composefont}{3 2 roll pop 0 get/CIDFont findresource ct_makeocf}ifelse}bind def/ct_MakeIdentity{ct_UseNativeCapability?{1 index/CMapct_resourcestatus{pop pop}{/CIDInit/ProcSet findresource begin 12 dict beginbegincmap/CMapName 2 index def/CMapVersion 1 def/CMapType 1 def/CIDSystemInfo3 dict dup begin/Registry(Adobe)def/Ordering CMapName ct_mkocfStr100 cvs(Adobe-)search{pop pop(-)search{dup length string copy exch pop exch pop}{pop(Identity)}ifelse}{pop(Identity)}ifelse def/Supplement 0 def end def 1begincodespacerange<0000><ffff>endcodespacerange 1 begincidrange<0000><ffff>0endcidrange endcmap CMapName currentdict/CMap defineresource pop end end}ifelse composefont}{exch pop 0 get/CIDFont findresource ct_makeocf}ifelse}binddef currentdict readonly pop end end%%EndResourceAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0%%Version: 1.0 0%%Copyright: Copyright (C) 2000-2000 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Image 65 dict dup begin put/Adobe_AGM_Image_Id /Adobe_AGM_Image_1.0_0 def/nd{	null def}bind def/AGMIMG_&image nd/AGMIMG_&colorimage nd%%don't initialize AGMIMG_&customcolorimage, it wrecks havoc in a nested environment%%AGMIMG_ccimage_exists not {/AGMIMG_&customcolorimage nd} if /AGMIMG_&imagemask nd/AGMIMG_mbuf () def/AGMIMG_ybuf () def/AGMIMG_kbuf () def/AGMIMG_c 0 def/AGMIMG_m 0 def/AGMIMG_y 0 def/AGMIMG_k 0 def/AGMIMG_tmp nd/AGMIMG_imagestring0 nd/AGMIMG_imagestring1 nd/AGMIMG_imagestring2 nd/AGMIMG_imagestring3 nd/AGMIMG_imagestring4 nd/AGMIMG_imagestring5 nd/AGMIMG_cnt nd/AGMIMG_fsave nd/AGMIMG_colorAry nd/AGMIMG_override nd/AGMIMG_name nd/invert_image_samples nd/knockout_image_samples	nd/img nd/sepimg nd/idximg nd/doc_setup{ 	Adobe_AGM_Core begin	Adobe_AGM_Image begin	/AGMIMG_&image systemdict/image get def	/AGMIMG_&imagemask systemdict/imagemask get def	/colorimage where{		pop		/AGMIMG_&colorimage /colorimage ldf	}if	end	end}def/page_setup{	Adobe_AGM_Image begin	/AGMIMG_ccimage_exists {/customcolorimage where 		{			pop			/Adobe_AGM_OnHost_Seps where			{			pop false			}{			/Adobe_AGM_InRip_Seps where				{				pop false				}{					true				 }ifelse			 }ifelse			}{			false		}ifelse 	}bdf	level2{		/invert_image_samples		{			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf			/Decode [ Decode 1 get Decode 0 get] def		}def		/knockout_image_samples		{			Operator/imagemask ne{				/Decode [1 1] def			}if		}def	}{			/invert_image_samples		{			{1 exch sub} currenttransfer addprocs settransfer		}def		/knockout_image_samples		{			{ pop 1 } currenttransfer addprocs settransfer		}def	}ifelse	/img /imageormask ldf	/sepimg /sep_imageormask ldf	/idximg /indexed_imageormask ldf	currentdict{		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and{			bind		}if		def	}forall}def/page_trailer{	end}def/doc_trailer{}def/imageormask_sys{	begin		save mark		level2{			currentdict			Operator /imagemask eq{				AGMIMG_&imagemask			}{				AGMIMG_&image			}ifelse		}{			Width Height			Operator /imagemask eq{				Decode 0 get 1 eq Decode 1 get 0 eq	and				ImageMatrix /DataSource load				AGMIMG_&imagemask			}{				BitsPerComponent ImageMatrix /DataSource load				AGMIMG_&image			}ifelse		}ifelse		cleartomark restore	end}def/overprint_plate{	currentoverprint{		0 get		dup /DeviceGray eq{			pop AGMCORE_black_plate not		}{			/DeviceCMYK eq{				AGMCORE_is_cmyk_sep not			}if		}ifelse	}{		false	}ifelse}def/imageormask{	begin		SkipImageProc not{			save mark			level2 AGMCORE_host_sep not and{				currentdict				Operator /imagemask eq{					imagemask				}{					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{						[/Separation /Black /DeviceGray {}] setcolorspace						/Decode [ Decode 1 get Decode 0 get ] def					}if					image				}ifelse			}{				Width Height				Operator /imagemask eq{					Decode 0 get 1 eq Decode 1 get 0 eq	and					ImageMatrix /DataSource load					AGMCORE_host_sep{						currentgray 1 ne{							currentdict imageormask_sys						}{  	 						currentoverprint not{  			 					1 AGMCORE_&setgray  	 							knockout_image_samples  			 					currentdict imageormask_sys  			 				}{  			 					currentdict ignoreimagedata  			 				}ifelse				 		}ifelse					}{						imagemask					}ifelse				}{					BitsPerComponent ImageMatrix 					MultipleDataSources{						0 1 NComponents 1 sub{							DataSource exch get						}for					}{						/DataSource load					}ifelse					Operator /colorimage eq{						AGMCORE_host_sep{							MultipleDataSources level2 or NComponents 4 eq and{								MultipleDataSources{									4 {pop} repeat									/DataSource [										DataSource 0 get /exec cvx										DataSource 1 get /exec cvx										DataSource 2 get /exec cvx										DataSource 3 get /exec cvx										/AGMCORE_get_ink_data cvx									] cvx def								}{									/DataSource /DataSource load filter_cmyk 0 () /SubFileDecode filter def								}ifelse									/Decode [ Decode 0 get Decode 1 get ] def								/MultipleDataSources false def								/NComponents 1 def								/Operator /image def								AGMCORE_is_cmyk_sep{									currentoverprint InksUsed current_ink not and{										currentdict consumeimagedata									}{										invert_image_samples						 				1 AGMCORE_&setgray										currentdict imageormask_sys									}ifelse								}{										currentdict ignoreimagedata								}ifelse							}{																	MultipleDataSources NComponents AGMIMG_&colorimage													}ifelse						}{							true NComponents colorimage						}ifelse					}{						Operator /image eq{							AGMCORE_host_sep{								/DoImage true def								HostSepColorImage{									invert_image_samples								}{									AGMCORE_black_plate not{										/DoImage false def										currentdict ignoreimagedata					 				}if								}ifelse						 		1 AGMCORE_&setgray								DoImage									{currentdict imageormask_sys} if							}{								image							}ifelse						}{							Operator/knockout eq{								pop pop pop pop pop								currentoverprint InksUsed current_ink not and{								}{									currentcolorspace overprint_plate not{										knockout_unitsq									}if								}ifelse							}if						}ifelse					}ifelse				}ifelse			}ifelse			cleartomark restore		}if	end}def/sep_imageormask{ 	/sep_colorspace_dict AGMCORE_gget begin	/MappedCSA CSA map_csa def	begin	SkipImageProc not{		save mark 			AGMCORE_avoid_L2_sep_space{			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def		}if 		AGMIMG_ccimage_exists 		MappedCSA 0 get /DeviceCMYK eq and		currentdict/Components known and 		Name () ne and 		Name (All) ne and 		Operator /image eq and		AGMCORE_producing_seps not and		level2 not and		{			Width Height BitsPerComponent ImageMatrix 			[			/DataSource load /exec cvx			{				0 1 2 index length 1 sub{					1 index exch					2 copy get 255 xor put				}for			} /exec cvx			] cvx bind			MappedCSA 0 get /DeviceCMYK eq{				Components aload pop			}{				0 0 0 Components aload pop 1 exch sub			}ifelse			Name findcmykcustomcolor			customcolorimage		}{			AGMCORE_producing_seps not{				level2{					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt						/sep_tint AGMCORE_gget setcolor					}if					currentdict imageormask				}{ 					currentdict					Operator /imagemask eq{						imageormask					}{						sep_imageormask_lev1					}ifelse				}ifelse 			}{				AGMCORE_host_sep{					Operator/knockout eq{						currentoverprint InksUsed current_ink not and{						}{							currentdict/ImageMatrix get concat							knockout_unitsq						}ifelse					}{						currentgray 1 ne{ 							AGMCORE_is_cmyk_sep Name (All) ne and{ 								level2{	 								[ /Separation Name [/DeviceGray]	 								{ 	 									sep_colorspace_proc AGMCORE_get_ink_data										1 exch sub	 								} bind									] AGMCORE_&setcolorspace									/sep_tint AGMCORE_gget AGMCORE_&setcolor 									currentdict imageormask_sys	 							}{	 								currentdict									Operator /imagemask eq{										imageormask_sys									}{										sep_image_lev1_sep									}ifelse	 							}ifelse 							}{ 								Operator/imagemask ne{									invert_image_samples 								}if		 						currentdict imageormask_sys 							}ifelse 						}{							currentdict consumeimagedata  							currentoverprint not Name (All) eq or{								gsave 								knockout_unitsq								grestore		 					}if 						}ifelse		 			}ifelse 				}{					currentcolorspace 0 get /Separation ne{						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt						/sep_tint AGMCORE_gget setcolor					}if					currentoverprint 					MappedCSA 0 get /DeviceCMYK eq and 					Name inRip_spot_has_ink not and 					Name (All) ne and {						imageormask_l2_overprint					}{						currentdict imageormask 					}ifelse				}ifelse			}ifelse		}ifelse		cleartomark restore	}if	end	end}def/imageormask_l2_overprint{		currentdict	currentcmykcolor add add add 0 eq{		currentdict consumeimagedata	}{		level3{ 									currentcmykcolor 			/AGMIMG_k xdf 			/AGMIMG_y xdf 			/AGMIMG_m xdf 			/AGMIMG_c xdf			Operator/imagemask eq{				[/DeviceN [				AGMIMG_c 0 ne {/Cyan} if				AGMIMG_m 0 ne {/Magenta} if				AGMIMG_y 0 ne {/Yellow} if				AGMIMG_k 0 ne {/Black} if				] /DeviceCMYK {}] setcolorspace								AGMIMG_c 0 ne {AGMIMG_c} if				AGMIMG_m 0 ne {AGMIMG_m} if				AGMIMG_y 0 ne {AGMIMG_y} if				AGMIMG_k 0 ne {AGMIMG_k} if				setcolor						}{					/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def				[/Indexed 									[						/DeviceN [							AGMIMG_c 0 ne {/Cyan} if							AGMIMG_m 0 ne {/Magenta} if							AGMIMG_y 0 ne {/Yellow} if							AGMIMG_k 0 ne {/Black} if						] 						/DeviceCMYK {							AGMIMG_k 0 eq {0} if							AGMIMG_y 0 eq {0 exch} if							AGMIMG_m 0 eq {0 3 1 roll} if							AGMIMG_c 0 eq {0 4 1 roll} if												}					]					255					{						255 div 								mark exch						dup	dup dup														AGMIMG_k 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse													AGMIMG_y 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse								AGMIMG_m 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse													AGMIMG_c 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop									counttomark 1 roll						}{							pop						}ifelse						counttomark 1 add -1 roll pop					}				] setcolorspace			}ifelse						imageormask_sys		}{	write_image_file{		currentcmykcolor		0 ne{			[/Separation /Black /DeviceGray {}] setcolorspace			gsave			/Black			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Yellow /DeviceGray {}] setcolorspace			gsave			/Yellow			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Magenta /DeviceGray {}] setcolorspace			gsave			/Magenta			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Cyan /DeviceGray {}] setcolorspace			gsave			/Cyan 			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		} if				close_image_file			}{				imageormask			}ifelse		}ifelse	}ifelse} def/indexed_imageormask{	begin		save mark 	 		currentdict 		AGMCORE_host_sep{ 						Operator/knockout eq{				/indexed_colorspace_dict AGMCORE_gget /CSA get map_csa overprint_plate not{					knockout_unitsq				}if			}{	 			AGMCORE_is_cmyk_sep{					Operator /imagemask eq{						imageormask_sys					}{						level2{							indexed_image_lev2_sep						}{							indexed_image_lev1_sep						}ifelse					}ifelse				}{					currentoverprint not{						knockout_image_samples		 				imageormask_sys		 			}{		 				currentdict consumeimagedata		 			}ifelse				}ifelse			}ifelse 		}{			level2{				imageormask			}{ 				Operator /imagemask eq{					imageormask				}{					indexed_imageormask_lev1				}ifelse			}ifelse 		}ifelse		cleartomark restore	end}def/indexed_image_lev2_sep{	/indexed_colorspace_dict AGMCORE_gget begin	begin				currentcolorspace 		dup 1 /DeviceGray put		dup 3 [			currentcolorspace 3 get 			{				exch 4 mul 4 getinterval {} forall				AGMCORE_get_ink_data 255 div 1 exch sub			} /exec cvx		] cvx put		setcolorspace				currentdict 		Operator /imagemask eq{			AGMIMG_&imagemask		}{			AGMIMG_&image		}ifelse				end end}def/OPIimage{	dup type /dicttype ne{		10 dict begin			/DataSource xdf			/ImageMatrix xdf			/BitsPerComponent xdf			/Height xdf			/Width xdf			/ImageType 1 def			/Decode [0 1 def]			currentdict		end	}if	dup begin		/NComponents 1 cdndf		/MultipleDataSources false cdndf		/SkipImageProc {false} cdndf		/HostSepColorImage false cdndf		/Decode [				0 				currentcolorspace 0 get /Indexed eq{					2 BitsPerComponent exp 1 sub				}{					1				}ifelse		] cdndf		/Operator /image cdndf	end	/sep_colorspace_dict AGMCORE_gget null eq{		imageormask	}{		gsave		dup begin invert_image_samples end		sep_imageormask		grestore	}ifelse}def/spot_alias{	/mapto_sep_imageormask 	{		dup type /dicttype ne{			12 dict begin				/ImageType 1 def				/DataSource xdf				/ImageMatrix xdf				/BitsPerComponent xdf				/Height xdf				/Width xdf				/MultipleDataSources false def		}{			begin		}ifelse				/Decode [/customcolor_tint AGMCORE_gget 0] def				/Operator /image def				/HostSepColorImage false def				/InksUsed [] def				/SkipImageProc {false} def				currentdict 			end		sep_imageormask	}bdf	/customcolorimage	{		Adobe_AGM_Image/AGMIMG_colorAry xddf		/customcolor_tint AGMCORE_gget		bdict			/Name AGMIMG_colorAry 4 get			/CSA [ /DeviceCMYK ] 			/TintMethod /Subtractive			/TintProc null			/MappedCSA null			/NComponents 4 			/Components [ AGMIMG_colorAry aload pop pop ] 		edict		setsepcolorspace		mapto_sep_imageormask	}ndf	Adobe_AGM_Image/AGMIMG_&customcolorimage /customcolorimage load put	/customcolorimage	{		Adobe_AGM_Image/AGMIMG_override false put		dup 4 get map_alias{			/customcolor_tint AGMCORE_gget exch setsepcolorspace			pop			mapto_sep_imageormask		}{			AGMIMG_&customcolorimage		}ifelse				}bdf}deflevel2 not{	/colorbuf	{		0 1 2 index length 1 sub{			dup 2 index exch get 			255 exch sub 			2 index 			3 1 roll 			put		}for	}def	/tint_image_to_color	{		begin			Width Height BitsPerComponent ImageMatrix 			/DataSource load		end		Adobe_AGM_Image begin			/AGMIMG_mbuf 0 string def			/AGMIMG_ybuf 0 string def			/AGMIMG_kbuf 0 string def			{				colorbuf dup length AGMIMG_mbuf length ne					{					dup length dup dup					/AGMIMG_mbuf exch string def					/AGMIMG_ybuf exch string def					/AGMIMG_kbuf exch string def					} if				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop			}			addprocs			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf} true 4 colorimage			end	} def				/sep_imageormask_lev1	{		begin			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{								{					255 mul round cvi GrayLookup exch get				} currenttransfer addprocs settransfer				currentdict imageormask			}{				/sep_colorspace_dict AGMCORE_gget/Components known{					MappedCSA 0 get /DeviceCMYK eq{						Components aload pop					}{						0 0 0 Components aload pop 1 exch sub					}ifelse										Adobe_AGM_Image/AGMIMG_k xddf 					Adobe_AGM_Image/AGMIMG_y xddf 					Adobe_AGM_Image/AGMIMG_m xddf 					Adobe_AGM_Image/AGMIMG_c xddf 											AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{						{AGMIMG_k mul 1 exch sub} currenttransfer addprocs settransfer						currentdict imageormask					}{ 												currentcolortransfer						{AGMIMG_k mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_y mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_m mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_c mul 1 exch sub} exch addprocs 4 1 roll						setcolortransfer						currentdict tint_image_to_color					}ifelse				}{										MappedCSA 0 get /DeviceGray eq {						{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer						currentdict imageormask					}{						MappedCSA 0 get /DeviceCMYK eq {							currentcolortransfer							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll							setcolortransfer 							currentdict tint_image_to_color						}{ 							currentcolortransfer							{pop 1} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll							setcolortransfer 							currentdict tint_image_to_color						}ifelse					}ifelse				}ifelse			}ifelse		end	}def	/sep_image_lev1_sep	{		begin			/sep_colorspace_dict AGMCORE_gget/Components known{				Components aload pop								Adobe_AGM_Image/AGMIMG_k xddf 				Adobe_AGM_Image/AGMIMG_y xddf 				Adobe_AGM_Image/AGMIMG_m xddf 				Adobe_AGM_Image/AGMIMG_c xddf 									{AGMIMG_c mul 1 exch sub}				{AGMIMG_m mul 1 exch sub}				{AGMIMG_y mul 1 exch sub}				{AGMIMG_k mul 1 exch sub}			}{ 				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}			}ifelse						AGMCORE_get_ink_data currenttransfer addprocs settransfer						currentdict imageormask_sys						end	}def	/indexed_imageormask_lev1	{		/indexed_colorspace_dict AGMCORE_gget begin		begin			currentdict			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{								{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer				imageormask			}{								MappedCSA 0 get /DeviceGray eq {					{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer					imageormask				}{					MappedCSA 0 get /DeviceCMYK eq {						currentcolortransfer						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi       Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						setcolortransfer 						tint_image_to_color					}{ 						currentcolortransfer						{pop 1} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 	   Lookup exch get HiVal div} exch addprocs 4 1 roll						setcolortransfer 						tint_image_to_color					}ifelse				}ifelse			}ifelse		end end	}def	/indexed_image_lev1_sep	{		/indexed_colorspace_dict AGMCORE_gget begin		begin			{4 mul HiVal mul round cvi       Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}						AGMCORE_get_ink_data currenttransfer addprocs settransfer						currentdict imageormask_sys						end end	}def}ifendsystemdict /setpacking known{	setpacking} if%%EndResource%ADOBeginClientInjection: DocumentProlog End "AI10"%ADOEndClientInjection: DocumentProlog End "AI10"currentdict Adobe_AGM_Utils eq {end} if%%EndProlog%%BeginSetup%ADOBeginClientInjection: DocumentSetup Start "AI10"%ADOEndClientInjection: DocumentSetup Start "AI10"Adobe_AGM_Utils begin2 2010 true Adobe_AGM_Core/doc_setup get execAdobe_CoolType_Core/doc_setup get execAdobe_AGM_Image/doc_setup get exec%ADOBeginClientInjection: DocumentSetup End "AI10"%ADOEndClientInjection: DocumentSetup End "AI10"currentdict Adobe_AGM_Utils eq {end} if%%EndSetup%%Page: (Integrated logo.eps) 1%%EndPageComments%%BeginPageSetup%ADOBeginClientInjection: PageSetup Start "AI10"%ADOEndClientInjection: PageSetup Start "AI10"Adobe_AGM_Utils beginAdobe_AGM_Core/page_setup get execAdobe_CoolType_Core/page_setup get execAdobe_AGM_Image/page_setup get exec%ADOBeginClientInjection: PageSetup End "AI10"%ADOEndClientInjection: PageSetup End "AI10"%%EndPageSetupAdobe_AGM_Core/AGMCORE_save save ddf1 -1 scale 0 -379.312 translate[1 0 0 1 0 0 ]  concatmark/0 [/DeviceGray] add_csa/CSA /0 /1 [/DeviceCMYK] add_csa/CSA /1 /2 [/DeviceRGB] add_csa/CSA /2 cleartomark800 path_rez% page clipgsavenewpathgsave % PSGState0 0 mo0 379.312 li540.561 379.312 li540.561 0 liclp[1 0 0 1 0 0 ] concat%ADOBeginClientInjection: BeginPageContent "AI10"%ADOEndClientInjection: BeginPageContent "AI10"gsave % PSGState0 0 mo541 0 li541 379 li0 379 li0 0 liclp464.3 43.2183 mo464.241 40.5699 462.307 38.0757 459.625 37.1207 cv455.852 35.8433 450.949 35.9419 447.792 38.5777 cv444.131 41.6031 443.491 45.9449 443.546 50.4927 cv443.499 82.4087 li427.679 82.4878 li427.691 22.9625 li443.951 22.94 li443.977 29.5972 li449.316 22.9058 457.158 20.9664 465.724 22.6441 cv469.496 24.1207 473.669 25.4078 476.396 29.065 cv477.656 30.9908 479.616 33.0318 479.064 35.4214 cv471.826 46.9742 472.653 65.0953 480.929 75.9683 cv481 82.3951 li464.179 82.5035 li464.3 43.2183 lifalse sop0 0 0 1 cmykf405.116 76.4449 mo400.506 81.6519 393.719 85.3746 386.628 84.8277 cv379.033 84.5718 371.12 80.3082 368.673 72.7554 cv365.241 57.3199 367.482 22.9371 367.482 22.9371 cv383.583 22.9869 li383.58 61.4585 li384.303 65.1753 386.05 69.1128 390.029 70.2945 cv393.418 70.8648 397.22 70.7437 399.961 68.8003 cv405.345 64.7105 404.586 57.8921 405.117 51.6021 cv405.113 22.9273 li421.116 22.9996 li421.058 82.4312 li405.168 82.4058 li405.116 76.4449 li0 0 0 1 cmykf194.27 35.7574 mo187.779 35.2222 181.666 37.1988 178.444 43.1343 cv174.615 52.8199 177.24 61.8199 176.363 82.2388 cv159.838 82.2027 li159.853 23.0464 li176.306 23.0835 li176.305 30.3882 li179.539 23.9527 186.719 20.0992 194.181 22.0542 cv194.27 35.7574 li0 0 0 1 cmykf535.245 36.9781 mo538.611 43.5484 540.355 51.0855 540.298 58.6861 cv497.245 58.732 li496.991 60.8199 497.491 62.4449 497.974 64.316 cv499.587 68.5503 503.91 72.3394 508.298 72.9292 cv513.59 73.439 519.208 72.5542 522.113 67.5132 cv522.491 66.3199 522.366 66.4449 522.491 65.6949 cv539.491 65.6949 li539.058 71.9869 533.492 78.3492 528.326 81.5445 cv519.711 87.0679 505.693 87.7798 496.593 82.7925 cv485.609 77.064 480.642 65.6597 480.686 53.858 cv480.919 42.4605 485.236 32.0464 495.366 25.8541 cv503.966 21.0298 516.962 21.2984 525.359 26.4722 cv529.503 29.1578 532.929 32.8287 535.245 36.9781 cvcp522.843 46.6246 mo522.781 44.8228 522.011 43.3062 521.242 41.7906 cv518.168 35.6265 509.808 33.5523 504.041 36.8355 cv500.396 38.9605 497.818 42.7085 497.837 46.6099 cv522.843 46.6246 li0 0 0 1 cmykf137.66 75.9019 mo131.985 84.3863 121.081 84.4624 112.024 82.275 cv106.446 81.1597 100.648 76.1402 98.8624 70.5015 cv97.5704 65.274 98.2994 58.9878 101.784 54.9585 cv110.688 45.1402 124.646 47.3277 135.938 42.9585 cv137.467 41.5914 138.01 39.5015 137.451 37.4888 cv135.236 33.3433 130.756 32.3492 126.252 32.4585 cv122.147 32.6734 117.517 34.0777 116.127 38.4507 cv115.865 39.3199 115.865 39.9449 115.865 40.5699 cv101.885 40.5728 li102.406 34.6812 104.513 29.3101 109.394 25.4087 cv120.417 19.5347 137.32 19.5835 147.561 27.3951 cv151.072 31.7691 li153.615 38.3199 152.99 53.9449 153.134 82.2222 cv137.561 82.1949 li137.66 75.9019 licp115.676 60.3453 mo114.441 62.021 113.694 64.3062 114.349 66.5201 cv114.705 68.6285 116.974 70.1753 118.759 70.9117 cv124.423 72.7291 130.648 71.5562 134.93 67.6441 cv138.016 63.5054 138.537 57.6158 137.644 52.396 cv130.574 55.7515 122.078 55.4771 115.676 60.3453 cv0 0 0 1 cmykf263.659 19.3394 mo263.647 4.76514 li196.736 4.80225 li196.757 19.3023 li221.115 19.2671 li221.172 82.4234 li238.561 82.4126 li238.635 19.3687 li263.659 19.3394 li0 0 0 1 cmykf245.049 82.4136 mo261.074 82.4 li262.053 68.3052 258.741 53.7886 264.585 42.0074 cv268.187 37.0796 273.632 34.8921 279.82 35.6197 cv279.903 21.9175 li274.613 21.3082 li269.306 21.5992 264.227 25.396 261.928 30.15 cv261.935 22.7671 li244.983 22.8199 li245.049 82.4136 li0 0 0 1 cmykf285.871 22.8707 mo285.87 82.4781 li301.991 82.4458 li301.991 22.8746 li285.871 22.8707 li0 0 0 1 cmykf301.991 4.81983 mo301.991 19.2632 li285.871 19.2632 li285.871 4.81983 li301.991 4.81983 li0 0 0 1 cmykf43.9893 19.3199 mo62.5084 19.3433 li62.3643 16.9449 61.8643 15.1949 60.9322 13.3091 cv58.5191 9.05909 54.2002 5.06885 49.836 3.27881 cv36.252 -2.50245 17.5333 -1.7876 6.69727 9.59131 cv2.17627 15.4 0.408204 23.566 2.45313 31.1089 cv6.49122 43.8951 20.1631 45.3765 30.9073 48.1988 cv36.5752 49.816 42.8682 50.2447 47.3804 54.5386 cv49.1436 56.3765 49.795 58.69 49.3404 61.3804 cv49.2823 64.1792 46.8394 66.23 44.7032 67.9869 cv37.8414 70.9458 28.3126 72.2496 21.5982 68.0113 cv17.9424 65.8355 16.4224 61.5464 15.5962 57.9273 cv0 57.9644 li-0.449708 60.356 0.511231 62.2759 0.768555 64.3824 cv4.14551 75.2535 15.3946 82.6861 26.3814 83.4126 cv40.3663 84.3003 55.3873 82.7037 63.3492 70.065 cv63.3443 46.7652 li60.3643 40.9029 54.4082 38.6792 49.1504 36.5718 cv39.625 32.8746 27.9004 33.9332 19.5342 27.3599 cv18.669 25.6421 17.4004 24.1148 18.0474 21.8277 cv18.3033 19.1324 20.2481 16.9722 22.4805 15.4175 cv28.4415 12.5406 37.6143 12.0699 42.8804 15.6382 cv43.7393 16.9449 43.9893 19.3199 43.9893 19.3199 cv0 0 0 1 cmykf96.8101 33.7496 mo96.8643 23.0699 li85.9893 23.0699 li85.9664 4.22022 li70.4214 4.20264 li70.3643 23.0699 li62.4385 23.0279 li62.5064 33.6421 li70.3892 33.7027 li70.3604 49.5093 li70.5782 58.316 69.3643 68.6949 72.1553 75.4527 cv76.9795 84.0542 87.8321 81.5767 96.4263 81.9537 cv96.4082 79.355 li93.9624 76.7037 91.9004 73.4585 91.1744 69.8433 cv89.0752 69.8003 85.9893 68.4449 86.0245 66.6402 cv85.9712 33.7427 li96.8101 33.7496 li0 0 0 1 cmykf325.116 82.4449 mo308.661 82.4517 li308.578 4.81983 li325.15 4.87452 li325.154 29.5503 li328.127 26.0113 332.695 22.7046 337.513 21.9039 cv346.642 20.5914 354.69 23.2574 360.65 30.0816 cv361.142 44.9947 359.117 60.857 362.131 74.7222 cv356.474 82.3062 347.787 86.4292 338.125 84.5298 cv333.34 83.731 328.64 81.1177 325.116 77.4449 cv325.116 82.4449 licp342.541 35.2105 mo337.969 33.816 333.343 35.021 329.98 38.0523 cv323.451 44.2183 324.432 54.8414 326.572 62.688 cv328.576 67.3296 332.795 71.3169 338.201 71.1285 cv341.899 71.3042 344.932 69.6675 347.583 67.2203 cv352.923 60.4292 353.054 49.23 349.611 41.5562 cv348.168 38.8267 345.32 36.2681 342.541 35.2105 cv0 0 0 1 cmykf56.0152 124.526 mo60.2149 109.426 li66.9649 111.276 li58.6153 133.176 li52.6651 133.176 li49.315 121.576 li45.9649 133.176 li40.0152 133.176 li31.6651 111.276 li38.4151 109.426 li42.6148 124.526 li46.1148 110.676 li52.5152 110.676 li56.0152 124.526 li0 0 0 1 cmykf93.5152 124.526 mo97.7149 109.426 li104.465 111.276 li96.1153 133.176 li90.1651 133.176 li86.815 121.576 li83.4649 133.176 li77.5152 133.176 li69.1651 111.276 li75.9151 109.426 li80.1148 124.526 li83.6148 110.676 li90.0152 110.676 li93.5152 124.526 li0 0 0 1 cmykf131.016 124.526 mo135.215 109.426 li141.965 111.276 li133.616 133.176 li127.666 133.176 li124.315 121.576 li120.965 133.176 li115.016 133.176 li106.666 111.276 li113.416 109.426 li117.615 124.526 li121.115 110.676 li127.516 110.676 li131.016 124.526 li0 0 0 1 cmykf147.016 134.126 mo144.565 134.126 142.565 132.126 142.565 129.676 cv142.565 127.226 144.565 125.226 147.016 125.226 cv149.465 125.226 151.465 127.226 151.465 129.676 cv151.465 132.126 149.465 134.126 147.016 134.126 cv0 0 0 1 cmykf166.765 115.176 mo164.915 115.176 163.765 115.776 163.765 116.776 cv163.765 117.676 165.015 118.076 166.015 118.426 cv168.015 119.176 li170.915 120.276 174.515 121.426 174.515 126.426 cv174.515 130.926 170.065 134.176 165.515 134.176 cv161.765 134.176 159.265 133.126 157.615 131.726 cv157.615 125.176 li163.365 125.176 li163.365 127.876 li163.915 128.076 164.465 128.176 165.015 128.176 cv166.765 128.176 168.015 127.426 168.015 126.276 cv168.015 125.176 166.765 124.826 165.765 124.426 cv163.765 123.676 li161.515 122.826 157.265 121.426 157.265 116.426 cv157.265 112.176 161.765 109.176 166.265 109.176 cv170.015 109.176 172.265 110.426 174.365 112.426 cv174.365 117.726 li168.615 117.726 li168.615 115.526 li167.965 115.276 167.315 115.176 166.765 115.176 cv0 0 0 1 cmykf192.565 131.176 mo186.465 134.276 li183.165 131.226 181.765 128.126 181.765 123.576 cv181.765 116.676 li177.265 116.676 li177.265 110.176 li181.765 110.176 li181.765 103.176 li188.765 103.176 li188.765 110.176 li193.515 110.176 li193.515 116.676 li188.765 116.676 li188.765 123.576 li188.765 126.876 189.965 129.176 192.565 131.176 cv0 0 0 1 cmykf207.515 123.076 mo207.515 124.126 207.665 125.626 207.915 127.026 cv207.915 127.026 206.565 128.376 204.665 128.376 cv203.615 128.376 202.115 127.576 202.065 126.176 cv202.015 124.626 202.715 123.076 205.515 123.076 cv205.715 123.076 207.515 123.076 207.515 123.076 cvcp214.515 123.276 mo214.515 118.426 li214.515 113.126 210.765 109.176 204.515 109.176 cv200.515 109.176 197.765 111.576 197.765 111.576 cv201.415 116.326 li201.415 116.326 202.565 115.476 204.515 115.476 cv206.515 115.476 207.515 116.826 207.515 118.426 cv207.515 118.426 206.615 118.426 205.515 118.426 cv199.015 118.426 194.965 121.226 194.965 126.176 cv194.965 130.726 199.365 134.176 204.015 134.176 cv207.915 134.176 210.065 131.626 210.065 131.626 cv210.465 132.226 212.215 133.976 212.215 133.976 cv218.315 130.876 li215.715 128.876 214.515 126.576 214.515 123.276 cv0 0 0 1 cmykf234.215 127.176 mo234.215 133.176 li221.215 133.176 li221.215 127.176 li224.215 127.176 li224.215 120.076 li224.215 116.776 223.015 114.476 220.415 112.476 cv226.515 109.376 li227.665 110.276 229.064 112.326 229.064 112.326 cv229.064 112.326 232.915 109.176 236.215 109.176 cv237.965 115.926 li234.715 115.926 231.215 119.826 231.215 119.826 cv231.215 127.176 li234.215 127.176 li0 0 0 1 cmykf255.964 131.176 mo249.864 134.276 li246.564 131.226 245.165 128.126 245.165 123.576 cv245.165 116.676 li240.665 116.676 li240.665 110.176 li245.165 110.176 li245.165 103.176 li252.165 103.176 li252.165 110.176 li256.915 110.176 li256.915 116.676 li252.165 116.676 li252.165 123.576 li252.165 126.876 253.364 129.176 255.964 131.176 cv0 0 0 1 cmykf272.514 127.176 mo272.514 133.176 li259.514 133.176 li259.514 127.176 li262.514 127.176 li262.514 120.076 li262.514 116.776 261.314 114.476 258.714 112.476 cv264.814 109.376 li265.964 110.276 267.364 112.326 267.364 112.326 cv267.364 112.326 271.214 109.176 274.514 109.176 cv276.264 115.926 li273.014 115.926 269.514 119.826 269.514 119.826 cv269.514 127.176 li272.514 127.176 li0 0 0 1 cmykf286.014 106.926 mo283.764 106.926 281.914 105.076 281.914 102.826 cv281.914 100.576 283.764 98.7256 286.014 98.7256 cv288.264 98.7256 290.114 100.576 290.114 102.826 cv290.114 105.076 288.264 106.926 286.014 106.926 cvcp279.464 116.176 mo279.464 110.176 li289.564 110.176 li289.564 127.176 li292.564 127.176 li292.564 133.176 li279.464 133.176 li279.464 127.176 li282.464 127.176 li282.464 116.176 li279.464 116.176 li0 0 0 1 cmykf305.463 121.676 mo305.463 118.726 307.014 115.676 309.963 115.676 cv312.864 115.676 314.414 118.776 314.414 121.676 cv314.414 124.576 312.864 127.676 309.963 127.676 cv307.014 127.676 305.463 124.626 305.463 121.676 cvcp305.463 111.126 mo305.463 98.6758 li295.463 98.6758 li295.463 104.676 li298.463 104.676 li298.463 123.276 li298.463 126.576 297.264 128.876 294.664 130.876 cv300.764 133.976 li301.514 133.426 302.963 131.526 302.963 131.526 cv302.963 131.526 305.564 134.176 309.963 134.176 cv316.614 134.176 321.514 128.126 321.514 121.676 cv321.514 115.226 317.463 109.176 309.963 109.176 cv307.164 109.176 305.463 111.126 305.463 111.126 cv0 0 0 1 cmykf335.463 127.476 mo338.263 127.476 339.563 123.526 339.563 123.526 cv339.563 116.176 li336.563 116.176 li336.563 110.176 li346.563 110.176 li346.563 123.276 li346.563 126.576 347.763 128.876 350.363 130.876 cv344.263 133.976 li343.213 133.226 341.713 131.026 341.713 131.026 cv341.713 131.026 338.414 134.276 334.664 134.276 cv330.463 134.276 326.563 131.376 326.563 127.126 cv326.563 116.176 li323.563 116.176 li323.563 110.176 li333.563 110.176 li333.563 123.626 li333.563 126.276 334.113 127.476 335.463 127.476 cv0 0 0 1 cmykf355.913 120.076 mo355.913 116.776 354.712 114.476 352.113 112.476 cv358.212 109.376 li359.113 110.026 360.762 112.326 360.762 112.326 cv360.762 112.326 364.312 109.076 368.062 109.076 cv372.312 109.076 376.413 111.976 376.413 116.226 cv376.413 127.176 li379.413 127.176 li379.413 133.176 li369.413 133.176 li369.413 119.726 li369.413 116.326 368.762 115.876 367.262 115.876 cv364.462 115.876 362.913 119.826 362.913 119.826 cv362.913 127.176 li365.913 127.176 li365.913 133.176 li352.913 133.176 li352.913 127.176 li355.913 127.176 li355.913 120.076 li0 0 0 1 cmykf388.913 119.176 mo388.913 118.576 389.812 115.576 392.562 115.576 cv394.862 115.576 395.362 118.176 395.362 119.176 cv388.913 119.176 licp392.562 127.776 mo389.762 127.776 388.712 124.526 388.712 123.626 cv402.462 123.626 li403.413 120.826 402.362 109.176 392.562 109.176 cv386.062 109.176 381.512 115.326 381.512 121.676 cv381.512 128.726 386.212 134.176 392.562 134.176 cv398.712 134.176 402.212 129.676 402.212 129.676 cv397.762 125.476 li397.762 125.476 396.413 127.776 392.562 127.776 cv0 0 0 1 cmykf410.862 134.126 mo408.412 134.126 406.412 132.126 406.412 129.676 cv406.412 127.226 408.412 125.226 410.862 125.226 cv413.312 125.226 415.312 127.226 415.312 129.676 cv415.312 132.126 413.312 134.126 410.862 134.126 cv0 0 0 1 cmykf438.662 119.726 mo432.662 119.726 li432.662 116.476 li432.211 116.126 430.761 115.576 429.511 115.676 cv426.412 115.926 425.312 118.826 425.312 121.676 cv425.312 124.526 426.662 127.676 429.511 127.676 cv432.112 127.676 433.862 126.826 434.761 125.326 cv439.162 129.676 li436.662 132.926 433.662 134.226 429.511 134.176 cv422.961 134.076 418.211 128.076 418.211 121.676 cv418.211 115.276 422.711 109.376 429.511 109.176 cv433.961 109.026 436.711 110.876 438.662 113.026 cv438.662 119.726 li0 0 0 1 cmykf448.611 121.676 mo448.611 118.776 450.161 115.676 453.061 115.676 cv455.961 115.676 457.511 118.776 457.511 121.676 cv457.511 124.576 455.961 127.676 453.061 127.676 cv450.161 127.676 448.611 124.576 448.611 121.676 cvcp453.061 109.176 mo446.411 109.176 441.511 115.226 441.511 121.676 cv441.511 128.126 446.411 134.176 453.061 134.176 cv459.711 134.176 464.611 128.126 464.611 121.676 cv464.611 115.226 459.711 109.176 453.061 109.176 cv0 0 0 1 cmykf480.811 115.876 mo478.361 115.876 476.96 119.176 476.96 119.176 cv476.96 127.176 li479.96 127.176 li479.96 133.176 li466.96 133.176 li466.96 127.176 li469.96 127.176 li469.96 120.076 li469.96 116.776 468.76 114.476 466.161 112.476 cv472.26 109.376 li473.21 110.076 474.811 112.326 474.811 112.326 cv474.811 112.326 478.111 109.076 481.311 109.076 cv485.26 109.076 487.411 111.426 487.811 111.876 cv487.811 111.876 490.861 109.076 493.811 109.076 cv498.011 109.076 501.96 111.976 501.96 116.226 cv501.96 127.176 li504.96 127.176 li504.96 133.176 li494.96 133.176 li494.96 119.726 li494.96 116.176 494.46 115.876 493.311 115.876 cv490.861 115.876 489.46 119.176 489.46 119.176 cv489.46 127.176 li492.46 127.176 li492.46 133.176 li482.46 133.176 li482.46 119.726 li482.46 116.176 481.96 115.876 480.811 115.876 cv0 0 0 1 cmykf464.563 288.254 mo464.503 285.605 462.57 283.111 459.887 282.156 cv456.115 280.879 451.211 280.977 448.055 283.613 cv444.394 286.639 443.753 290.98 443.809 295.527 cv443.761 327.444 li427.942 327.522 li427.954 267.998 li444.213 267.975 li444.24 274.633 li449.579 267.941 457.42 266.001 465.987 267.679 cv469.758 269.156 473.932 270.443 476.659 274.1 cv477.918 276.025 479.878 278.066 479.327 280.457 cv472.088 292.01 472.916 310.131 481.192 321.003 cv481.262 327.431 li464.442 327.538 li464.563 288.254 li1 0 1 0 cmykf405.378 321.48 mo400.769 326.687 393.982 330.409 386.891 329.862 cv379.295 329.606 371.382 325.343 368.936 317.79 cv365.503 302.355 367.745 267.972 367.745 267.972 cv383.845 268.022 li383.842 306.494 li384.566 310.211 386.313 314.147 390.292 315.329 cv393.68 315.899 397.483 315.778 400.224 313.835 cv405.608 309.746 404.849 302.928 405.379 296.637 cv405.376 267.962 li421.378 268.035 li421.321 327.466 li405.43 327.44 li405.378 321.48 li1 0 1 0 cmykf194.532 280.793 mo188.042 280.258 181.928 282.234 178.707 288.17 cv174.877 297.855 177.502 306.855 176.626 327.274 cv160.101 327.237 li160.115 268.082 li176.568 268.119 li176.567 275.424 li179.801 268.988 186.981 265.134 194.443 267.089 cv194.532 280.793 li1 0 1 0 cmykf535.507 282.014 mo538.874 288.584 540.618 296.121 540.561 303.721 cv497.507 303.768 li497.253 305.855 497.753 307.48 498.237 309.352 cv499.85 313.585 504.172 317.374 508.561 317.964 cv513.853 318.474 519.471 317.589 522.376 312.549 cv522.753 311.355 522.628 311.48 522.753 310.73 cv539.753 310.73 li539.321 317.022 533.754 323.384 528.588 326.579 cv519.974 332.103 505.956 332.815 496.856 327.827 cv485.872 322.099 480.905 310.695 480.949 298.893 cv481.182 287.496 485.499 277.082 495.628 270.889 cv504.229 266.065 517.225 266.334 525.622 271.507 cv529.766 274.193 533.192 277.863 535.507 282.014 cvcp523.106 291.66 mo523.043 289.857 522.274 288.342 521.504 286.826 cv518.43 280.662 510.071 278.588 504.303 281.871 cv500.659 283.996 498.081 287.744 498.1 291.645 cv523.106 291.66 li1 0 1 0 cmykf137.922 320.937 mo132.248 329.421 121.343 329.497 112.287 327.31 cv106.709 326.194 100.911 321.175 99.125 315.536 cv97.8331 310.309 98.5621 304.023 102.046 299.994 cv110.951 290.176 124.909 292.363 136.201 287.994 cv137.73 286.627 138.272 284.537 137.713 282.523 cv135.499 278.379 131.019 277.385 126.515 277.494 cv122.41 277.709 117.779 279.113 116.39 283.486 cv116.127 284.355 116.127 284.98 116.127 285.605 cv102.147 285.607 li102.668 279.717 104.775 274.346 109.656 270.444 cv120.679 264.57 137.583 264.619 147.823 272.43 cv151.334 276.805 li153.877 283.355 153.252 298.98 153.396 327.257 cv137.823 327.23 li137.922 320.937 licp115.938 305.381 mo114.704 307.057 113.957 309.342 114.611 311.555 cv114.967 313.663 117.236 315.21 119.022 315.946 cv124.686 317.765 130.911 316.591 135.192 312.68 cv138.278 308.541 138.799 302.65 137.906 297.432 cv130.836 300.787 122.34 300.512 115.938 305.381 cv1 0 1 0 cmykf263.921 264.375 mo263.91 249.8 li196.999 249.837 li197.02 264.337 li221.377 264.302 li221.435 327.458 li238.823 327.448 li238.897 264.404 li263.921 264.375 li1 0 1 0 cmykf245.312 327.448 mo261.336 327.435 li262.316 313.34 259.003 298.824 264.847 287.043 cv268.449 282.115 273.895 279.928 280.083 280.654 cv280.166 266.953 li274.876 266.343 li269.568 266.634 264.49 270.431 262.191 275.186 cv262.197 267.802 li245.246 267.855 li245.312 327.448 li1 0 1 0 cmykf286.133 267.906 mo286.132 327.513 li302.253 327.481 li302.253 267.91 li286.133 267.906 li1 0 1 0 cmykf302.253 249.855 mo302.253 264.298 li286.133 264.298 li286.133 249.855 li302.253 249.855 li1 0 1 0 cmykf44.252 264.355 mo62.771 264.378 li62.627 261.98 62.127 260.23 61.1949 258.344 cv58.7818 254.094 54.4629 250.104 50.0987 248.314 cv36.5147 242.533 17.7959 243.248 6.95997 254.626 cv2.43897 260.435 0.670899 268.601 2.71583 276.145 cv6.75391 288.93 20.4258 290.412 31.17 293.234 cv36.8379 294.852 43.1309 295.279 47.6431 299.574 cv49.4063 301.412 50.0577 303.725 49.6031 306.416 cv49.545 309.215 47.1021 311.266 44.9659 313.022 cv38.1041 315.981 28.5752 317.284 21.8609 313.047 cv18.2051 310.871 16.6851 306.582 15.8589 302.963 cv0.262696 303 li-0.187012 305.391 0.773926 307.311 1.03126 309.418 cv4.40821 320.288 15.6573 327.722 26.6441 328.448 cv40.629 329.335 55.65 327.739 63.6119 315.101 cv63.607 291.801 li60.627 285.938 54.671 283.715 49.4131 281.607 cv39.8877 277.91 28.1631 278.969 19.7969 272.395 cv18.9317 270.677 17.6631 269.15 18.3101 266.863 cv18.566 264.168 20.5108 262.007 22.7432 260.453 cv28.7042 257.576 37.877 257.105 43.1431 260.673 cv44.002 261.98 44.252 264.355 44.252 264.355 cv1 0 1 0 cmykf97.0728 278.785 mo97.127 268.105 li86.252 268.105 li86.2291 249.255 li70.6841 249.238 li70.627 268.105 li62.7012 268.063 li62.7691 278.678 li70.6519 278.738 li70.6231 294.545 li70.8409 303.352 69.627 313.73 72.418 320.487 cv77.2422 329.089 88.0948 326.612 96.689 326.989 cv96.671 324.39 li94.2252 321.739 92.1631 318.493 91.4371 314.878 cv89.3379 314.835 86.252 313.48 86.2872 311.676 cv86.2339 278.777 li97.0728 278.785 li1 0 1 0 cmykf325.378 327.48 mo308.923 327.487 li308.84 249.855 li325.413 249.91 li325.416 274.586 li328.39 271.046 332.958 267.74 337.776 266.939 cv346.905 265.626 354.953 268.292 360.913 275.117 cv361.405 290.029 359.379 305.893 362.394 319.757 cv356.737 327.341 348.049 331.464 338.387 329.565 cv333.603 328.767 328.903 326.153 325.378 322.48 cv325.378 327.48 licp342.803 280.246 mo338.232 278.852 333.606 280.057 330.243 283.088 cv323.713 289.254 324.695 299.877 326.834 307.723 cv328.838 312.365 333.058 316.353 338.463 316.163 cv342.162 316.339 345.195 314.702 347.845 312.256 cv353.186 305.465 353.317 294.266 349.874 286.592 cv348.43 283.861 345.583 281.303 342.803 280.246 cv1 0 1 0 cmykf56.2779 369.562 mo60.4776 354.461 li67.2276 356.312 li58.878 378.211 li52.9278 378.211 li49.5777 366.61 li46.2276 378.211 li40.2779 378.211 li31.9278 356.312 li38.6778 354.461 li42.8775 369.562 li46.3775 355.711 li52.7779 355.711 li56.2779 369.562 li0 0 0 1 cmykf93.7779 369.562 mo97.9776 354.461 li104.728 356.312 li96.378 378.211 li90.4278 378.211 li87.0777 366.61 li83.7276 378.211 li77.7779 378.211 li69.4278 356.312 li76.1778 354.461 li80.3775 369.562 li83.8775 355.711 li90.2779 355.711 li93.7779 369.562 li0 0 0 1 cmykf131.278 369.562 mo135.478 354.461 li142.228 356.312 li133.878 378.211 li127.928 378.211 li124.578 366.61 li121.228 378.211 li115.278 378.211 li106.928 356.312 li113.678 354.461 li117.878 369.562 li121.378 355.711 li127.778 355.711 li131.278 369.562 li0 0 0 1 cmykf147.278 379.161 mo144.828 379.161 142.828 377.161 142.828 374.711 cv142.828 372.261 144.828 370.261 147.278 370.261 cv149.728 370.261 151.728 372.261 151.728 374.711 cv151.728 377.161 149.728 379.161 147.278 379.161 cv0 0 0 1 cmykf167.028 360.211 mo165.178 360.211 164.028 360.812 164.028 361.812 cv164.028 362.711 165.278 363.11 166.278 363.461 cv168.278 364.211 li171.178 365.312 174.778 366.461 174.778 371.461 cv174.778 375.961 170.328 379.211 165.778 379.211 cv162.028 379.211 159.528 378.161 157.877 376.761 cv157.877 370.211 li163.628 370.211 li163.628 372.911 li164.178 373.11 164.728 373.211 165.278 373.211 cv167.028 373.211 168.278 372.461 168.278 371.312 cv168.278 370.211 167.028 369.86 166.028 369.461 cv164.028 368.711 li161.778 367.86 157.528 366.461 157.528 361.461 cv157.528 357.211 162.028 354.211 166.528 354.211 cv170.278 354.211 172.528 355.461 174.628 357.461 cv174.628 362.761 li168.878 362.761 li168.878 360.562 li168.228 360.312 167.578 360.211 167.028 360.211 cv0 0 0 1 cmykf192.828 376.211 mo186.728 379.312 li183.428 376.261 182.028 373.161 182.028 368.61 cv182.028 361.711 li177.528 361.711 li177.528 355.211 li182.028 355.211 li182.028 348.211 li189.028 348.211 li189.028 355.211 li193.778 355.211 li193.778 361.711 li189.028 361.711 li189.028 368.61 li189.028 371.911 190.228 374.211 192.828 376.211 cv0 0 0 1 cmykf207.777 368.11 mo207.777 369.161 207.927 370.661 208.177 372.062 cv208.177 372.062 206.828 373.411 204.927 373.411 cv203.877 373.411 202.377 372.61 202.328 371.211 cv202.277 369.661 202.978 368.11 205.777 368.11 cv205.978 368.11 207.777 368.11 207.777 368.11 cvcp214.777 368.312 mo214.777 363.461 li214.777 358.161 211.027 354.211 204.777 354.211 cv200.777 354.211 198.027 356.61 198.027 356.61 cv201.677 361.36 li201.677 361.36 202.828 360.511 204.777 360.511 cv206.777 360.511 207.777 361.86 207.777 363.461 cv207.777 363.461 206.877 363.461 205.777 363.461 cv199.277 363.461 195.228 366.261 195.228 371.211 cv195.228 375.761 199.627 379.211 204.277 379.211 cv208.177 379.211 210.328 376.661 210.328 376.661 cv210.728 377.261 212.478 379.011 212.478 379.011 cv218.578 375.911 li215.978 373.911 214.777 371.61 214.777 368.312 cv0 0 0 1 cmykf234.478 372.211 mo234.478 378.211 li221.478 378.211 li221.478 372.211 li224.478 372.211 li224.478 365.11 li224.478 361.812 223.277 359.511 220.677 357.511 cv226.777 354.411 li227.927 355.312 229.327 357.36 229.327 357.36 cv229.327 357.36 233.177 354.211 236.478 354.211 cv238.228 360.961 li234.978 360.961 231.478 364.86 231.478 364.86 cv231.478 372.211 li234.478 372.211 li0 0 0 1 cmykf256.227 376.211 mo250.127 379.312 li246.827 376.261 245.427 373.161 245.427 368.61 cv245.427 361.711 li240.927 361.711 li240.927 355.211 li245.427 355.211 li245.427 348.211 li252.427 348.211 li252.427 355.211 li257.177 355.211 li257.177 361.711 li252.427 361.711 li252.427 368.61 li252.427 371.911 253.627 374.211 256.227 376.211 cv0 0 0 1 cmykf272.777 372.211 mo272.777 378.211 li259.777 378.211 li259.777 372.211 li262.777 372.211 li262.777 365.11 li262.777 361.812 261.577 359.511 258.977 357.511 cv265.077 354.411 li266.227 355.312 267.626 357.36 267.626 357.36 cv267.626 357.36 271.477 354.211 274.777 354.211 cv276.527 360.961 li273.277 360.961 269.777 364.86 269.777 364.86 cv269.777 372.211 li272.777 372.211 li0 0 0 1 cmykf286.277 351.961 mo284.027 351.961 282.176 350.11 282.176 347.86 cv282.176 345.61 284.027 343.761 286.277 343.761 cv288.527 343.761 290.376 345.61 290.376 347.86 cv290.376 350.11 288.527 351.961 286.277 351.961 cvcp279.727 361.211 mo279.727 355.211 li289.827 355.211 li289.827 372.211 li292.827 372.211 li292.827 378.211 li279.727 378.211 li279.727 372.211 li282.727 372.211 li282.727 361.211 li279.727 361.211 li0 0 0 1 cmykf305.726 366.711 mo305.726 363.761 307.277 360.711 310.226 360.711 cv313.126 360.711 314.676 363.812 314.676 366.711 cv314.676 369.61 313.126 372.711 310.226 372.711 cv307.277 372.711 305.726 369.661 305.726 366.711 cvcp305.726 356.161 mo305.726 343.711 li295.726 343.711 li295.726 349.711 li298.726 349.711 li298.726 368.312 li298.726 371.61 297.527 373.911 294.926 375.911 cv301.027 379.011 li301.777 378.461 303.226 376.562 303.226 376.562 cv303.226 376.562 305.827 379.211 310.226 379.211 cv316.876 379.211 321.777 373.161 321.777 366.711 cv321.777 360.261 317.726 354.211 310.226 354.211 cv307.426 354.211 305.726 356.161 305.726 356.161 cv0 0 0 1 cmykf335.726 372.511 mo338.526 372.511 339.826 368.562 339.826 368.562 cv339.826 361.211 li336.826 361.211 li336.826 355.211 li346.826 355.211 li346.826 368.312 li346.826 371.61 348.026 373.911 350.626 375.911 cv344.526 379.011 li343.476 378.261 341.976 376.062 341.976 376.062 cv341.976 376.062 338.676 379.312 334.926 379.312 cv330.726 379.312 326.826 376.411 326.826 372.161 cv326.826 361.211 li323.826 361.211 li323.826 355.211 li333.826 355.211 li333.826 368.661 li333.826 371.312 334.376 372.511 335.726 372.511 cv0 0 0 1 cmykf356.175 365.11 mo356.175 361.812 354.975 359.511 352.376 357.511 cv358.475 354.411 li359.376 355.062 361.025 357.36 361.025 357.36 cv361.025 357.36 364.575 354.11 368.325 354.11 cv372.575 354.11 376.675 357.011 376.675 361.261 cv376.675 372.211 li379.675 372.211 li379.675 378.211 li369.675 378.211 li369.675 364.761 li369.675 361.36 369.025 360.911 367.525 360.911 cv364.725 360.911 363.175 364.86 363.175 364.86 cv363.175 372.211 li366.175 372.211 li366.175 378.211 li353.175 378.211 li353.175 372.211 li356.175 372.211 li356.175 365.11 li0 0 0 1 cmykf389.175 364.211 mo389.175 363.61 390.075 360.61 392.825 360.61 cv395.125 360.61 395.625 363.211 395.625 364.211 cv389.175 364.211 licp392.825 372.812 mo390.025 372.812 388.975 369.562 388.975 368.661 cv402.725 368.661 li403.675 365.86 402.625 354.211 392.825 354.211 cv386.325 354.211 381.775 360.36 381.775 366.711 cv381.775 373.761 386.475 379.211 392.825 379.211 cv398.975 379.211 402.475 374.711 402.475 374.711 cv398.025 370.511 li398.025 370.511 396.675 372.812 392.825 372.812 cv0 0 0 1 cmykf411.125 379.161 mo408.674 379.161 406.674 377.161 406.674 374.711 cv406.674 372.261 408.674 370.261 411.125 370.261 cv413.575 370.261 415.575 372.261 415.575 374.711 cv415.575 377.161 413.575 379.161 411.125 379.161 cv0 0 0 1 cmykf438.924 364.761 mo432.924 364.761 li432.924 361.511 li432.474 361.161 431.024 360.61 429.774 360.711 cv426.674 360.961 425.575 363.86 425.575 366.711 cv425.575 369.562 426.924 372.711 429.774 372.711 cv432.375 372.711 434.125 371.86 435.024 370.36 cv439.424 374.711 li436.924 377.961 433.924 379.261 429.774 379.211 cv423.224 379.11 418.474 373.11 418.474 366.711 cv418.474 360.312 422.974 354.411 429.774 354.211 cv434.224 354.062 436.974 355.911 438.924 358.062 cv438.924 364.761 li0 0 0 1 cmykf448.874 366.711 mo448.874 363.812 450.423 360.711 453.324 360.711 cv456.224 360.711 457.774 363.812 457.774 366.711 cv457.774 369.61 456.224 372.711 453.324 372.711 cv450.423 372.711 448.874 369.61 448.874 366.711 cvcp453.324 354.211 mo446.673 354.211 441.774 360.261 441.774 366.711 cv441.774 373.161 446.673 379.211 453.324 379.211 cv459.974 379.211 464.874 373.161 464.874 366.711 cv464.874 360.261 459.974 354.211 453.324 354.211 cv0 0 0 1 cmykf481.074 360.911 mo478.624 360.911 477.223 364.211 477.223 364.211 cv477.223 372.211 li480.223 372.211 li480.223 378.211 li467.223 378.211 li467.223 372.211 li470.223 372.211 li470.223 365.11 li470.223 361.812 469.023 359.511 466.423 357.511 cv472.523 354.411 li473.473 355.11 475.074 357.36 475.074 357.36 cv475.074 357.36 478.374 354.11 481.574 354.11 cv485.523 354.11 487.673 356.461 488.074 356.911 cv488.074 356.911 491.124 354.11 494.074 354.11 cv498.274 354.11 502.223 357.011 502.223 361.261 cv502.223 372.211 li505.223 372.211 li505.223 378.211 li495.223 378.211 li495.223 364.761 li495.223 361.211 494.723 360.911 493.574 360.911 cv491.124 360.911 489.723 364.211 489.723 364.211 cv489.723 372.211 li492.723 372.211 li492.723 378.211 li482.723 378.211 li482.723 364.761 li482.723 361.211 482.223 360.911 481.074 360.911 cv0 0 0 1 cmykfgrestore % PSGState%ADOBeginClientInjection: EndPageContent "AI10"userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse%ADOEndClientInjection: EndPageContent "AI10"% page clipgrestoregrestore % PSGStateAdobe_AGM_Core/AGMCORE_save get restore%%PageTrailer%ADOBeginClientInjection: PageTrailer Start "AI10"%ADOEndClientInjection: PageTrailer Start "AI10"Adobe_AGM_Image/page_trailer get execAdobe_CoolType_Core/page_trailer get execAdobe_AGM_Core/page_trailer get execcurrentdict Adobe_AGM_Utils eq {end} if%ADOBeginClientInjection: PageTrailer End "AI10"%ADOEndClientInjection: PageTrailer End "AI10"%%Trailer%ADOBeginClientInjection: DocumentTrailer Start "AI10"%ADOEndClientInjection: DocumentTrailer Start "AI10"Adobe_AGM_Image/doc_trailer get execAdobe_CoolType_Core/doc_trailer get execAdobe_AGM_Core/doc_trailer get exec%ADOBeginClientInjection: DocumentTrailer End "AI10"%ADOEndClientInjection: DocumentTrailer End "AI10"%%EOF%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 10.0%%AI8_CreatorVersion: 10.0%%For: (Elizabeth Mullen) (Minneapolis Institute of Arts)%%Title: (Integrated logo.eps)%%CreationDate: 9/30/04 3:03 PM%AI9_DataStream%Gb"-6l],MdOXBi+rXSIr(9Q97^u:gu"p78<K[9:4G"YYSf6!]@&8FPbl<7b2$$F^1T76UhB1DG3pIn.Y&pAb(\WiM"cGN!fm7sGH%P><77qX4<#^3ot8a05L:cgO33H^2$aQV+u=ja9%9o#ZCYnlKbD3Ae>)C-][Umm@JrFh5mRn<*V1X7+@tIJ*0e]/T2nrT2X<]tF1'%S+B^"^\[erTAQ4>pr3-BcelB`qpceV*oDG:o"3?u%tC4#IJNI$S'+l?^\d$F]6q?o(4Iirr6%$+r:Wj7%0%[Ln)(mmrU)U_Ib>fl%o:*LEf73c(5EoNu^H[/<mC.M:rCsF*ir"k0s2-mJ%_^WXs*s4?mA9j_O$DsTrm))6kO8E;=)WQbjYu(GrPc6QIeE\iil?hhcQ(**%Dgq]iiVb&eBCl,_h:%jCs5LZ"hf=["ZW7%g[m.KgmXObR!5=SNZAsGggr?C#m9fRZ<t>8:Dsln76N(3"Mt3<DrpgB!n8+N%]9rGu%?D"n/r81q=_!=5"H2%3F?[Va*CV8d+:(*cSYP!g^mE6gCI(O=!ocHhMGH(Gqb-B&ns#8hbq;r2P^\c&)?G:gem8r3C#I4*J0426]%%psh`l'MEG?fUMN?"onW?[_\Bc.E!drl]4AdKJ(pfKXiXRl>7#,gTfRINbc*9Mte"K7Em[lefGP[SuZsDnj1&r;<^8qU7ZWp[7\j%IsgiF8HgdB`UD]ss6$RLPL4PONr9L?Hb.P"5DA?%/<[)7a0"[cD6>*F72P1'H7jVOIbDj6(LM[fgFqIaHpsB`<qu>@^\IbsYCH6-%jkHEB$JXAHNUls2p)3KMqemKuLGm(iq=T79qTIbiE\IEpndh/fI9lj0m/NSg8(kB/^3QpR0#.DKs7l$<s*F^aQQ<9Tf=TTqkq@PQ%N:?i2Mf6?1FGoh[^V0I#GE77O(@8L&s$FMn3TJH:nE9U`ck,\j#l$7[r#,Wd]j1%`T?8%RElPSYd4/e9b5$(_5$LCDf$L:hY2SWr%d&Jt1_S>Rf>+NuQF["j-o,5<5cY.C1i7H-uB0:UQi:kEKcZ$fB0?:shnlIqf^P=ENnL%LK:A>L)0IN>=J&@67-e_rtp_36W9^l3/%$%LqRAqWCr'Cj#40dHUQH/ig.0djVtf];qW$M2-,BQL]aB'Y)3'?A$8Z%P@;,\PEMF6jkchi<iR)HdIILK9car^9Oe6-bq6EQ.E+%>%)lg_SceR`Vf3Q^0u1iJ,IEN"+ibb$M20->X_Nsn]LUdNCF!e\^?J?)957KUD<<2Gi?k,HAnBSid9@bXVY3oIqXJf).d9#Gabu$%YF$F26n?\Ek!ts2=o=+7R,.!?UMSs2@ZG@LFW1c/XVeHSjJ3L<K(4Ps.Ik^2&aOftnV31\MV-]DG-nQaZZeUZht\?a:<k+BF3TO\%p2H/o8ACACq98(:j4;=TL8RW?Ui)t)8Uku2dZAJF>\1hD>R-5/0Su\T2JfHQ?@+@&jc`t7aFEuS;UO`YhXd*02ueeuhrinpn+91D%KZq4,?Rbn:s5ng=np@M4m]-:M4Re^52ue5PjS/I/s#YZ"oL-duS,YW9oDAHTs)$d\b&aX)roCZ]]7&_sI==AOA)augPl0WW9:+q%%rp0,On[UdDkKCi2%XY_DHiGaAD1AP[TWN![o\V>"^.%\7htqI2Jb4CXe:'Y]dZ_*(InMHi)nj>M;0oqD7ArOWaClZqN]sbF4`u*f%qXfbrGOH1R,`hp.,Phg<DPMWYp8]kF$%6j2J32bB&Ad)gIJ/na9RF-HOKi(N#!R,)`0^&5'mPfUS@ssZC!3hQRi.gUmo]&LA5A2)%Y^]p^oZ^8!43)^;1u%!lN8l?)V7cOgZ&A>sfBrZAHePQ>5VG_9qRcY\nAg$`?h?ZgRq&&M]qu;\O7^S_aO=3I\_p'5pYV2GqY-^I%.[SeFPUH8aBrakmfm@StQ<?Co::smHREL-_cPV5\Zshg99ZR%;4d'TF=ql&KHlIGP&!VB;>Y@kVFqht:CW;1kl"o[?V\S7F\En`_%`Q@HUD2_A0%bEKJ.[-dP(P;fB3grRQ>A(PFME^Ma$JWt1o_:\Af.3Ahh$RN:N8j@/3bOMo[CAXck]+S<4=s>HT%@n5P8jC%A`"i?%nFVQVPs/\&OC$X%>9!=.dkL>Q-_o2i\pS`\Gk[)fa_aOsT%ZK,DNT/3Iiji+oWB^_&NoF@hF1I]H-c0[kj$;hJ!*G?3k(OBr1B5.%)ok,jF^5;ZV]c/L\,GN-VHC)Pc`&S#onl=klW*`/,?MN@;dtR4^rW=Z5(2?$?$G:B)<nHh1'd$+FUdIQrZ(iW`BHsi\+&k!Y&RdI%793m6r_=]XF_u<-A[`"rC(43MJ36'ejXn/bEudr@4IAes:9a`kCU%i[bf-BqNY8M)iBo+]S?K55Nu-8IX5obV&PBa\eN.aF_k=5J%=n+R%VS>3p124i$8FDjclcA<hJ,b@J)B/;t\Z$$;QGeiddRm5gVpd"DIY=`H`:VPG19:#KF]kg$O7C;:l2>U^OA?t=W-4lfGc%s/%GFN:^Y1URnh8uLa/:?)c#c"es\3@7DK1U\9:?T5Zn(+d=?CI=P)YmfL##^SjA@@4qM@VIOdb)Ged2o/r3G#5Di('7OrCgC^fHnaX%L\]0$=iWS-p\@d^N2(h#0JkE^jW6B3N"t5'n33K(,C2feZUhAaXk&?M?F-RO9EqLJ#a[i*QT;(bB%m8KHni("S5*e@-Nn58AnA[&%U;uP?X>[9@gM&mp-(/`$K<ri#;fUgL/+neB<*Gs;K7o=Y-l7S@LF#G#de-WjS+O`5&*YA>VY2_oT)+rT?<$V^N4)1rp?u^\=<H\E%Otu3!VLRB5CWF.LIf;pL`YfG%*g)Ief8BME[rCF+pYKL;*a,jY?+<'9`;UHt9kB+%LfH6uG-DQ,?)$f%HDK&5`q!r:4FL)!bZYGN%40YS43FsYkn?R#0;6!5SimKA1P<$2u(Xe>Hf4E<gXhWkZOb8Fo%OtKO.Fi5qb=Q9Bo+^A>[oGqZ28=+l.!'JN8"\cKf#rM[F2%Lo%3]C7DbYe<nV=8Vn7Q9sBm@>RMD8!'DX*K#,5I@NWRNZZ'e&o)g4:DU+N:X>Qiang1qYk+,9jA.`W7l(A"QTX4c-ZHJNAO`1146<K%XmBb(*gAPCK[ooRa@1MC^>DCPrC/<h/7[\kB(;Np`E[EZU[3UX-d4Ege7YYtfNPBj?$YuCSgH=am]gmmlEYWu)ca)oT@AI>fUr'(%j0S$UBCKJX&F8a%G]I\K$kN,WOVf^b+9,]#=ru"CTX@28lE/Y/s/DHPqs[8ridLOt__WNDrLMdHZMVC`M[SB98.Br^%C]Qrhe5Nj%Nc4l1caWK>LJAl+ZPOW\8C%gm[Jst$QFNR2(%33MIJsndIFe/H>T\L(h/'ca?8+[Gl%8YbR%EJZS11&4c$g*F7!k*S!O$@mlI$$Q%YSBWf[Dk:F<R]=geee>Pr<3p?!saGLN_-;PAq[YRrt!Fl+ZN6'BAM[42HV]B!aZ2p\-s#cqfVI/ItM\nT+"$Q[H3C`49*P_icp#K%]`3ptV-U*D4H3C3RC!'o4WioVhAVFHF8D[s;iPr#&PRJD7BW!ND4"YaS3H3/.I7Q^Z$uH9O\lR6eFi-'&a'uK=6K?`[8gsgH4TL.%0/i8b_gNPAQ0K)cn*+2hAGeJ;GlI`oHI(L9Brq%dT3k6Tq<kfMoBkMqp2cH&7sObq+,Nk[%AW2;f>L"d&=T1^e"fc%4X`E*!\1P>%q1SC&k;-W0jkX0=bl".QjtE'4%/i,(Yu-KWU5jWD.CL<4\]j%/3H.]mTN%C,B5ef*kumBO.Ch+-QGJnC#$Y/:B8:KcT&ZhlhBJjM%launlDL._GS?%[JpQC[r5ABL9]P1j]EMW[#Z14m6kFRY<O.7AoWS1hq$i?XI?lULL/jnOCgEqu.?"lOuSai!h)cj(Mr3<C>IQM9g%?"84NYpV<f@IX6B?qQ9#'B:Y\PC\(p=S4H>MR>Tfai^7*%9pHhd6iNrD1L%$W$66#NkBaT:%<,_:]5DVa7]I$$U@?JK5412nkCXb%g%WU&pA<pL&K+Q<9g'bb2be))jRp;_,+$O$l8*Ke7#i1.:9WKn?rHM15PL:>XJB78Qu%nmXL;T;EgDFt9!;rOV7PSgAi\HUFM@[=%DY*'oafo-o+dm6;k@#\&oh(Zpcr$;+C*lBo%PoYV4Za]J=%k0?"j:.Hp9_!b?3f5Bh9s%GGP\]1?CORsp?krXXt.)&obb[/_X[%T%0l&lXHr')HBA'VT'BIu)<W$phOLfA<cW=>/DdT@,e?<p>9omP=9aQoQ8Z/tY_o[b^5fR_OBeDLl[c#NMd#1hW:Hhgl4j\(,C0&7:%LNKQM2A,Ca3EPiq-^a^XlI<N&^j"FHet]A@^j_eYH2[aSpZp(LIAlfgmqdtX3rF9(I/LbU^`OQRL\R,jKj5QQ$*0q2le<K3ZlQ^\%)Rf"^QIaJ@nZ#_>hbjibRWYd?4)!1)ht08XDX.)3DLKl&bVB6no35!S=T&$KE!DhgB;-;r*!!1^Cdmn+I1kY&0R:WL/"R&`:g*8V%+T@>&naqal$@PWA#8D((#GW1QFrd1%K6g#XUocAdPO&%?;2]GOjXCKg(^\j5T70TIGKsf[C,81gOUK1:27fMZD*Kd>1^:BV[5EuW%Mec8SI4Utl&[`!UR`fdGVuAlTg(0JQZ&<?QhQk//os];XI2I<tp'e=$71:'aAqZ(^.>qnI/f#0H`*1m_R`2LsGj*eXdN6D7nr.;/%GcF3SDTB+9I^G/MdmdZ=g(mik=A7HnF:q*pBI[G\nNNhpIrgVc+2i(55G(g?F^N_V4_*2("3(a,a(1$4?H9F6Dk/WM-*B5e^&+0T%j/i-Fp-kb3A)u17g1sCZ;V0a.bD9Q\Dqo24UY6L^H`/`tbPWWDBj9Y>Ar4a1p);DOI4SL]MT[!M@V\qi`j?9+Tke.b5o,I98%"2I%Q.)&p*b*ih2.5aHd8e-c7nS4bMAt5S(X#?QUY7N$D38\+kD3i5-p7<P(Y,+ho7fPh!aj!T2*5EDr.uq^F!"lF=i[;LMY>i2)mo,"%DAVFHdH80ZLodYIYm@_YV&A;OMWA"nqC^9kS3CsVW^X;BHAu997%62*1T!;[g9tocX8ur/JbHS#g5Ka8?D*%_NbDXg,9tn_CSFhe%3MEWPT&9PP`u"NSo2kC")W_o"f^R(f^O#e-Du&/_\,>g]Rr?(=4\p.?pL!sL=2"9nmr?Y4oM<4dV7XeBbKp4]lS!_YAafHXGCM"'%RJsD%s7%1<If&8?Vu>5ZmEXTProWikVuM/0_g<.>piq(o[(^;:OtZ&40B(nDm]nu_StDXIT$P`D?'Vk]qHTV52ZViYGkTJO\LY[t%kGP5Uo@)aK_c(o^VbRp$.6YYJnDp2]G21EikGRqIr-3ZM[rX^!F$?LC4GU7-]5u$>j7D<[j8&68n_p`9f#R?K+4F_I%$1D84`7/&%B^r!Uo>BV+_aEaj?68Z)HAE*j_*>GbXoR3tHYVa;fH+43[?[%^C9`KTRqiRtch49/lXM<0<pQ`NRVSoWY'kH#lfdop8blU4b<p!?%Q;V`p-'lnZes4Miq)L\$F+2=D\`K8Qc8k!R6h]3pm?G29P+L)^4f4"a;GAJ!PYt2K;hRf7UuQNDMWaaO+(C-cQC)0>0o"neMd*]E%kO922iNZTE/_!]I+bq?*Nt3jZro0RKP<\q7s57moXn^[c/c+D=GCFTLp["L,ffcnOf3EI;AX?YD1_[@Iee`AmCU$$?*FW0Eo9QjL%Yc[Z5+^b/^S@6%*If9%aV[8k<9&!X,!qPU?P@#u)a)=_5ho;k[HiNL'M:C/afkBn6H(P&rl`]/r0_HMI,"@aN3`1(mA3j'*2"A>R%+"n_6T8fJ'_Mb(LT-sH)p%*FnR!f\84pZo=WVS(7aneU*iS3]`0-@*am1_I+qRTpBD>8D)cWNGmqK^F`P>B_i#c,1lr1oOS(ujoS%FdAr_QPc?ST>&tU4NlnZ5A0dSlK@-U.H*RkTa=0W;tQ:8POrA+jQuMUl9&n\C_tIF7Hir<BSi@fINIVBTV&*R.\EH-/>&`1Gd=.j%.W'A&66XLDjO6oq8`eEN4q3Z^5>R'\q=&[BqE3DCcQ_sZY<M(;abPp4dV3[MjJb:\c&]X9*<5?r5.PNZPlK=\oAT:_pmdD;P;;G$%4<-QPl;J4cZ@5Q$YLcQ2I,a)uY!0l)rcF5(M`fpISJ3&D<@=:5DJl"MVi;57rXU=Rdt_W:0.6^@_#O5K,?jrK=VD$p*Q&e8BrEBL%D,G,[*kA#R^p`_X#:5Rb6jj7i6TR(#1qLpZTkL3CirF+SYmqYn=Njm.%&qrp/>tYPlg-i7D,bUK5Ge[b'hq1rA"*BRI<n)6H8T8L%b#_R4+=Q8+^<QYP:,`W#)S_f\!&/K0bQAakO8>OrnY@851W8PqFD]+k-^gMC/G:11))5trSd?Qb=nj6M?"IFdAK@CSh41P[<[Z("%1dV+DO:;mc_.XMkQBRsMLcPoM/qO<]o>YU)9^Y1nK.1&9aBh>lEKs;uXg>iRB8<D1(7.st6J%POoPpeS2l6+Al[8?Wq<=mMeYU`m%lcU(?N)JiNdeU(h5()_.kc*mD9;c"G(Gp5>Q+G6jVlm[9=(74rR6>\hG3L:>qFZOGlr$o2V:MdM+1`d]GE)B&0:gTuVh*4&Aa3I*%FR@bm(4GQ'oVlWVbGk)`lbjCH\kQJt,0d+GFCA7k:L,PZ3chf+1nj7$eFe"LqR^l5rn-o>;qL?%c8;\&;s='AFhM-Wh#M-E&:!OG%_,E9$&GgI=bX+6*;E#T<;sdW(6anDf30O&Yl$VVSq1W^+Ui(IBDLo04M*,s>jJc?1QP12IPhAcsNj&m2n^^F&rp"CP?q]OpXAWI[%%Ak,t9*!rK_>'5U#IC$<:,ae,r`80QCctpI1@nmaZ7qYjZL;>Z4j-T4'fI'p]&uiMb*0-mA4^4K_23LKSD:U:3oMtPgM(VqEESE"%'rl.<fq<1YpK8ma1u>2O+$h_<jFuMRae+5nP>FGV^Bjdj".F00p]-h'(2a+:i,]L5f[M\G_B"3qbR+73EV1O"!d8:p116QkW@=@J%@m:jH58h8S!1"e"AXJN6<.7Bo<B`i9+*O:np\AA!o1-IV`uD2Q/]V"=k&g*^rQ]?\YfhF;@2@sS]'1lG)p\#p>iiq'3#t-CLDt.%%hSrpIq7Z;Ns.'Y^q(;@9Q?2sifD'HlP&InMSR+ufr0tZ8RQgpc3oKNI6uu`]UCbV^6hR#L957+1kLQhlkG%p\h0Nu7F[h-q4,bMp%oiHA8e`j:360m/C,#!@Y?P7)LeJDT,s'K.3iFf(YY8M-P8\4mH>ueJIQ)W\=rcid;DiUH=]KNtfa%nqV*oEIIV]Ti<n'1COO131(%k4n2]gZ*X%r,gC/5>o@joA;9/nWD/^UHeXjr,]FU^(.IHfq6a]lS3_W"$WVg@,o:V3glUX7%O>*cW)+RUS"0Qd6FUgA[fkd`(sg3%T>EQTD7E.RgJ?8W-Y]h(QYu5p]BRN*G1dCFnV@r_>o]S%=FI*lQT!fJk<E8NVV[[r:u#pOY@)[/'BF@o!@q8U\d@*8c2B?rm9e_b%s5Mk(hq\026$KKDE]8M5-+3ZhGlJj5[:h#Rs5WM`?[qVF[r:\`eURDSD(!pGr#kZq8(,T5!AI/UDbD(PM;.aB@SrY5GbT\j9l\X^%3.9!i]kLLE$+o3hEI[UjG(j)Zr9nq*H!3Dpjn$!0*gTU.cUhZdr06<,QVUdKEI>Xod4"0LrYc))]<1sQaRd0Ej`;K88,JfE@bIY2%T=TEmpuM6RNRiS`"hMHim=mkBYQb/-@aX<W3pY@X+6/b!=HaS/^%t9CUXYfGL*VXEJ,LF6NF.22niJ*Rb28r@MXUT2KDBC^U>+M=%r_^E/p\rM=]*&(P([q@nmbe$,G4ur,s6Hk1]'n_KhT+s]&*_79[E1WkrVO;+q\T#@_8uMBoT-WArImE5]DVP-,%^bSp@efCja&#X%<huYmR!jD;^Co;Sh>==6htc[4pc6<?<*luimH\R"o6hF=fc&Mpfc[[!][^[)m-E*8pG)>JXFYhk%=IGn)H5"$o4M/%R*q@RI9db5%XDV`o?sf64oHE<V6@Q85J[-mqGF0ASN\9cI3X%[Kmb//<[^CPf&M<G)%bRI,k3R7C'lmuCWOXVJ=q92YXj&#Cqpo?@DI.`+99&pc%?>Ebt=khuLf!YcE[cK'kQ@p74fc8S/#!99$3V7N=cYu*%TriK$YI3bJC"q[\f!Y[(BZjP[/JW;>B6.0Z%bRJWblL!'_g6mr_i==m%gD\;i*p9r>2;#/cB<eljjOhc?YdQC@Z0dpr`c^(=(X[8nf%P3s(RlIY[5K&+[;W'D=;pI6m@0+*0+Gs*m@/9"F0,QI^KWtXBEYp6%(AQV)5dO<8K$\OA)]<<IEok#X[TFIdB^(@<Xr[&)gH_s%d8jp$2eEtp.G@VM[KC\dCEm0?%bRJW%=E"S@)m^VJR,_ld[%qA),I@j%1E*r1Q_gh#Nbo$`QaR)[[^?9@ROZB^*_1"/D&o`MMW8C%[UTMs[YFC]m3&W#>FWUcG0K[40>Hqde]G6_"5>A#(TfIq,DUM,ZaHpO%NbrVKCKlE3gY+40[KaA/Qc%^'99?PDcE+PQVRFR5C_p^F#(\@#a'9-LD%94f1"AWiS&3Tqbk0O<Vm(?Eo@/M5&$Om<XMU"Yr@b']%>1Y`R7,.R8[=/&>rP.An(ECr/J)3V]^"r,ArKW=kj2rZL:-ZYu?i#(]?eHH:kBmpS`qR"C3fS6*pY3H3pX=0?G*[KA@/2GL`[\%t%*m7m(g[_^uG?;gUj?7e?T[\<kI;;aAjgj^sab)%g=2k'`!U8GmUenYj]M!-cQ07n<VuC(_nt7i)o=U"G32VWr[`7(K;<Y4=&#mau%0\Z_Pm.5ZoR%3b`UHT2)G!kPYmn^MSZ'=EMbNo!9[Q1fN^Q4Df@&]0sjmJh>^-qq'kZ3^0ZSqXe&-<_"kNZk!q[t`@p"cnu*OYbW%]A_WN_.(HMhOWu0fmUueL=Ua]_s`M%F)7Dn]?B=)EsNaiOVPNI>?_81+.4clA:9Q,5bD[o-I=>\\KNQ^Di(#2V__]-OYESKZe^tb%JTX6F@u).ek;6,('j[ir#H+mZpV+rdEbS9(P`>q"HD)VDXE.2$6N00'q8,meO@5Xk4h]6BmZZs[?b)57No,'HXF\4#flA-J8H%d2%46uM=n#-aTWr,Y3CHF=<Z;($B+nmEDNkJX7d)fSYbpIj]X%Y44@+);AT=q"!k*S3?Fh,-kM<inOfQ,<]5ua+HZ`mZi&\Je2_CM`1%@8q_i[Iol/Ul:Xc@7n"EeBo\5_G)M^aX"i=,eUIjlCH#+='!;OXDO+_PhYVK8a%n,fd[<Dm8/mU3h6@hkZO!f(fbR6,[=O?-g8C`%*TbjC^)mKM(D/_TOg@ofoCEZaD@F\2cjrduJMjQXq5/49L[K]c1rZ4Gaa7-$8?=7S4.oM\g@k`-EpZC(IQqq1]!b*p(QW?q:'[>&%bG574)tt2jG^l5_fB#IDFZad,.+N1]?M%7=qaPiCj6ubh!90U:.*(@?S@F`"hc8@S/V"2a'of![8HZYu#oFin(eAr;F3c_t[@oRN%1_A[K=F,!QMnLaclf*BPU1ghr75s+JV/)f5^b8.]0]:E"i1Q:@NZ<S_"TX_[iD*5EN]]56%ls_DqoXu-CE-7.YAYF>JM(6A1(kRu%N!n5<R:.`V8G!:h\@)AQhK1*tZmVNBm08i/>3E]uZGda$!%E&-'gjq4H]Kmc]8@_0(KHAEmrY*;iH2(h;q#=7ag0c!'u+la<*'D#%KZ6cHd*/7fJ#X9c:MndR5q,(nPi]"aKGRstj/k%V+oS/8!Z,QAd#Eqtp@tS=S^aUZTUVJq,:hGZ8$F2nI^LV&_p3#>7rHV+7bVMX%*qXn7(]0'mEB"D1S_.J4dLKJFEK/bh('Fn0KA-l?PXSMW6!,pJR$LdKW'rglC*IH[8;mc#'Ps$#hX@:<\^.=bTaol(&rNtJQ&(HE%r%:YI96ZHFjB%RH$#$JtG>XX[:_>C%6&.O#+_/O0a9E=Em:Xg_Mm;\(&eOI\A9nb`b`Y#HZdu^-(:lfnG6@:\:?Uo<VJ=_u0]F9n%X9Ap@pX`!^N4iUt5%mR$(=]J2W&n;>UKn.CU0SI5fF-KIGAd<fh^0CL)h6&;g#FPgq_`ZfZ,CF5-1>+OGJb)NHQU.2Mg[JV]DH`T%p.Mr-me:mOHbVLD%=U1^HQNJ3]t6A,OfmhjG?GIMGOKH)^t#[Wc1[HGDmc%b1n$/geS=NU>g6lc;-2/=B#)[sm,[7R\E@^QaU+I4%SaKBV"&Gl`9%Xg@$XG,06k4rC.M6G;b)QnA,DY-ppNoD-,N&+8`,+K-:#aU\c]*OhIe1PQDn`c/Fa*Z@mG#7FSW3^,E"#ao]uKL)%ibHfgO5,e,0+rCeoXog)G`Qm_rZn[OrnWQ/hL2Vl5Q,VU6/::[]VYnh1B&:1[%nnTr3f<E:u,Uj&Y>D+SR;6FioOs3SQS/:6U%?t%=(Y+]_s?Gcfh-J26Kg[j&mr3SgqXtDdQ<?QoEI0i_Wi;1En@;=F]F.h\Y6?13sP>.jIi^Eh$-=$q/Zq"^DEMqcslF%#eM>I"5P-m%#s/[#ZU'qS>>'4WQ?1!rk$@:[Om+(Wd/r'\pGHio4!c-?'6&1:]Z\TQ*A\i%1IZ.IO(*_Ul*4e:aBQ\A\09uCpXX2Q"6uN`@FLQN%lV&qNA:dr\MqY70@fB[*B0Hn(%/OADOY)J-&cZqRhlGW9ZiSU"+SC-Hnj$R122R*!/?TAF5-09ofD[qp-o'm;Ln[GcAFJasejW*t%VWB3n:OuPFP,\*AF-d.1HVDQOO`8'D2&tTa^aB7>L=50bL7@(MLC3>[X:%([J#AT1Ac&4?/4OCA\Aoi.5LNEq8uV;$G+#M,XH1hA%l`2X"h0g\8GOe'C,4rYIcuBb`cToU=.)UhE$!?4-A>g&9p`4nj\=OPK&m'lH""(e!=*ID_AO>G^!m\lD`n[<:Qbb^/Q6?'e/nYU#%S$ZYmHeFeNKT;.t5*?P60@PI+'fNn@FGoTOGqPBlX]%s1)(dCQ?OcX3\`b&j9j"[(rOOrh#$dB>i5%%L6gHi=0=Q)do%5`HNo+t7%*r6<SmJ>NqE<@\>lf=G;Z/<=*g0`=^T_11j[re_TQ69UY1TMfF?rsS&@WT`=Pq3FP&\8PV>^)'YPQ;$`;1LqC6K`.d$@WkBmUKnD%!$#b2q#QAnH!,P3_#+a0,)kHS6#D08]R&M'<S&F!;;tC2Q_kV02BCpcB@m\-nro#dDA[S_l$_)V1CUmb$9j['qN+uA&j1?Y7G)JU%;7+uEX*70[d'9eZc=6NaY-Li[77'(^%'/ClU90"if29@pWs%Cqps(&pMdg9+DI]ZOa4Ei*<ImSp#[/;X<[G(FBQV>]/l/r.mN+%n%,'t9gF!>?[!_LmiNH(\so+Iq=#E4Bn]SaX-']J!o:fH5(>$Fhn;IG:$!t]W>@5AeL/s'2@6s>7uc>'7V0?kL]Q<![D4*TZP50V`C%g$,m9mlG"b#mr+!+b,WRdPr35^SAK]@bls(lXJRhS@EnG%?Y(sYo598%8aB.L.oCH6A9>3Us?@hnuT`5Pt<u4f9mnQ,"3ms)1P"%%3,s$jr[s!,bNj9h?#YT,l`fS@'T%.PgHZa,br;k5+5'Inn1d6U"2NTRmucFE@`L@I"SB?<SP7G.h)`c;qA>^/JZUA!1WereY$>tE%*"0eX=M1,DqRWh;7A08*!l$eKd-?pN&AuNHQd(B9/IMfA1)=<7#]2!91s2k:U;O*aT'/'6R[+@fdtKT"ET`o!DeVnCbI2:)D]oC[%<pVJXA9]Y<EMA2>1BN3V4k\8t(5h@O]J2FrPnt&f+Zr3%WaD2+%Ym=*i"Gd8![%A&])%@8ga+TmhO?m6*_TC",^4Qek>kNC[u#6J%53]4<T*b]F":Ye&c4Q!F_/;g)=AST=O*%^"N0]K'0.jd5&9Y952WH"p48N'lCA^K;$:5Xh;BH['Jf9;,'e=RAX%EU(QUgn(p(]t7%V!gp?+F,^6C)<*IR1#jj"3K)E:KKQ<)N`)Ei?"g+?pOi'<?gTM2"VAW#6=mB'3@*g:=B)fCY2VMh.&AF2N'cHf,1%`2/Q9f;&Uoq%9m8`Vj9+8EWE;m!XK]%'Bp&*Q9#N?/QXZHI^:=*DArJhS/ngud6]p2nL9s*c!R[:GOFbo9Mc3XHF]eZ8g-d;m<3ZF7fLfVs@I'3p%^.0$8B6AD2"$n)RG/oV?@hr'p]nS_db<ZS>Gn"@h.t.(c.G.1k9toXKCHC?e;NT0.)<QI+3RNU3g(1nCFEHhP]MM0eT#r8^K;"TA%BK:\=AEMO0'9g7Jcf5Tb3?0n+Op]l.Cu9nOS<!WpN1rHDc_B7-KPD,=N*o$VVeVQ@[bQ9FU-f.l8/'8b>O,"XE+4]`0%;)p8$_$j%,ApeYK!%N2H^J,A?L0s$o*]<JAYVt,.g'[CoG]rTecc\rWO%DZ1%a^)]n2`C9X&%6#UPpI_?``3fW4V<SB22-8DObcgcN>ea*kHZ%arusEII<i"3n5&Erf3#M3,QMMST]CWf@CCLaG%t8(qhi*kpoLs0S5(9=2:d+o!O[gg9?-g)rc@?Ha!T72`N1ane#lt4JfMN,JG,0%"=TG+7RMZ@\#ue$#7qGT44[kQ]XVkmg'7(JMF[m8Ti`ut0E<A7NS3(j\8^r,+>=1/3/N;XE<O48Mi/\`Wb!>a$b3aqMaMMUXPu-q%)i"mqBM5qaO6^X<U;jJFd"tm.Fcd8n.gMd%.G<K3ETJ<3>n\;Q>e(.+fu[Qo\8n.Y`%KI3Lar]c9D!5CPtUDj_$,QD#FZQ#GnjC5%@2Y9q$]$=bWS>U<**kQ-#U+cL/JD3gF2S:#c4HS/OLGO1L^ZuHNPb15`KfbP-Is@[_U(^_1gkOk%CgHB!eO2!;sY8f?cDb2r&]1,%1WVh+Edd"_;nGEj42?c&oZ9`?5qHc0Znr'pMRV/D,9p8f'2K+$-2PRLI7LZc`'SYSqB"CdnEeYg+UfNK-o"%jNDLlqoW1#mG\^-n%5AW0.qoD[2j:t/pg.V?47n6=?Wf1T/Oi)3Ol*YQJ].6\6Cgje,^66GK/A<aV3m3F'LS/[<G`24SjLZ<@>tg%r(X]p[B1+.l]'GlY%7I\*RK>eCb]ghoZm'm@)D04hMRMH(il,_h-YNl_(&K$Sc.WY/<)M8k6=R@Mr(2kfc6o6dDTmNmc$ZkA*bae+YF1:heT;0;'W(.iY%U5oU!'IsBC)8T'>&5`ap-j_F.d7[%N\-N\:4*q1o.uH7#*X[j<3ckD2%!KTUhL-0Bs3e[%f&06\&d<[MOu]RmQFeLnIC>$sP".E:%L*>b,Rf[E2NX?2Y#Qj%:Dn:bIW5I%*kisoM0bh4a9Bt=9ahlUcZ-4h_)?NDQWjZ(P0Tas/%(9Qa)eMZ3p/XV_2GAr<Li6s3P\<+1%qFd`p9Q:RX$PQI0dcQ6J)H&U=LnP8>LI"kT//@EsMMhF'(#%Ddmi*E-04Luc),+LQ+Cq'o;-!=",<Mbgpf2/,:=:m@p:grSjDD_k%l7F9EKU!@ad,>O+67l`D&\UILR7'<#M`?;$@?MVJ///iX-^m_*V[`ieGtY67,;(f-()+nRKO?(9+7Z\+c)F'`!`l@_ikfrM1>!rS%J\]5:)qE@%:sXu-?BqC8pM.Z9q2X)3G$%uhY%&neG$XsmM^Rd%Qp;VC9Q3)P;e+jo'_?o7:d53lnPkH@]'/%X(Vd(J4+W>_E&OqV%NJ?:X_B,kB;Y%hmK;eu$$Ol371/2pO1*W)lo&)mce1=aj6H^gqlRHs2cr%JNN-L>T(VLUNdE#c4IQ.-*PDO02VL=.pMA#m@$([ha%#PP<817:c_Gr%&]QVK;83o@#&>p"/I2nf$/80\Kr=Oa7l6D8D^dq+mLfaj^Xb;d>Lq/fbNn`nWs2G$RGp$.F0=^Z,Q!P,0UBRX5Q%*'?:Rl`_J]kiR_/=!Gn@eZ\:U\eF4\?e;pZe#UCc@n4J_X$_f*)KY2*_O.YO?<p-Y+G?:e=((5L5J4R*(eQNd%Z-&Y/i5p;D'FB`%na!D@Pfn%3n=%'j41DAk_/F3s6&]f)_lX"J4"9XR\dg7@qr---8&M=l01g!g4/]5P>)+2+>sW;)pu0aH2_sU4bc<8Pq[eNaf1E8Y%kD*,oNF1<MX&kW,/V!BW1'D!F_lGR3>.lt5dC'V2Wrq%oi.b<gmp/fX]XgkPWNVUJFe.H#l6A*g/jn8/b1*Ho$j<4u>t,BsU0jG%%$qJuHk?/"DaOE,]\dTsi`8T5il(QdGkg^io9BN9]?154k"`\_Ei<[Am=,1(u1n?[@gQL?2lC]cY,Y`:Do#CL+:PY0o:6NMm6]WCl%/fgfj8agW_J?UU.Fm5!%OOZEMQOXlB(%O[s\dYR.gtbg;R=+jPpGG26p?OA]s5ofCS]8FU`e;Ug,s,SUE$'aKqR;[UB?I[??aQlE%pA*"JCU^UA\9lU)M$r82SNEB)6OC"@"8W6>bP,.;Z9&T4?Jl2QZcEqFq5O@Le<)I01bc`!#i"b$[e+$Z[1TL"fg<ET5D'Ag0/C>s%W,&!$&,EXQCch8tJ@-!MqJ7>4G/LD:#od8he7HsT_?R56+/#aNpgA%%099IipW\1i5C`E'DuO^R?Voln]6icAs49K*^,rm;LYn_I%A9XO,K]HI)DWu=i$%:CTf0*c[K6Es5WHW%S'2\)Tp!%qmTAK>$D&hCc:,mFDS#+dhbh%'qL;)jm-oGQ@Fo;j`*[ptg8MAt^#6obc%_@)rr[sLR1(7MZgCfb_pNde5>jj:3lUP*-t>m*1@>J-Jd5Ko,m1fo7r-T5Ak3%XI)h!A$78XL:W[;Fb!_9=C*H_3$Or)+((G1L3&%k-?)]Y%'-I*c/Oef&bj20t&Cpj7GP'>IPICrDmUr<j2&*p)=6c]+R%"9&(U&(>r<_WG@ROEc^'Z5XYt^&[e*!n1"R.oB,f5G!H07%%+@T#fZg4fR-7^h6ZNeF3kJX5jn<OUe)dO)=PHp]6hto[/B8eegPUW[PIo3X_P:8K&j=^#ghJpdc1?`<3RAq@:l1)o=h_%:mh9Ij%B/p09^SQSNVS]j`G^J35T`Z9KqJpJ9#ufE@G\@1AgSVAcn\[Ohr,/cA>BI]h3/g/W,/(3;D&YSb&a"aJ4G4G41!7mmd[C:qL"N-O%f6%n;4"%sbo?G9o_!h*kmjI<jS6'`:@_+0H]@kS3jGo:EFD6-P#Aece.X06#YcfD5&3I1fI.Z[\7/D?.[uu34r_93GVgg5]pZ^R+%qAiUR-iJ/;TGht'5^Jt,4"SPBe6_cqB[Qfo,5'F"Pt:lGoIm+cpNJj6qq(kqs!9Qq2emLOb+E7TCcfi%0/-REPc4rO9q*F_hDCn/%pWt#hVUK3e&%A7-#ML`D3$G]YC&4DR2AM#.f4V;1Kt'j$EB:TS]4K,S,]b;o!Fkl8qk0Q3JThttW'h_6X!DSP#Y,2j\ZB%>>RGj_%pDk9N+T-bQP^,25U]MsL$bWUY2,@@4;P[MJCE'Li$K-Z-+:F,p)_!UJ+P7K!%H7UQe-RE:7!?_b1;[BRZRCS671=As@7T<(`]ii(%pUenO[FPJ_#\*-:b?3=]3Hm1:O.3@do%X<5bU$\171/#qnFHgBJg]n#V9/Nql7:`IHl#`^Y`eK\duO;dWL3"s#^gJ!+unjYCsb\T%SKN[`\OpfF/C;sd?<4=TO=DG21:$nph9D9p'U-4,2^lRbl`6ef-_!t5,U4M3/h3$qG2!-A#Uj.DL!!T9P.b^VReqS,HQAUZT`A_*%T,;]!m%D?@jFdeG'Lg\^-Fo#+WTo[lDdQsA3RqN!0WM#b'k/?N"e%]N]*cTD2_uWlAs=\5-36FN]iK,WX,'dYX(;l:@TV0do==Fg%jMH_oPq8`##UAT]<Ot]r$D`=WbC0#t;_rr7q%#Lf`.RsY#r0#g#S3ft%8<Ef_NQu8!4`==RVa^U,M3^nlkI=-M_O%l0Ku(qHFIgm%+fntA.r9M0"><-5SM$*ecN!"u^D&>P1'*?j,b^cMfW*"-"-YAs&e'H5G(:a+ltou0.LC%`DVlc>7Iddu?@dit*)eo*buA$H?70\N%J-fQ%3dY-ZFbKh5$mLlid80jV%70,jFrHa,]6WrK@b4gH!3n!*Q2Jg>&'i8?oQU1=ETe\(m0>nDTgf)u]9_+s[WXZ^]@TjJ1=Y"A%18uc,-t[F3!F^Hi4VC@Fbuna2)43[]MkeRrNl8F-O`XG[Z5n&1,lH>plpXtW`rHPCU/I9Hj0^K:_itYEmXSdI$ZqDOG.Pua$3Q#$%R*&[hc2r.)9GR!]p/q]:#\+ee\XKA,O4\&V_^oP,/BaCc@a)22e@ReRN)MMU<s:'j_46&A_@@3&9EcuQJ_$h]_gQbf!$k^p8a2Df%`S!O-1tisJ5raHO9F#C0G[%@7!e?[,</9ZgY\fU`[C7:)ZB1Z/C$Hrs.M`!;aQa-e0Q@&4g4Ktu<h20r7:%H\SRhp2A-^n`ff+&t%gY$d3J\(qVn1rYDkq]:i$n0XK8<1n;=\J:Xbq$uEAIV=KUPgXf_V7QKF9+l!1V]IRi/WjhIsgM2F&hrZ:nXN%CkSW:[^(Q\em9_C%2hD?B7QYs&k&lB1M4@>m.\""sLr5MdXeZ+oo-[HWGMi[PE=XVVOu'7E^do=t4BeY^1K>C$'M[QoE0*d%a0q!W(V<EiD"mo8?H,#f%?"S55!CI;A>-/K+>#p\l*+>Aa<t`f9ZH4Qp8#)ob!9)k'MHIXtH%5L)m5,ueKatqH^B+.X@G^FdD.Zu-^=*DD%:FdS_2_jRBjG/_%:t*Xnl4U-@IEkYf>#e.aeLp($'L_;FcteB*Xb_BWij$LS)qn/NUc@**MS<AY:>sK4Vhd$i]O4fK!&#+,;VEcLGQOr"9Bpp<k`Hl2%UZsX6-&!@A-ZZuJ+>S=BOD%&anVeIC_uNW?HMu;YOb!Gr`-'lMS>'#\nSSkT&tt,*Dbh0AGE`VO66B'QiHH1QfgGf`2,IT0#j8S"%A_DgYM8L,]&_ns%dt]D-OfHs27b_)W;WpAUKZ3GDoMi]k[Y]]S@&i'5MG$^ka.R`b_hg(ojB*"R2(-QVNM">=E`AK6CSfWT1U;7N%*!=TUX<b"U@DlhpL#$r#SkRX]!ubanp&^K.7Y2qgM.$!B!=XO`&b!_"<=-=\Bt%L=O*Vd6^^*reXHWEH#<Lpp>:cP]GajdfFMm?4%r'F*N\4s=!b%X)0-PX8&c%m2MkaOt]d/iel51aerM^OlMW7iJ:3\T2tA'9`]VH=Mc*2i*?<..3]PD38Z"ua^<R!/tM)UR!^<eTM"%[N^gPj%$:Q6"8L9oh9!C\Cp1fDN?P6\"ZtR.a5N%m;JW$ZYFWJjq?5t+,D(BaJ\lL$NU$)K;\"e7gpRsTp(Ba8]YKIEV=g*M6m>*%Kb8L%Q0@m@*?5;$:8J#5;7aote6/LfB1-I_19pm0]IELhMDB<n`RL;'V]rq^oQ=2gY%CXD!Z#@]cVaMQCsIQGn0';*)7,u(>cc)`%_Xf)WK<fu>Of77P7H52WFFZW&$&#269a`XMMlaHgkMB%\_/T[KouVt4]jQ+@`hLbiJ2]=pOYbJZ4b7'3Z7Q\3-l3903OMC!!YC2`%`F$$T4Ia0Rq<""+5LWbl#+[!6&i"*+)?'D*Fc1(uF;,i\B+"r\Gqc;ep#KjW*;i5$Tu^/0)&aB[pe4c?\j[/n=t!+_7hD6:)/5lB%5(R_gi2d,O+r68h)2hqYX-&L2gVOg63p>3BPo"!7%hU>0OYZ4R/X_GK5[-!5:1<oBk0"LgW#/9cDlRmm',iqDVo42=G@d?^Q-G/Q%.,.RUJ?_/ZFf]gFCGTH^;Mc%n]ttdt1h9-\gIMh`lr30'_FnFP&0$$m=/H[1H&+jM[8HSW1i>dma,Mq0(8ij?BY\@h7uLXSFhYd'%2T2Q<7$(9@-eQ$=[`&pI>lg7HfL$VBm&]Z5<J$#.0"UX'[J??\k"tCG6rOV6`u%'=>q@/`1g3fI!H0j*_&lfHLts,8F'(hrm_a-n%WZh/\VT8dN>;u7,Z%Z/0[d@,)/cr,Tb2"2-a?`WV2B8`\1\B8HZ.!Q733_"DeMdf;C]KI4K!=qEqPnE=;F$]nRftD.XItIWOt8]b%[W*)%<`T!_5/iF]R1Yqn(II!D5aCcj(2+b%+t>Pq+md'`VN-bNkGk[XoIA,f3m\mO0l9Bah6Y?Nk('mN,fDg(]:_lP]4G=*a9B+s%(>0'6T)d>]7i]X&YaI_b/XK/k0@BWlT'6V8^s)WVeGL3l8XbK^*X70$K="%c)JrMp6^jkP>ar_i8]LHc16!3i0`Zs(rfO/EYrb>)%!b:^<Y1j`FBjPqKj;N6_?>:lL>1fB&940SrankU/SZX6hZ'o#rRM;[F'HIV7XO%rsq1o%37VNd/=oCso?gG$Ko!GBPPEZ'0Hq58X%ZZ*1a3uNP_5I\^227'sH&\CXZb@DgB&$+QO=ru74*75+`XD$_rG\eQ?6HssH-+KU_eb*i>R]8l,mAt]\I3\(Y;,]bM,d/q0'PQ0Y%7n&.5Laj3<@q&Xu;N.>DPaV^+7a<T2PoCHAgc!isbgWedF5(A$92O%TL3r!9[__rOdV2)Y!H(S(rnMlRFYVE"I'$f<Bdld;X.m(B%g#7!"H6[j_[^PF4Ja:'$eHP4jd1s*DL[!7]'j!MXR9<&hVs)3J3&N%\3@%?(Da`=%INTA3(^`'4MRR98kp3!?j)?"s=mcu^ZidU%%1^Ca(dfJB9(*.0]_D]bKIOkSKUT,>*i>+ijf*5)67oLf_k3d:,b"JT^ak:TA%d)_273"V8_+Y@1I"\e>9PHgM$/\FUg<$,PO0O/=%baT*.P7J"BAI+oCiE;dCYKb!8lAOj9?`"XJ)f>9'"Sk`>3]412B0%cDQfT59n2$!pAa'7f#*Abdeb4'k3t+f>YHD%<;W?s4@=9p)%m&:R2(lOBt<6b_*#(l.LmY#"]@PaQ-8Aub'bm'hQ@Z:d8R1CNT+\2*R.LaGZ2qVd.Ja0*eOtXEF13V;M`>b1D;`<m67[=;sA4Jik%MSIN0Jn,34R>P%]:rY"S[INaQ`2-*6*P2BGAaU]!Li0=^.*2t&L]heE+W1rYI&0>Ej,,.^5ncjHWDlFJ(%Q2l1JK!rD(qdg)9S%Z%eNM1'9shL1e!20T!9TCW"g>5T2muGHHO%q:.@"K\8<m`X4PIpY&s9;N`bRU6q//k)YEJeBs/N%OY";d9IHJ]QU<it%h!\0HDF:T@%?^R`1RsBT`Gg\KXjLgi3DnGFVOMJ&ZNPI,5_;in>1Y[IeH;`bTF_eeQ*o#+dZe5<+lh,3K\\mr'g46;=,3YE/*(&;`arb9e#Nmd;%XMquhE[q>O8;]ho659Saj)cS!c5gkFfo>4/JT3e6N"-]-JMd#@@OR#jl9$1VS>HUhi\e^_G?\Pb34LIbs!`]81K-%O:A.j9Z69r?%HnE-8LFjHjR.JnPC_2.e5>u%#dKWPoVDbR;LaD;3SrNE;"^O;l.;mDuBFMo]W$<6<TeK+Tn0978>,!-I0URp0+ak3.:'*_oCaMR(%CdWMf%m4Q.hlf`i<_LC%/RCdpgsOa)Yr=8+,%F5SB1@$u<J+)o8gHK;_T&YYQ#aI[oQN77Dkt)VlHM0)-]KAdH+m9aL2<_h@8b`n%FZ*e1;CnN9CXWiGCNnpKhq`[F+kN3h"m%W'2A@iR?n]fL76-UrPfaP(H`]J^*1e??7V=Wh`[4!^78\DZQ]30S@6/C+U%%4fJg*N@%cdkug&`e,[Kb(77+L;iSY%)P.<GEcDGQ#+0$dE1E!noqc<f/rl*d5h#Vm;`Gadu(S=SeaMAb(IC8fQGIIZR[:/a;?>'l6BL$?\3"%N9m"EW$u9KNr!OS;E/KO(EL(shDk[M2YOL([3qM(=EE#U.kDWnHPfIY;>Cncocf:TGdKL^F&*<Y^?'_Vnt69a(+_h?>AS7(P>2G3%*=G1<K[30.a-IG+rQlmNmNn#+'-3X73YLA44lt$''2=67!t2g`?QYVsl9<SIE^r?O:C,jZ.Aa>@nY.0/N?fc4'2@&BXEPjfdlR&s%Okh;%3lW4q*]cQR_*\#7gh;Y1Qr:5<dnhXh$u3t">"`r1\>DCJ?b2.T@0cHa_308MD^p_,"iH+#2,cAS.XPDF07]cZo?ob<jA;[,%f@\a.9SR%YE&6#&1oIUa\P_!\QC&\Ep,]"6bqjrF7!rt7h9idM"T^'3SN5h$M!o";=M"M8Pqu<%j<SWkkGoON>Uen\L$n-D4kU]l%=@(?R6X-Xtl+ss1mGGEB_?#T%+DajP>bjDS:leD0)DH_*-Z_[iS!Au-`"IAI'r<Xk;ONqMo#_fh9o8UbYbZcQr>^:9Tsl<sIQ@&/%*(9RQLYf31V&au4lj`JVAgnth/m*QFdU*jQW5um#GIp$h%Kk;bN*2`*qmRf=*:uKgOtAgdSN$4L1[%jQ&YrOJMoNgqEa6!N_CGpT%CHSMRK[QoB+Qii!_@BFPIh*r9e$![.K<-<1$R"4W),uka<fIq19h;Br>H)o9ID1j]]fLTO!lES!3uW,L^,F_\_T%shc^!%"D_B/T%a,U9C%`oF0//&!4B`bT1kNBq9qnu?X$YNfu_Y#>s4X+>ukHS)";RSS55pREeNNl_a`/]FS+c%.WR[aH_224K!2oD@jmdoiN<`tL-%#(3h!k#86+a-eX+Zk.8V\sg2@EB%E*rq(H=(]R#Q+!<#uq>Y*oGI@#-=e-YN5p&VX&*FAepM(o@I]OOboWK9K$1Z&(>+"X&[&A]&%%Q1!oUN[&o]a"eedX&Uqj9+>nM.m;:2VMR6b%8skeAYeN,WVGiQnh8,UApl-RjD`cg`Cd>@,:*9XA%(Vr&AYp2ZNM!JotR2(WU?-%B_-QYK.n;$eG)pW1Qkj!SmV>#D'hug_+nb%/?E4sVAmDmhqt$B>>;-t^taZ--Y]=#@^M8>.@XGs/(`O)Dss[jfr?kim2j$O!TU1-%^R:'ka'1Bo.;Oq6mo:uUYHkph@t#YoKMu40)?4%=OD)i^b7F'.)cF8#i;:^e=W43RV(j22\SFrA$mGJl;N%@ufdfdL[&pBcK=U2;%[lnpP%.lui>M\lW=qcj1VU#LLJ+gS0U^EDtOO!2oFX?(*>'N@"(LE-1`==$Nal;Vh^Te[u1QN^K?#cA[P@_+=AK,E?KpW+l/OP>`%JJ[[I?@FWT[kFdk=/ojk:%\d@P;.UB.49>?-M>rZ`jdS%,Ye\fbBRM6/<MpK\*B/5eqV,fl:*bK2#i1!@]ID,/G!Wmq>TEe'9scn%JEgg*.Z]3#RY:aY,kDt.o;P3CPZ8,TG21riECc%%9S#9+OBHPYL[pP'DK!*2]]kj<>GV8_l/jJ/dhT9ESpWLDUiH,NpX2l1nT[]m%d\XiV@Pg]>isj6b"E[i\fXY6#IO^<C7"ZCP81`<oUpl++8WDIqk'%o?PeXq%bs,=*#$s`l,mhf^6:p)Mpj*)fFG)(-l[9![!7*:[%_-J=)i:no;:6Q]mbaR929A$[d.Gc!8jq;DY#SQMAnD$LM.*ajh44tjhMjE==H!ta.QDMpnWN#6OB)%6l=IuL5bOZ?oh<_*"(+b<F%d/ZQXVNsonl19I/MO#D<f7n?>^=\qI4>5bkd=h:*)4+Y*8DM`^1E(@)ZGFU8f%4!D%F\B@ho4CYCm*mhB+fhCmND8'=DT3.@>h_%%5Uh8-TW^*.C?O@D$kq("W^Yh+clnV;gGh"0Za;-%i@Ha8PFg!Z`r:'"kNatt.kjV]YKp2N)[1ZDkk0T].Xl),"YpK<a\?4]Y;BF#%BL_/0-C9Ig8C>^bCLToear!(:mtHOjEW-9o$B]u$bBX`%j66UX*26Ko"B;Vs)On3'adO+RTq054LBGA5fD6h6hr95,6ftVYCV"R6%c2`F,\9XrRb9i&-7X!bQ7d<p;la\9/R*7aKB$VAhbf3,AmIpYuBd=B7cludXcGTtin"faP3')K\[WeWR6aJL`/aH_9%V[?DaE3D4%=o;]KJ9POn,-jd/i"gpa,_H9h&rWW,c[kfr&?OW0Eas-W>;\37>!*Hr0s7bk7BN3Jl0](K$c*#:/lIukk-Mihe'\uP>oqu;"[X*g%P7:REDD/ihV[kB2X`_<78t&J50h]%)l6@G-,obL)euNC!,PsQ^f]R,R8f+t$_:>UCI>g"&5DF(!eLfEn=j&?),=n*JZ?n.MHj_$7%Hp4iFJAN]Y@G\N!)mFUb4=)=0N#\AO7TR*;k/)$.Q@UYI?kB9&&VA#ke:Ppbb&\P,J[o='0rcQEO"%c*6ma!4e%8cYSg1OYd$,dL%7:AD>q%'qI"?SXpeJHF0cuVq>"A=jbZ<b:go#;Y!gl+Ln#tp:''7uC/H*[Vo%4%?F$*oP92FmnrS05El6!Oc#7qf'Goe@m.a)Ig/%0^m%OT%/$eNK]_\3RUgH8B*-fASWh,P,6JRR<:NLE4nX#@\+f9e[!:R8L8[0,i9To=c'j!eN;Rb,POJ$M4*/cr8o\N%iOZcOtkd)%>$.Ve*7^(8[q\!T)`&oo7CD9XkFkR\KC3hXQ!8U-fbCG,4isIZb4WtbG?"JfC_]&5,8$l)e,j"P5=M2UUt<%p>#VRWe(oH8#/;H*%TpGV,1(St.Q"1g&,EDsRj9pO%D=p3AiF+Nb1qcX:=B$7t4)-?)>:l3(?n,;#mZ05j\BBe^W\IZl0[&6&guJ7SQ!5.19B*X&ZND!9%!/+H,J$*amFU2&13GiJM#N<8DN];Q-$KBAq,)F,rIiqUL2SjkN)>0X$jg:/E4_7WIY_q0ZXffUj]+6V%-`+4(U0Q&GQ./Ih5pBPm%^eDFV$\5!<@qQY1`G,.=1/<Go\a+,7oQ-gG\OO[9FAp,m<j3o%,#Y5I!^JValk))&S1D,jL=(Oim1Tu2P-a4E5b=sj&NUtR7HUB]%:q9&^aj?%BKuaOm9Tp>qo6>KUi1+^pk6%*aJb5G4F%beJ6nhr(;+pE0X<+<d9pM"0'T31boE=',XG7<g)E2Mr"5B@G6FJnC)c:)+%5tkD<X\2re%n%Ap^8.M!3T;'mepr8lGE=B-B#Ore;ge[G+eQfX2LsHj2WR/J'$m>FMUO=U(88m5Di"bYg6SK1@cB>:FgrkJX3d\d%_T^3A'U[Ei4YK^3n3;"tQRF?okg/^::q\.ZTO?gr/_`UT'L\^48;mHEZj43GTjf8g+V%@=ZJknkkM,;VJi5?L"`-HO5]cPUH4DdW%0N4<\c8sc3e;e9fa&TX[>T[/'?ooCUJX`5s6me)K[M:ftT5+QY>Hl(;^?F+EZ@QW,LMi6j?TlXnPTLmGo9KZ9H>gX/@B+6c!PVlk%^+g_totH%hJ7fZSf@\4Olo2L6mVUoh,bBgt*c4GgjeRDi[t>8UjI$.]"bu.G0)V_8T9hn]0<0WaB^;s/YY;8BFVZ[5=9+8c[\[-A%>]T)[b+F?#VoO4\^4'jDL^.ALqU/p-oGVJ+7!1"WR]JiL":[jU*M.YDbAgMaf\o<A&_*WR3qNsX0/n<nn_PD9+F_d%`^V#H'jnW(%=]2\dHMGh!Obi=m"IsQU5Rp]BAADZL9'WE(h>h"fH]_Ih0epcC<l&r_4&Ptj\<1cmF&Y'@<73frEAd]6^.+1QH`euPH2n'2Em`Yf%\[5"+lh]$<'rDJ$(hLh7'"K4K83dZ\g)YSqXSIEo?niF$nNaS&\!bhTnmW@OTElb[cP0+!Q[mLg"#`m!cXqP.gYKbYXBJP#Y-IXl%F)p@-I)QGY1G$$")),fNJIjA2*5Gs)A\cDM>mR[gg**CR#=@!?E!skd:r@ZA%IVT-8A$Ag<np_m9F"UI\]s)O8(B;s'f%TKDXf+i%X@P4<\c8,7M[Bj2=X>[Aqi?%3f0XR/_rX'6XZMV]lW&*2K,n^_GU?+#YWPZ,]0p/ZNMtSABN^jMhSup^os.c+;PKl(`P*IIGe)Pi%Q,LoKDScrSLsG94a=RcD9E<X;4rc>;CB);l//H#ZAM.u?m;ZDbJF2-(#;QlfDH5'U`^XN/@*3ZTa_PdoAAIg+>"41JBJg.=8`W:I%P_'V:YS%WBSe`fuE`P9TT:+;gMlE!!Z<dbd5R?Qi%E)s\<#cB!hF]A7AH40M],=%>llf3UROlsW#D"tb.LNTC6"%j7!g>VO;L[VA%Z?5\A@E%KI@B%HdZra6SFH_*S:12VYk#"p8=ZkEe1k>%V>ocK*Q:@tQcuML*[tD<N>XmhK-'IE2b<89$jOl$+@+>aESHdB*,+B7,%2`$RUZX<cJChs3P8bY5Jm1;CP`W.QO+BOG2Mt>'l8Xf4-/c`qK("m:A>:Fpg>6BYS]l[NNTJW/_Mpkb.bQsm91Mo0iVE6=a<K6&>%CW0%Umhb-Jk&OU:MRSi*4uEX$N'`oZCBY7UCCmG"#!eJS_\orahCC:?gr2+uZ'#mYi#m:,+-@F&Y!1-b,ea6Q7JTk"4AB[b4^CQP%*No\&Jt4##'?A\/n^OVh-jo)b'IG=4BS>;gIh.+*:`1lc$[QnCp^nh[c9f-WZSOZi+FkptU&\e_^USdR\G<)h@^XP1YbpBojtp$/%V%bPuY$'jobteGgNoj\#iQLVRSP-+<'Q6^P)[3nAH6>p.CpjG'3XPqhD:Uo$V/_Z6BRs+<99DB6@M(jeB&Z?XI"'QN7&4dl86CF]%'c<[1Df)?_r&DZZ8%plR#j[dNVPYH)ZF#1Y6L\ZhjXebZRFt^h.O=!5V!+&L[e6R*mr;=+!4dbl$Ysdoi?!VC";Wk/49;QLk+h:D%CK^-rpSS31AVHFi:r=d;YY*6d-%3>;dRF:u#@mtBEh[alm*pG.\_(5cRoph;:`q]6mOZqb<B(MDXF]7YfZq:n+\Z?'!u^+MgNi/0%@TnlbbudPX@lA2(Aqac$n`8DE!iN9RK$rT(QIXt.BfYP09RUG_@,aVMqTo_^O3,K,!.LtV/SQLI@V%XfB8>A*C/[!Q@rOPMdp_mk%B`VI.oj"QmS9WlCc/j8^]o'D6@I1<emGRViD$C\eV]j%JIjLdVcQk6p\&ceqF*\H-%U-.iGFXoe#2YRciM?:J3D<=BN'KN[$Xh5c%Q9s&H;2&"B?AZ;(3H%JcH7B+NMZMq,jlh5G)A%G=5,:MtQrDY1dDCf\Q"!de/@l!`Pp;u?Z8^[.2m17<[$Cg2%Dada&NMkaHWDDl%T7L5L%<dH:'Qab0#R>"d!Xk#2d3Y5#3i^Bn'G`ErV90s"mF3*_Jlc`s"Y4,FR9d_=G+;?GrZ'U1d;%I;qZc:!CngueL"n86+ED>K%D+If([,Gk6=<_q8bGVn,/lj9n@L#1D_lZJs1N(ua7q6$8_Qa)9%g*T4hB:%%18]02TUGhkd:ea-SY<f=+(LWM1ulqBdEmb>doi(K%`L<;#`5:0@PT!<!NV>@n&YWDq@H=\f+pl8-*@s(Zm>uc:\J=UdRr&fY\Bq6%O0B)kS7WXu;P$;bq(5)a[?RB?=Du,)Fr%d(l,$K%%Tn&,Yc"`;Qp^l%#f4*BiN+:i3NF2r\W"q+RW/sK..M$"s0J+#6aFrcmf`9t%kl?TW0H(bMM)23nU?&J>EQ[m>dk0cfKk`1\nIsA"%hbpPTA7uQgH82ZiLNTXfd?)W<7bd!?LVgJMYF"A4p1g"[<Oj;^<*?&#2958f2_A\J!F]EhN>p4E74gbNq+4'5)C6og#^KgiLT+#s%DdeE,oaV7(B/H.lZUKHQ:D-UT#tJc"<+k;doOoVppj.iHRS8oD'Qsib!mWX7Ri?>e\W;TT6lMDJBm`@5=$"ikop02*HEBR7,,9&*%ck+mJOLlIpkG=bSd'gNd?IZPq98XOrca8Zf=6cqTP,Ll-'3Xp'dq+htoMg>VerUM/!d8liQIJfh>%M`Rcsh?'cAoaQS:ahuZm6SN%i1JQ-Y?(VQRB[sT33?e"YnN/M(j*a"\'_]/1l3+SXEgj(_;qb^(YtUC3dEQ-26_\Z[:X6eOjGCY.9YsjafX/J)Wjf*N<6bMm%@SI%FXhj1$/kN%EtTZ@!@/o6\ITm<n%<NBNNs4#c;Vn5Jt)3&Ak#YPLAu2d7Eb"&[,]GH^L:rJ=o8nkbuu_glEn<h%8!Oh_WgC>/Vq6;%N#'(n4T\6]/DI*:1aT$hl:pt:;_F:H918XJ2NDHrL?O="V07bp`b%*+`L&K.gU)W2hX#7fCs+N<@-'%t=q)-<6uB8NEDe$<#&gb5%s0CBhL#$J_<LfCjDoir<Mp'9Rr-3]kK*9`,b+R_p["I+2KZ=L=):XQg`f<hoh?HWGlI-IM="(HPf#b'_K7=t5l0lRVK`u:>$eWe"%!gc4jIO'_)^4a9h91/&[/Ij4a5E!EpJuTp?<:$/i.5&sAd#7=ujcP@5S'V-jb(e\r2/@4XmUf*2J]<=NJo2i2.<"IY>g')5)U8:M%jTKYt`%_REejG*:JT`oi19E&@^+9L@3&9.Qj4:Ijc4abY:WSZEC'I+!kLCMp3aR@QmF8B*^9-D'c>Zm?qad*AZhCn0Xil$G)M,1Q%`jT:UD$!^p`S'jKK9#"DB0e9^Z6<T/8hnq;V1NkO6>+i-;`BTYf^fI^(F^X6L,Ah@/%j^Ar_]MI+*DY3PBY%EU]!0siN/D;/j//\%T[sfo.iPZE>bY\OghG,OpIjejd?p812U+k)ioI#B^KM%k`4X8A>Tso<SX"?,=A39Tf,(!F*N@Y=1]gZ_@^^$E?DG<G5MI6Ve9,nW%oH@Eq)p1[qpUM)l@ff-sfs\YsK*1_0`$d/3XJjQ<@nR2@)nbhn`s?#F@L39C@^OsYTJmSIZ)8j>3U#-F8Jlm'.:ca7@f6pQ[a5M/%^qjPgAM]Q5XkPs&WG4$u8k.9(>EhgPH"gGQ)TREh.+]&$^-im>?d;JYD*'8\CI(=XSTTR3OL\t)-!<.Rd]'Zdb:q51cYF7@Z*r<E%Uf#ac9%@<%eIFnd0^piB8nfB5<43J/\8^8.=k6GFH71VLTiMXcKariJS"*sd'"Eo&G7.7&np.mi3m\o/3f@oInXXiR%Gd(TqJK7<%(]p@FEg+e7$2%2V2r3<.^rnE4FN\UC;R5Q-RMq$>o)reb'_J?%`),#HCO'A"^%J,GgM*2%>"pg_FYaB5I8FX?/;RjfBkF04MO3YU%_Doic.PV*hLMS!p9s$D12NAG>b<6$bRiOO;THm8@<5%$Qhdj`a)IZ*/44K.UCLs+K(d)+anUkmjUAM"Bg=sKL<8I]#E7hV:D3?i/%qau4m?"LgMiN\5GfMHV<1,nf\q/1V+2#%:DP4>c9Q/#`gp8Vle9`dB9LmiW`>8[0@P1Ki"fFj`#Kot-dlXb-cYU_de,LS#U;2gNP%<dt.325@W1ipCP#Pj&/gC9\>lXqQ]F.TsuGp3]C#4<g\`\D)7aSs.T#G0]Ul.<2)/2pNuZ1h8hA<p/]='A&A_bH26N7Q.#1_J`U,%B]po(8jKjo,jH,g)lcf@N#/p"M:Eg:IC?&a'sNt^7\M-ga'0Sg0!En,KpBS!,e*s=YYdLI3Fpn&otdrKRBoDFCkqTrGidI'*UKp#%-Hm1Cf&7aa#3?g_$\g$hJTk4nE;eX@ZRDu\Rg5OX*`u"b,oRWXS&FC-SdV<J&>Ysi)[@:a6(;JE'a(O(oEk]XCIpjW7@#$CA>/gC%]E(-3,I9gWc*\e<3Yd]b;o,UhdG7c_+C]3Jjq/A$!OS:!Y8)3M35jD2C+a0$\&2LpUVbPNe'F:Vbo.rrR?$S?1H\5SNmUmZWth$f%<kJ,7%PFm2QsP1'i@)ZbCOu]B":`2M+No)*`Zt%5DPIbM_l$*!c*m7-[Z&pRW#*odC(<6tO/q9)4RD=Y#)P,o]($i9=5q9"-0U9^%N,7c.m5m/rTi[CoP'!f=Y@G#1a2J'*(`Sn'4<0DPHRQ.8V`+4B)P<C2rOHc'M4F-^j>BIk!TsD.jr2n65>j70&3E"_.k9!,hmfb@%HO!ba%\B4=eg0T615D)Z4\i;.Zhr[7nm(*"kCMgqHf5,1Rq$Kl.uE]8k,^[`f0J;JHW"!"T'M</9T+dGEH`RGa?!?nbTfs[FA'fj%$`Qn?@/'4k>MX.NI3j^oCVsru]i5!m8FrcP-FKbb8l_q$0:+"HMI1AN7N)TNc<CtV;(9LX"DDT2VX6LiLFuP!2U`;s8ekCHc8!LQ%WiWTq+op&h!>+A+cPDWc&Su_lk/WnElEgYk,oa#o5_V)hS=/lWiOVQ1k9QIPJltXK3pQKULsHfBs23Ou_9=U27sIS`gjju]`D&VT%X,PKJVpi"K5-MraS6d@Qh0.Hc<,$)RZiGl-NG^T'n3,?=Sd\NM"eCG(r9ookoIqL*4`C\Y=SVlWa57h]h+?R3c_r5WUM6d)HYEU@%?9&0if9PT*D<V^rS0;G$Mj;Xb_$WX-WWiEj3$me_UI)W[]R,"<NRX8AYL.<R3t?H2SQ:"0j)jXjl8irRH.#<J@<AhtZhpIJ?D9^Q%W`IRCM`rdo`YiaF4!l+h25^MfL/+YBL4*[9:n'R/c*gL7doqeT(i8&g0e`S!CJC%QgU(;4;e]@_L6JuPWROjD-&*_?0.Z-MWO]:R%]L3:_d$s4%(LEL7qfTm+$P6Gaml9&QLRVtu_l<ABS]=SqQ=QCB#J4uL0n=OMF,ar#"E/MSTjVD=\eVMsFU(!KMh5f@'lf"f=03.1%AgdeRGTJH9"!Gk]L;9H2FLpqfP^RQ":j66SEDGa*$#8dJ)50o0D!2S>FLq"]"\2FmYqPAt0;oHndILjR1\4&p-s#loGHG./F\saU%j#=#V,%]30jg].KnUHE"/1)s3gkOGHP?h8u@'lD!p0_Q[/#K/r>d."?s'V$'`.^.*g20m3U?=PR''B9VDthAQA'LknB!:'-dc)`"%nbR4M'qr%]F<S(Eg(p?-l,`a6EGSTR)qUC2GnQoM[W/[C`IlVe\A7hpPpNjIASa\!CiS!P>M8IT>C].h!K=ZE,"L)5Zt$4pKQS\d%*P0</=WTLOh,M),9$)fJ*E>6b[S<M"BqsR*MjDlJ_&1%f*ujR,7t@/,/m2A5+*FebD+O,%!]=Q6/!Su8MiLkZ"IKp)l,G`Zi("Ns%;@AqWcj^p0DLGB:k_tg,N2WP,gG1CDQ;dnhQ;P_MZcd4(`CYB)fBsApC/Ih,D@DKl>"Xam7Nf*dK\,VV?<>Za"TJZQ_tn4BAI5!B%(cuGCgR6CU^"FN2X1/dU(RJsnWdHfE\7dl6YI=T730#X^]u:%<P(oVun%lmC7bb5soETpNQ.RP>lOW<b!o)DMD^87a_u_i&Z)`Q&%@W^"P$6[R.mhLIi7j6BQR@E7ED^H3E+=1^&D:ll-L$mC#2"'/EeC!/(H.sKK/N_!-fR=F5)R/J9!=P3bdTb'2n(>sdV?G\apQ5,<%$"f5Hq#1B9\tj$,Wt.UdDT7]S7[\/6UM`Mgr]7m&j2Da_=lEZ)dC!)ihD*=/-G+^mTs&[e(?MF;fD?V,6Y?qu/Y^g-4[t6KK"ocZ%Y6J3GU-8<i&)NTDh0<Vr6W!+.p$J>X9+BQ/KV0PlDb@3Ff#YgERhfA:_U<!OB4JJ/300jl"'W:F-42DC@7t?=Qag'@EJ9iT"q^1I%fIQIWe#j'h4(qO@Hl39d[MniA1Z6nA059;XZh8LfT&![r`!_VorbuUH5</:N["k18Oki/LEmd8jU8GVB6`l-q2uDF]rEQ,40YMU9%V40Hc$$^Xo2o^Dofh3/iDHBXmN'n_'#!"b=59"+i(cK_+IFhM+nd*gQ$$LdLl4G<(fGJ8R7T3j_cKc!Lm`#s_/ro:EFUf+HKZ-no%YVN,K=00XA[t0gm`b?FZO\W"%XJ`F7ATXL.MNs%9]OJhhXS;rLfP]7YAtF2ETlor7>-@#_q?*(&rs73NTq$\TRJL&ZmIUQc2>M%&%m'iZ=_d)lHYD=_%G9i`n;b"#Q<P6>]Bi7p3OWaf-7m0<o>F^(0Z)$4TMT"=p]QYDWQakiF3ZP2g*:3euM,DuhF\.lG9TQ`m^^0L6%T!)<EWWapM-J>:T<fs^I-c"4/0hP.B0/X3u10lELm(#u'e(#^H,d(8R1EN57<s0ROjM8,F>oh<[R=knARe>rM_8-n0%oi#+#>hbb%Y_eenO]\^+&^$?mH-RU"(8n#/Umf9I3IK-K"d)62ZBX#jbENNYHZshqD9>p.^9nXs>.&2>$er[Jdp=c_9F"%oqGoh4Z!5;_\I@*=%\uqgYD#c:pU_[?^Je]M>f8>_Bbbu/-@(/\qI4[R<-O>QTH)SBr`<fO7_\+)!CX8H2K@8QE0*j0mZQ]\-2Q^dA8NSI0=HQ;]_a<?3%X;1gROStS)AK\H+.tMraSgCk3]$T#f\Eh8-XYO?s/[!6Bf7o5>.T&%C9ME8,P37&kUcH%6<=1-C?H;6i7*t,FFL1oUA72E:^b2NE%-^'h>,ql#iI[),N0.-jZ-WI,mmI+5]4_dRe,5873Fng8'C+U'4<uB+/!QL?a8^qB$]p<s'g[:lqN0mpm"!uh4K*A5^j$g6rhqToA%q9on5gcB\Xi08hE`GLoWC'I4+aMKQ:'t\uTS4XOZ8KPIfJAtG:4C'VE282?a2lYqs_?:HA<n"KS/!#Ro=JFN?KpdELVRpJ'L`iBJ%.1WfJp*\M\"1,XsP&'t5=G+.N"RRPHI&>_'(4*Cc'fC`FjAoC%R1W-)_*RB(&R;g\J@<1,;r(ua]M@J=DB+!HfLD]MY'K2sB[EdV%!$C4\5(2sQ7#Q\!9ZEE]0[EDrMYLe;$`]d,Gsrs:kmM@gp#@-bXIc&I[_\aLP9QIUp'5#LnH(Zs3dn`$lT6+C/LW_;Yq2c'7"L)g%%HdOUX8hp&!Gi*!%+;jVKCZ-DmgGj,Hdd[eGN-]Rp6OLF(3!?\ct9BL.mq85:'PZ<UlAr(H3*_0<oPH_hBM(mLrnBQp#D2o?<oP_%SN7GBnR5^:,!j`\:aA2cVc2bX:@Z*5h>2c^IiklZZp0@oYB/TLKKbQ9q,KZ88#aST1CPZR'V(;W[n:8_o2=q9%eg'hgT8njAB-,j%DH>4sk0X4.)\6Q3T0Hjc/84O1L1H(5+;m()GW%_;+u9gI9R8+,FVR^k9hQjnYVqqbjZjf(5UGF9DSGQ36/&XhlmBU+=]IDn647\h%hH_CZa=u^4>#:3QkK-T-7l,!tZ:[F(I*cY#d6Z>/=\4FJ-6sie=+TuR!T^@5CahkN,\UX"QsbiVW(AQoCML>(jsgXuNf=(m6*T+K%@Ee9<*6p&d3`T%]RA,qh+^YFc7bicsrrnc`<&=JH?qNJBa;iN=HX?<&q7OG6B9R88^ru,!Gq5"i\YOg#BaE&0quiN^$jorGK>WHq%peZUn(]huC9@Ml/>FMrDA]THIf$[*A<IKE_?oK/4Of'kt:[$Ak65@LW;8?/5m=E?m)UAq5Wn!Us4_@kf31]NaGlb4'M6=Y,ZWD0M%K4DT*9Rqm!E8FH9][/skbPI*\SMWd3(W(c/m#'jX`-E2H.Ssi.ZNVjHTPO'3>HHf^/AO)mQF\VTVNq:"`/V3"7k8t-P6>30;hgE.%(u1WPX!AQq@=gO\Op$oKZr2h<9*r)Z1&hR&b"fMaflF9n_ckHbgTUsk2Q?c-A<<poq)Gi5!*(<tcO[_!\H1cNh(Ti'QH#Y723D(>%N,Y'oSL%'*kO8'8U:17uJT;8,i1pc&9L-ZGWe$N`#FO>m#dCl6M-<1!2FB<^-f)T;bO%a'eZ+pUJRDX/'4IQQU).609)gE5Z=Pd%%DTiGl:nlRT:_]KO6QCD6\IUCC0a5X_F9&YiW#[R<5<E8u$,EXI,!`/1KGSmKRNi*cJB^-2Q4J[rd^[iO=_V9j,#pmYhJq[[7.4^F%,rl'SB5M]e+&Fc.=XPY&#>K!@.+k8UX?Oo>7)oDNe?9fan8`kek*!"G9@KutTgW&R!J_H$9a`N9nWPkon>5:$7MF7qXE&hA@jc,`%`>,&3R<2+K0]6WTeM93Wg20i4j6Sg7^lktH0`Pq2A%=LD2Lq7q)O4tj,ppdXlm]T:A">6iQBm>@UG0C^M_3prfkLZs!1YCO$6J=r%[:<\H-9"Du_uIp)<LFc4fY)TOG]'T`*EVq\dhR0H"NZcs;5JBn/82T%.1\6uF%+>58rL,O+p--"p:sVmC,<)*jRRI*5oeffD8idi%f%@uVPqdfjJ:p2*Gb!rS"K41L7gTLq3QTaRqnm(rk!3(jC3XMjmO0#VJN<pqVMQ-Q4esdt1g)e.:+a.Z'^EC+10)qJ%:V*"kc$9f%QJOIOF<E6JL)Rmu=!e8nFJ.1="K6@YcU>tZ39h^MF]`8MB!W9Vh(B0n,0)uRb2!X=PR(a?7Kg,F)equDb%aVOnS[^F$?b3;&G3,C%OW)Gr'-a@WWb$IE?792ekYX*130&-O,0f+E;r_;3C,"s\4^RA\c<%2=CeE7#8qW9_O&ZS>\]oAu[;!!]23[0*$:06rOIM4n7t(eq%aT@ZQE#h[5AFVbdY[dQsS&/QjFPS-qDTud)O"tb.7.G"'qB<PieBJpG-)^sIcbj9B4GkV'\?T5;J9;L@$5ne-F)=S)%mY%O<s7aN%f8YZq;0OOZ*E`Kk;*"&kh/$J-*(4Rg6&*dB(=-Zc#O[BO4l"`1,qNV<n(E\u-A04GWtU<lg/JTA_\1UVelN5#^sJqi=-jHUiiT=*%M82$#\Lk&%OCd2i)N;E'?tUGQp&G,j=Mc7[,QTd1A\h[l3"6h)=b$RS*X<H(CBg-)&.Ne?PgIk2OOJN)A_%1'E(b3R$Rlt5>#oWI%/`H7#<-deTb1AZkKs4Q,ajCI-KJg=1qAn,$guJY!O_!W)CDOPVSJi!SJ;mXH$3I0K/%69CW:\:cSrQ0m4-cH?otd(PlQ/=a'EhN\%0AP<A%0G,:RV[a7"K5b+E=2o"[dBD-<b`7L0*%5@@#(Rq+khlZ-qlEKDjk92Z91#_Qb%"T!^+ns$m%m;1JA0/MKMb8-GRqsZ>*Wp%WEXM!s-K4U@]PcL2d@fDCq6nYB<?QC8?b_GmG;[qW6s7Ok'!3KYk/]1c)&/\i+C(M@0f7a:0H?:L!=:9RpO_U.Q+mQ5[`m5&iRCc%nbBO%)r%\c;]TN>AGY/[n(^_]H#1Q$47C':\_Qkrac8JE(pR@,KeYWU@.g83W2p)+]:fuN$h/1`?06a,M4nWc[U@LcZ]0lAOA05C%2*i*kreFu$M%M4WjoK.,%WS?"!:h-#!>r1!#f4Wk(0I;^]k6(tDU"M&JsmM6FA(gdCjLV-Al[*4(^-GT1"gfh_R/lK).7M2F\Ea>%P?DtO)@gI>D7n-9J#JL.W#c(_5l]$p<O(ZVj2,>LdG?='B-,_<+!MS7[:Dl#<o-*i2M)82BQjmm(i_S?-Yobo]bV?k#J+>bPi5,X%X00TO9mLCV5"C_+!ji-_;u,FlW7@Zp7rVcuR%2dd)RcF4&j+J8&&:d0T==$HZlQsf96\16YWVjfXb5'_`4[+,c*\+@iT;W&gg1t)%2)h8ME+;feX/=t^Y\1l=2ku$cJVD*!:8?=;X=gu_=A"B<7)uth!Xr*`bOh/%X]L@)Nt*L=_h$6Oed`rIfg\f<!V6_V7ZD!0);Noh%1p;$)YarlB]+!N*e9##fm^HDl?e"ZK/0dKiK&pl2lSTRlcJ$N3Ge(LG\nJaU^s_0-?@*f(C-H_=3ma*W[ZV=IFLg:d^h11o!'=XF%O8V:MXI<-9_&BE-qo`NW$/M>\PT&[!7o(INlqIc4Q<]?u<\7fiP9M.r4k.HVo:o_rps`8?)R1U#"+icIRfUT?CAS$*E#oTHo\.O]%ONH?aJX>+!Zfj1$fL<Z:,NrUu_f/f-%HY_&-FJlDF;TeDYd9dqWMIRL!R8p6,/'QU^bBT,<)(OO]1H#</<Ecqn/h+Id-%_^$HS]q%8H`_\5XQT[J5R1q`KP7-ppurXm?AISKXaJkL7E4V)@!Q,O9"#8o%6$S1ZC)`nC22#]@kaOZROl>=mXbujn@+r(K_'5,J1[M2&f!5%>Fat;%$)sm[Fl*LQCt".+O&msgd!Tu!`QA4>Kd1_/]E5^*DCDlRu=,qbI#>'J6FngJ7EN%W>@58d,VL-127Ym!THkG14<%pbn6n^%oKJ>jItj$G8"Z9CJa<OY_g'r@Wol3W/ATHrFa;0K6Jd/>pHpr"ngDeSQ2?Zn*n+@_*e_J'GufnCQB]?"X/Q?sQBAtCJ<DL9q+6$O%f`A%`F%CI-nJXB2gbu;'?:PT1H.SpMQt"2dbVHn&a`n<'lK5gH\Dj<cQAl(50`;dSm;;^,-5QP:)!d>jT(3=mMp!<M[SpI@>h*Rb%$`_D+/bHg5>SJf!OB[j\,laQqKe6^NjY+$?]m0Zo#Zj6=(U#-+JX98.?YJQ(.RE2?XL1AeFa=:d_!"<g2crFtULEe'5!O'7/;s[=%Z[tYMF'7B"s0h[(4dOpD[J(4(IlP5t""A2)2E)_IN0+WO3t?Ye[KO]t#XMkjoX%)9eW3!lccD;WJ%8T[OkaTA4sN]F8%Ao$Oeu3$%o2.%SMe"tMp:6c";7^Knj;'mjL6dR@[\09[!4D]k/:&Sh1mJ)BYZYU4-Cuck'sKOf]>orc6"$t`B$tehc*->\H$EM'(+"[+9/Jo(%rNHk13hU>@^"dD+#0,<>G%j*ro7!;.((sdfep0AC#'9F_K6eT-;Rh%#P+s8RLHXL@bJ481mMd;&c-=+NqcYYHnglkEgB*qfLH,Td%,W>rG8-b>u)PPC!XS]>/g$=&(lh#K*YQ@beL),tU&@I;<4:%k$5'`4gQ\VK8+6Z*dB1?tRmF>GtVnf?!Ji?;NUdZkh1eT:"_Y">r%#/LUJA!%t`A@>Eif`X9m>=MF@!h;6r[gG/Yq;.LAE0Hf5k36'RrX:j@fb<C$UB]>74:F.#$-`qaY2uE%\sQq(G[Vl$%Q(2+p:YeE%"8'L%NJ[(@=cWoY0O">MoQg]o&'i@<fidrN(tOQfpI/^-M5dh'c1u'N9-fMI_beutZ,:Yc[UdSrFO3:).3!QZ5XmHe7^uIFN/ebS%e7pk)+hK43#L)7bTWPeC*u.K,=<t-u8&aeA-%I%OK"RK)Z=,_3JUOkCRMRJ7RsC4]8i0[cqcC%AKn)g3W-;t$B(<5Ts5h'g)2t'O%X@D5gdoGc.G-NI\@VRX^\ZDgnNK)\XCeXd:PUSI)D43r!@pRjh=5^IXF/YMA,`*&+TNYF)d)k!j)8Pr(/8r^^<>N%lOLQ\,L-:G)%^UZE5;-'nUE*99=D#72:Ad7"m&Y4>`T-lc%8%gV3;#g+ES.,-t.e>KqGe5tmAou#X2j$M>nH=ch7OOtQpobPFcDe?d#0R<A0K)a*%ZO(<"qqg>@X^MZl+ghM1k#5IeG$la'`\(RlJY7Y&?(3f0m`MLl5c>&5r*<?!\5S$>>Nb/KYQe)?j2i_\G?)c-%[I5"BQra2.C_K&%1H4T(!XY:67CTF1aX,YGf8<[j1_3Ch*`m)R%3@o7[HJX5;[`s^m&@KsiWM4KfrOV<dAsV&GG-edfR&D`D6J;nqr6cZVKqq&RiA&u%fE85&T@!\k5Re(4):Y(am?@L;fljZWcpN._/0iI7i'hg39C40J%cA9;c.C97M+&Bj`-6I\gqRg/)Q(??ZhCC,F0p2uc.k'u[u6b6%!"5Ab`'4coh&2Fmq/f&\ftu%<86/,shBT0M2.',^<oa2WBP5Zca//.AJ==lg4aLe2aSTOsc*:4YM^D3Kq6a<K*B#7L9ZB]pdW@lF%$..`aI*Z/gj3H?bTR!M)]:YlJl1s9ZD[,D$UfiJ<6#QGTJXtGbb1rg4H,FD@RkIr@&3kG5"HL$9k'+FSn_F&^'(*<q8VuIqG<&fq%h)AjA_`f(6RKaO1[,XrlgcaWTPUtHG$9)TVo9NK09Q#bO,V,bF:".pmH0NP`\Qd:$UF,deT5qb-kVs5ZU5U(]&^cmMXPbP:QR=?Y%[s%MDLQ(j7Sg;0Rej.7_/nUtDc%bVr/t<rP9]8[81RFXO*+fDh`m)`p*rCf2Z-Q6`.;tM]o*/PTgXMbTf$/X96mRjASIe-"H?4,f%^YQcKcD;FdNK9G&;V,CP)qZ\BeF(Je6S.iB3dZ3Q__i9r4+1b;\b2A*&pepSlIB[I+6j\ndeX:R>Ctq;$iM)Le(CFt7?^'[)!h:/%R&P?=%9=g6c@19tBDMVVS]J3S\#m^E1.o%Do4%koG2$*0f.oY`,oaY5k-Q3aRZWOl=nCk2);.>0nHmmoEo+5;X4VcGnL0UV;OlG=%CbW`N;tE1MMjm<9:orTVF(*H)M2G1#A@YEcl*7q;35M(u[eY8E4QWsAjkQ$Lpbot^FB?Bs8;AioagkusB^(!QC><:2piI<8p&(1]%J6qGAM"B<P0%dP<(^a)4`E3:L9u@-#<:Zs?ln%k-jDo0!rpX"sdt`l9NA+F:*Z0Zo4p)^6<NZH&*!B=tVZ546.2;Pt1[5sgCaAV,%Uc#h%Bm#=;/n5kHMh%G=2JpQ!_uSe?Wcj*3(36gPe'rCSPSS$`3HK5HTHfdN!aF*80bt'^>tI.i<&$sTV::Ild$Q(q6r6'U2=$T.%)_@n=NT0m*i,Aa:]AN+I4<0,ZWPia-(7^g?'T3.([Zs'Mg9Xc_YVC2N/5M&7e8(1E/4iWq8r6AHc.\7:S2/a%55,u:C,:"%YV(i<%760B"8io+Jo9X5>dCu%Zmj9i$[rESF]c%3m?:8kcGWU93Dj*V;mh7X#,U0.#3o0lH\HRE5.Kl>:F[1#:9qFOuB)66_j1S2ZqZJ#!%Ol3tLRs*M!eu0;mOj-Se-UrD,"(Er[&M&dpW:GholXU'%^EN@PNtb(uea2uXc>:&R>AGKL"_f%RoB\0cJuAYBT4Pj&ZX$5iN]b'V%4k?!^%?C'%OI0]YD\8Dp63;Tl,'XtkNX0VKjf3,F41eO-P0f-h.U)r_QJeFRLfKKpLNBS!+&M1O0;5geg$r+1.kSl#JumO7M7'uK%RuI7fQtFTbd52H4;m@m&c:g)-/)L.=!Nr9#Uefo4@2X+VlnH*X0ghEN9*I^nRbK\>-_@)7=O>^'V\2d)ZV'EKQT;p@R&();pDh]+%(eW88la15W"b@K%`B[VS<-egP:!*Uk-=aJ8Mi5Q8T-m9F),beo#1Y:MDi:0EM!ndl!0:PCF^`c^Z+IlOP+I!bi%:B>;U&sL>D1(`%Q[(u6QXbKb+G!]Co)VT!lk5uR'UM1aAq$A84Z=s61\&_Ggn-GOVOTsCPWt<'\sPu9!ZWCpjc5+,Doo=eBLjK,VWMTM-uDC'NHXPF%R7^hDV/4"o4(rZNV(CFk`,']kCe<^MB%_`6=u5kjDtF,m-l414NoQFD%dg`B_sTZ7B7dq790JO:3:E1CG1Y8BfHH;An:P=_1tLI>%6ckW%(,Aj!<`Xh;'[_W\i\P)P3ALM:)NVC=c>qUGnEo.2&X<ap!f#(_Qp)3&/>0SpN*m<$lO#[XjK7fs%@`ocJ80Of\On3h/C;<t%XIYAtiF8"2)?>1.%5U0^"6J6miL?9fi@H$lYm^,/da-0TW)l"S-#3$Gc89aade6^Jg#gh`](?nqha-W)`GWu06?.Jgj'uA"lpEj4%27-'%Qb-b;Od&?e>\3*\.:<C\!S&pQ0*)TTP2*_!"&iu=O:b5s#1%WAL&ae^Q"W_l]1>YCcmfWc6sbVLH1l!'V6;h(:GJnmc`Ek*%=O)oETr^PTeChqNNZ."Om\Ol.=RlHu2(81Z-UZu&8c<B9#b@d2Ys?JI&_grE=CJ/p%c?Wh\A+<L\ULbK-3g0pE7e:tRk>Zr`,;%@%QEs+@P)q#tHq5U$4!kXi(=UOd)eB)!^E74+%BpfpL8IQSGLO6CFVk/WeOCLN7YpMC*PdeBR/I-JWj&(SO?RWHk8i4T8iYip0m3fY%_6_\G=O$2E*M(AGq]JDfZoSN*^G%c$Y&ks"O2eT=?)+G3XRAH_L@^&j8p"0Ym^(WjQ[>A$hDk,79tmBSkuB4;Q@V[B-SqO*A["EH%g.YqgGVOk5jX$Y8ROoFG;iYo;;&W.i9Ap'7%Ct=]r]<,I,8,Xm_FtY+gRF'IDEnKse8k@CELeJ&VHhLn2nSYnoR1d%clhHc!cjh_%&kkQhK&@!\>e8Suj7"Ic%Bo%497!Z'D+Z0jT23;K%Shn7PX/9qJ#j=XIju]A?\I%eICI61ZOl8"-Xg./+IZkCWoVN.:>CWjTlrMP%Z]d&o2.mB:?o;_#*83IWX]Q;C(rA94`9_0VgM*"31Qkbm[&_aeSO;u'6?CY$f)p^`UUYGl_i_sc523VR+&'f<8X\?Tc;pa=f@,)X%]]NtfoRlMFl'PJ`+k#aRbeii/i6CV<(t!;mO?[3r>K*(_h#>BkpuRRj'_[06s5d[VLKLlM$tTa.+dYY60]O98D@tXeZZitihuq6E%J,0/o^ZRWg9#cT@;jKQIobcfr;6/[R@(k`l/')\b\<WBJUnN%4Z<6/c$2ZEV24Pbip\`(NeP?+YrIeqReNEu[@QS.FQCPuCiNWom%^LQW*-<JmW?K#C5gn25cGg.e\1N)`cR.jQHW#L,uL0*)lZGQ]Bc4?*a(>eAt@C.odj&di0Gh/$/H!Ajgb5p2JJGT*;TfTq!CLR2=%d^.u624hYICNsYI[=l=G-L,;sPsGo$O:Bp5gQO0rK\=f&ER)u4T<I3R5;;J558-@R.9hatf+M_S[cW#YZc!r.gk[O>QDT]sF[L=D%6dJit3;?Oj6*Pk=A1EJhJrf(d'%F%of$KCmn)@cSiX*-Fn[/M8ge1*;F$r_`PA/h/%'2iM5TjH/ZO6#UX;S57m)`lgEC!#Wib2J(%;mQLp/C#E1N!?oYUnG'h5d7U&H@rpt9o=cJkb;-gZBWkG'M4DBCl'EL<S65&&M,#E[LQ\jM!HD;X\%$cPZr`u%8kD-OU!Fn5$<Uh%lm:oS[&"jS`H7ljX<p&E_`?'S@FSKG_L[7,8Vh`cRi'UfT27_>.GGVE'+c(V`-E=..-=TN9gBO<1f_+#OPr@`EMjH]*b&_>[irpA%^A0Z=b1+WF7T(l;Ut/+o$-_OjBXCH)*%gktaY])n77uVR%=U`;,X7,Gm8K0e9)Fjk.W<m07S;<87>hCaUdUBZ@)`nOPY<%Zf9AtR%-[26EQ7>]$@P9bpj\ER!.<kUtCUqo4>g&[cI49C:op*06?sC`'qR)UDaYtd4:;1-cGOhl%E[0JGOurJoQ+Wg4fnV?[8B_%o6<^)_%P7-VfS-pd2+0&GH(i%E]#"BX*UdKuf#"Cb3*mp4\>iI"H`Kj48+DRNCZIoPDCdN*a-<></-L*EGnq1P<he*UV[qqeIN,(>V2"rLY%8J[q;`?nW-`?o1OZm!YSjHKLocX5Nkp(8RhBiH//=dBgObul6DL+\m`bPA`(_e?+0mSLbOnZl,R$b(M,R?ln&iiJ4l(:YD?!rbXC%YmA$WbZs8KfNkSP@G>R:Lus``##C2PW0>)ciFj7TiqN:&NC+K+j/EO)8<^[k15Ir=ab')Y)TLd?RT3s_2g;,ES0rZp>dD@-KscZT%qnXb%QJr1Q)<sNNRThcE+a">*^1CKl/KMc?!C'G`\@BmY3ErW0YFmp'XV.G/Bm(EEQg7Vn[Qo5MRFUf\N9Tb1M5/V,Pg.IV9k.,S%)d1O06r@3f"AWPo"[>I=`nkAT(4@Men+b]+?*\&kIqqGr(,=K)M[I=@N8_c-ENkj=c#)/nr!4C2?i90AY9+g8F+*k/I=HJ2n8@uE%(&A3Eo!'b6j5%$p+!7ZS?LC#Ro[@/S?G<uKir8HL76fZ-Z53@<rA3M&_n3rRWV-%1D5eBL3ElPU@\.]8k9B1u^jG[SCdRT"%V0='%H5/>n[*kJ_nA9_=%\o)>6-%0YaBi$%ik_Rr^Mco^r%OleZbSSZk`+ook+'C9eg=D`Jib0JmURPJ/9<PIKP%8OR=@lEY<GYCAR4#8%:0_Wa*F['[m#KI;Z8#=kGm_uNkC_2Z\E9$A+DEb.c++#U/YQaQ>!s:NU9k1C=^:,R:nKq--D#_^IIq1ll\,BHQ_dVB]6`.c#*e[$%R`MrV%\p.\])t,q.l<)=Ms)uW3Er^oN?aXTMFJ%Q<3!teFpY8[Yu9uJaI=L-ZC!eNQ@+I5G-h#([#t`p&Q^9`dM#$[Za_X9HHMG^%L9s^9FITjc:+qLK<RbQ6)F65@r=4f+.50<OA=tBrijA'=ICC8G009`fb#6eJP4gL:Zu:BKcI-\9.g#Xt+7AS]YH7b+\c;;$@.Ng^%Mj$B<)S#\9RlC#TT0<4h=-nsq+8u&TrU['1le_U>ipPgfe\gg]LDO#&+!:O=:4@J3EH?4"o&8TY2qOC"nrNP>2pZY]pZcbmgRF,A%h6S=p5Mhs&I)PSn_?Z^H]sp('?Ad$/FKCs3*WBIGrcM;Yq!*uAmCp)[F8+[-n+fDBCnt,(b=bSC9<frsqO@AK]0AJa>^lSH:f/b9%gY1*Dr9E;-]gC/JZ/k`"Mg*M)]KB6JkP4B+f6?O9XD2%F$IF_"SmOWC]K90M+2>G%qt?odmd]:&8AhHBkpi8h];s`_c)U^10-7j@%HE\:uQhf[\X/h#V(V;>'e`4RG[o^U7q";PBrHH;?Yc?#&.f2F8qOS20Hdu<LoehufS&%&0lgW6(n#ft]rCNWR2\/tK]poN#M8EWT%^Ui,^qfqj,>O\\IqLKI\'C8s?G$g(#!@`'4XpS2,lR2\"A^<HheK<@_?e9+?fi;/n,5t#`5?5&]HGK2Dq:A?i/kil.D7cF7AI'6?%1I>odLkbH_V]9fF>&:^WR\[b2nF,u_2;<<YBm,gtk5'#T^Y`P.+*%s0-!]h;(Xh[0ZW3H4pT/(VoiF6"+Kb[/Inkq"R=5:^*:-e^%(Uj;5Jc-5E\uPej%r?jU"O1iD@_NmTI*6boInhGRo^AsR3WK#5GsBquh5%KMG#R3ZiR2)=\B@YM7H'Y'VhBAp@eY+AL];%cJ%?-E%Q?e#)8]aXRC'IgCia0*p?CI1U1kfdcLpD$\LS'gXI0W!`o4=P64+TDfiJ1?g[")@XpA>W6K+XFl+26&OI:Csuq3gs.Bnu3X3UV+?%QJPtCE#d:NTJ&YeO\tIG@O"(kffpF9VpKLsG*MoUjF*aqU4=9J;smr>I^g`KIY*#j?0jg`#4fi'O$QHSc_d=t6;@ESk';b\Iau-?%L43<X5q+rbWbG0X\6(Q;D.*]*\llqg8G3+<^-P7X!e"u2I`SAVP]k9A[O]f3L778<TDdWm_8n;K8TC]OcQ@aSNq?].qa3N-Hg?02%,g3Om0?Q**fN(dGIuRn+i,N-=:<:'$7eV.&ERs6lA6[&L_du8c;]!ZEO7-th?Cs@WVn;ipmeF]fmnQ(CpYT5(IIZI^nNT4?]?%tY%eaAbOcb@'+I<BUB7Jat?D!Cfp2K!lVmp.!emGD6?4JP=!rT[qfX>X;_cOSM<p$TM;N1XJ4>ZFD%';%KRE@OgLqY)Z.DdV,`**8MM%1pu/k-QD^Lb@)qDSc/MoqgJG7<W2MbIm4CWG2$BUdtJP3`+e!F/`KS2ViRO7:ZAsN\7nFAiH:!^(>$'"$K63:=?KE]Li,)9.oKYk%nIqhSJ<l)Zq53JMQo]$e6aYRe;CE6hhR$BQUB/@3I^qQLK#R;30s&Cj<@@Mgb?f[aKDhM=*b_-:X&YihT:a?>O$:7VkEK?Arq2ar%h!*I5]=)-C]2)ebl1su#PJ*]mL9ke>mVh"WXVGSXI8P:iGu]!IJ(@66GK-_VIY0,a]"5G_s).Qi]?_NNmTs5e^:8E-ND$pZ2*U\1%D;_0b+0I93rHS"Cr:BAE<WB=NeOnhrZhqA<lOpl0?JkFmpp?X2hHmnPS]ZB:pSqX$'3'U>McY'$q``oHZ3-GA<13'XrcokKr7e\.%"&d<jrb7Q`->req+a[NAc6ugS@ZCV@Lbs=>r9DIL\'OM]:sK#<\5osArW%X?G+3u/\:=,8GB[EO^NUdTXUF?rU_`n!iGl8@*c'f/%7^q]ur%W=93(<3Eri4LtkhL<^Kr6PAG#/.P[IrV"c`m\(HZS^rea).SmJk4`5q]]sIG8Hi+T:ctj+o`n2ck2V?FO\1a53`claI'>%YH4mjqhNp7C5Mr-h:ntLBNYd_aMltnh7m8Y]R$S]o^;&2],,Sk^O/DrD:<HRqhc2F?[boa0GWH/4L/pJOoOSCo$-RPh;`E+*\[$$%C-V<4p"A2;la)*<rV7Q'?X1_%li2F-AV[bH5Mt>QeH2ZDceSa_$p;6Frr(T0Rl=NDm%40Y[^l8-,>LK$mB_,;^,XVpgT/AQ(U`9f%^'!eYFl;Z+_t?G]^jLG#q"j1#M?!-1r&(JCX'XrZS*QO[%p/VY^X'>U_(#[3Y+NIS6q:r,+<R]*noq8jE+6VGpa]/,pE%boa8"fq%h>HJTmU#qXo$-L@qqGI@;0_<rr7@JD)oHh[pkun6qu)7Nq=+('F`8280>A#Zr]i*7A$>7q#86*G[!H&&M>DSno-;dFMCgX>gg>MW%p#>r1]=Yh)M@0B;A$b%lP[*\oaF^&U@elT`>*&XTfAHOnm=;BYXtTgif`!jl0CRd\>[DgcmIFmMVKJ6_]siotEIrIGn[iF@>[?._%Cj>p7_&`!X_soE]rje$Mc\KO2h=Z]HDr*RI(_CLnMEeEZC$2t#qW@)>jYuY[[QVNm\=_HQXRk1T4hlKJb2N0Hf8lOe>k=3VScRE9%I9I0U5F\?`#OjP&C?s1;hgD@#E8/VBlMPW"!$k!dmM,NrqKHLpnaQ>Oro2nUmdgA>raFu5&#OWc\)b_f/*kW1b<Bj.([!L8Vi/j6%"7Ig%FPsiDT5So+D6YsBiV/BD(O*&i>u]6Z^8oLa^Y$66r_KY/Z:0b)YOFATIsLqRB!A0,dptcSKg'kTq!-,amYd"TO&lkDs2fl)%0<SX=hn842\@DCtpK+Q5H-[<(r*U18a.u(+CeQKg?%903qhps0f6bm3`TqGb!6P*.lJb7aaFF0#h65]uhR@qOAMIGdSXXe0hr$Qg%Y0uE_j\F]>>s?i]G^aXREHesiip)a)2ifoLG?;DsX$8gt^QPd7Q*<K=]u$*pf<=IMj5/eAQ.'&?ZG#FZ<tAB9Y9)P,mI&k<4hSYf%?s?j#1mdqI0<SVtVd]>d&,2-c?b;G+md>FE]B_QPkl*Fm/[amBchjd-qC;%PGQPC$I.M*_jZgM)GP0>>8F9hr.6F>]6nZCaVV'Ac%r&J*GCK[#fSDTkWF<,o`s6&;<V@H2?ri)4^Pu-^@[<2Ata4A'kFb^KQ5(:%k.\;Enid(K%*"Z73,D2hF%mZdD%RD@EW?;hoj]s9-%/I&sPQ^FnS<%'GG:.<qc;of4U(6Fja$->tK7)3.GGC`>Wi@kHa09`H`/=mNR.o$[oRUKW.klME&EV4qa\#VrDJM.18\CXZ7.)Lc@%G'Ur6)%#VA"A&4m!Fu8Kj"o4A^u1Aa83q<#LFEO#ce7aIfa'hLBg=@m[*_O2J-s`p0\bcuSq*=t@H+bi<Z#;:?J)6n.1q9n1*^."%S-!^j_QYY'+]Up(hoIG_S#2>k3eseTTLt_=.>?_7UI,=I9]?5OB19?R&_&;K^nUlhD^;Ot-*^%$/m9\-6d+2E3%^:AjKqs?jBA7+%MR8nHOt0)FRNgKS]'<G?3RdX7$o)sHHD0MfFl:dkOOp@#"\<,(a1K.2g6fBq@ZKiu"NX5em!og;T"oWN&CNm?/<qM">\+<Pcc'&&%b"i]KZXurk_UbR+(A7#>;2lT*2eOJZ#\[If(s]pjo'cd3EWd&BWNLAm<NFI<5U0;HN*i6GG*%Yj[h()/bnSZK;r)TD?0=4sKSBjO%;acLE9NPL>o/sof*<V:Q^q)BGEsP6.KXk_\SLKZp&MSITQj/X,bR5B68/tLkj,<&KFUW1Ee_3R\_Kh.SOS2@\!.bM<cknbm`'"jL%_+82C4sS.mPaq*](eOKBc?HRa$s?@T-@/.E)^^(<j!ArmhH"Sb.Ni$bF\`IY):@S6(.!N(-o6IHcRB.[9F03gFoj9e"^rD,,3<Gr%Mr-#I5nLuL^qe;UptMC2J;Ro->$tfg_X](q=J?f%_FPX@g1R+p,(+=e1<U$raN"Z"+XESAOu_,TB=M)>**5Comb1NsTCHVG'L/SX%5u>W)6t&X>2^]4-eX=M6+X[O8#]D6Wl_qL[K'phpL9/VuiYW!L08)H6;(45X07@-(9L6SmQkPi1YlRTD1D/lVdL:q(;7PlAIRf(-%BC7]ter2TXW%B-;KCU,g;.P8`\?]RHbqL#q_-9E%&r5`JBbbB>q6h8dM>Gh0N.IsK==etX&Q*n/-fI6l=#I^&^]=(fq0FfS0u=5/%p9p=8r&+/Z-1#('`.XBr,J_q1,K:%;FXq)Yc#p->0dHHEE[WJDT]g2tR1MFiBpFk9iOmKUor$`/AHEa3-n8h;ZNX+@oh0r[7q>N#%$dpN9.)FWj[>83[KG&;N3!<TjX2C_a[gp@OL6FYJPMe#F7cE%A4?ZiV#mT#$9GQ5JaGKE:M\.E,&.0,1aN1)19g[oE)%=5,OrJCM%1?E'&egC;(1t!BEn_`Vm]*!G,V?n1q(M*d_YcH8ciG/iU,G[m_&#nqUAJ7EdJ>qj(KB^E_&n]hR(Ir>9Sm<aXYYsa3<"a-hjW&j_%ncU9jF?X;LQK1V\+)S&H^hsdgEd>JL8^CA(:`r8g7V@-mb&MbQ3+'X*G>"4:6("7#SIeCi`7,E1&+Z".4-5@AhZBM#N]A8G8g5UB%YMpuRmX=fGE=?aHOFc7a;7L41Fip7F*;$0K7mKWAqIps8MBj`.A7<f*9G/j"&YlCdqBU@<l[U`g[I_Sa#0Sbjd@@!9k[QD_[Q$ih%MSDikPY1>l3rTtR=$<XfV-:#W99D7(dQ*U+XU-/-S:'#c(V0NQre@5!?D&Po&EW5T&d@j[-pBoa&qXi7\119E-K]A(,9$hL]UXX3%ijAS/(Oc_'i^Gp6&[Fm!2NETlZQLml_^H9<L;bl!]P(NjPu9:jPr4uR"\XRV?Ei^pTQ[3E-0[m0o%Jt$&uE.#6t%:i.MT/-.&W3>%iY4bRE`0Z*a"=u?;$V<\g(S;uZ5KNB7YTd.$`cX6(5rU;gEkS_,F:AnPpQc71*0ifF'[.cbehTiNeq^<_V&=!OocKtDQ-h-%XKXG%^$(c5'oc,!+dLQA;J.@$VC4Oa$B7aa'0.e+%p5<Y'1eODWCb=[#RVcL"k?O"EE.-.qoD*T8?_l6D08-B5T,J9rE:&&qK8qs=Jpg7%/(q>(.Rbae,f@iO>>uHi:D5Lp,a,S',R\i94&r"g7Tbd%$3T[XktIlW6j='>_s[7HF/_P7Ue%%rm[(Ba$>[sj[ed"2GU.h&\u6a,%W$'P)o5b)7[4TNigcu%-r5>>;;&c,^i\pDBmW&Xec9@j.cUJ098TbLD=a3c,$5b2%ISs=lR&hdLNYO,)3mLm"Td.j%L)4\GHX,A5%.KjTgNd25j(plDdB9#qZDD26gLT9gA*l]a'D&'9qA<EEKJj^8_F?2t%*#RGX;eZq?2p,P/?tajmP[#0k9.app(3>O&9U-VenXC;3%%g"A`2^Ti[,o7f90LG:1@Y'9*M,M!8^Q]-F$97@q0QP+VM>)oXC91eL.u\d9%LG(LW^Jb,Te'<%iL%[S_(6!=21C#\e?@1/e;+^q%,eTKYS(S45mM'<\_D>,Ag*V2*;*%^k;3@muGem7@)S(VuY[HEjVF`nm@B1pR$l`K\5*SrX,3ueK,*G%\lichu4]bV=Ha&o..)clT%#f?`jYjT*D`.OMllsc64/E[\X6ro$`;4J[5!h<5)RHQ(EW\C%BickN)2%jX(R2eL,!_X]p*n%BG_i)TpR:i$_oJ/iqJU>MIK]'5"%bs>Eb`f(0`M38XZ>O'nE2?sOEMfq9UjbO/K/5?#FFYXc8f96fae+,Sm\5QrJpkJiC#V8UT/]m+3kb"*2d#fh5/*5r%ZFG?`2bdXg%'KKE"F4I(*W-0Y3M^L6Q5gFP@5eX7:Be$kRe2+&,'-sTL^j-?jP9;N2![4sGA\<O)asL@*,m^s`-0UJ&`lYe9)01aiA!F<'<TOtC%BF;U'3]7h@7?=T6-:'^b+t4<?MKQiLaY3<RJMgg;@o<qg=-].Y'p/q"`1t"P`W2JE]i%^!Nd[m@(<fa:KUTbV#r1s(%7+MM<EPDH%n45iVLT<Ogqn6`>4?Zc.Pan79*AZ0d&ZoCX7E!nm[QM+H_R1"OFuTK&Lt);8AC&FjA\s*Zbf[WUbMdUWV&;e)`"duk!RZ4:P&Nkq%je+%+,ef"J+^:'6[qG9<E%eSoPcuZ)$'d<Y$A+6;6/l7,]rm/<KS3EcF9k]S"qL#oiU*!uDr+rtU<\S0_sD7NpI\B2/_.!)VD^U)%CIg*Hh\&IHQiYB!ktfam[nHnF/rg[hK(X.V^EJu-dt9X+dgfO2UgYP+W;Wn-;Ue3W/'lRBqf&lHIulg=K)c4t/4m/V#fd*"XJ.'J%#4jo$Xb=r2m&6>]FDf+?0^<YBI-g!+XMl.6Wbqp-U\)gS*Gqos%O*&!`1e)>O'$JM3-!or5`q);0/GK2=VG90<!o2)o;f>C54ttP%Upkt?5X>%VO<MC?-;h\W(6stlERm_DdP6h5>ig+"$NVGqLTD4_XEl)g"B"3%B?.ENa!%>L8e2gDf=4<P%6;.X+<-)kJ6R7n`;pK.%3jli)[BUh#*@<8?*g\/CBgSum.c*<F?FcWED+q+5f9aJE\Z7haU:#@3ZFl=YaV!gG`uTGW`e$hiO.-oGZm!mBEXPI<l\>d%BeI7f%.Ft@Mnc^t5Eo7@+#`LTaT?,TqSHh4iGU1fnji_qh'1:5BBu]u0AgU5Be_>=@W8!B=1UOcW77o@5Q5gXGg_0M*jJ,;T]d7ZES7GZr%aQI/a`_"Z3[,B.8D%U!Vm"GV4E-+D^d2<Kl1G\L-B?4cCJ"ReDb!V/P<f<<$pUiJD;Ek<k3'`OoS22<N2H3p1E7K#tGXS:UHTOBZ%i)@>8^dCIP7'fHJ"-VH)8[m24>MVLXVam-m=Y=4"o`IZ[0]j7ns!ZlEQ2lmZMm>dC;k9(#AVr%'bDTW=%L?Aqp`Yl34QKJc=_4]P%XraD]%8(r+41#8:=Rt*!%$15:>5qa='+A*Yod`Z-%GHiTB>)3'O8EI=d^\Ym`Tr(`lm8HigEVYEI(V=J+Na1<Bq3@I@5$hVlV5Fh%(pQROa6UYYH(9d^MbYA$OnK'6r_7_R3^ACM6n)t5#F`eiFd?U^3`qmK]L+U6,8"7L2C(W+gO0^RBu<0F$JT29BJ+WOKF<DA$TU3P%Y=Xu@%20bT_E]:JB@fmifsF#=HA'f).gQJ"PdZZd>F-]^L/=#HDR[<b:_`2S)H8pi)Q3OSWA0jr6ESW9ZbH+Tg'G,3]kh5p-BJ=9%Q=cZ3-JnP4V"d;<Do8eBohl0pCOg@g%]FPa!$+/C>Kn@J^(mEb%Ukq^:S>37k*8B>ASF*gp.HIC]27!dP)X`POCD$:lW@PV>?'\c%%g+PmHM#D'#_Ln\lb-ae#'iWQV.MI,GK(Ag:14Ap0b259+UIBT^`oA3_Q9Dj1Fe58!tn9COB^12Oiqb4>,at\>Um`N1'nQEe1UT+%WsZ=_Ojc,rOAL+jho/V6U7c748Nru2(rg8.Of;@30V=TbD$%@grUMK"P'it:Dl&b#.Q"S16MiUDKh[AeR6)cF9Y_VL/%_k?+OO^p%E7bkJ7(+#>Q/BqcO^Y66'G42%8!Y'"&oFALah\j/\q;\)Pgth-dlu;m_uU4'Lu185!M"7`piQ?hk(BeFrp:kF2UPf+FN:Wb/U+-@%Z/1iHm6ODNG;FhjP1;?uB2n^V05RRLbWrrjJWhp*j\!-jJImlkf`>9nU10Q?:]^(nMJ\\.lNf&:D;cW[jWGZ,;hNque?`JF)6M\g%GI]Nu9!I4RBl0((3pts1kG0I?WgZ[""p)=&N=2;H[cKF-J#A/f#MOVq7_E#X,,oKM%"/e0i=8m2SHRgX[:RO>S9:gAIA[Fj=!q+R%5mU36".=Gl-5?n$0r`2?'RIq/f`T8L:Fb$%W,4ee8sS=dNC4Ka',fMGBIQ.`!sVu1*?+(F@mS$AlB5q6[O:#g=))Z#d`?W9.eLD*%$;8#nTa%Ce-g_-#;<C)X*:HL*g]32L_U\ufXON5h;_!.:]'?UA-Y:UULKpuW.s!2B6"fb*^m_@?Mo?:P2/L%A'aDhhd5a]n<=rt,%ap;,fJZj*i,ZnmB`]Y\.0VtC(bs502rn\?M'I;W_^*Q]YRNjDT<i?Fdf2V!j,&d;Bd^KZW3Wc<0_%iG<)aEaTXFUIAfat]pZnkHO%+dLR^K.HPTnp5r1P[!2IP$rB>@S?E]%Lr<Y!&du>>i/=e?2"#2%q0l>@A*NGZ2Q=-TZ`O$mn<]S+P-:R%^u<>EUf<A3l`0`pJp-!%S7L)(Y(.+"UT&"i0s")mfro=J%4bfdD$;'/5E,Al'nG&O_QFD"^l863(#YuJ86Z,/l8hOo^'$Q9W3f#;O/ME:#3G4=M2,568B\LG%nBs7\&]784NM.qT!GiJ&;RnF]5J'sujKGR>i1RH;R!2+qHVS"C72h2JC9a*Q,8c),L<AX]"SpEA61r^[gR*>u.+^XMD$/9l*C/pr%YK_g+)(=,Kn"N\A/PO07*G`j:cUc20PC<MtUo#p?1hOrnZuHXmhn%ndVL:Wm0TKS!YqP,aP<3ZF0b0RJ)op4C?mt/i?@b#1d^lU\%.N\Oj$?%hmF(g,8r;hfC_iA<!b[+@mq^j:L%pQePWSVpNn[;r?ZjYRd)n_b.rE9XPbU+V-a0FDRIgiZcral:--1J-"'Xfj;_9^JX%8Jb;ZcK_=T(6,:;W%STH&A",#\WJDbZ0NFNB'^iOcq)]'+pPE=2.NIlY?lF[!UB:/0s?os*nEeQ@_^f0;eIhGo'Y7*D5QIO8jW#@%.hJ8m?b&no.pE8WJsD-n=-2>'0S"#.i*#kiX=rsg'XKf+JSgG;p7VAj3Q@Pk=PhaO=*cEoNMGT@ouJ[^U<*R:f.n?9j'mZ4[[Kl_%nYn=-6?S`*L=W5.bOmJX3EqK)ZO<r;m'M@Uf@*j"<B?"'K>;<\N1f"8?lWYA3m@&I%gF$U?5"Wr@=Q$tJ\&Vf-)uVRm-d--=m`H.%qZ9uo@(3k]^[j$L8pZm.4CdKWVrE"b:VrBJji#VXWn\Xrd+ab7$^eVJ0[H%;j+S>@)'G#F2Tc&:>6<%HO(#K9K]sn>7mji6)*pDb%@N7;_JoJR7I00<b\g.Sk#\=#+CfadRVQ"[ApN`3f@Vr0ib>G?XQ"=1W!Ij9[AXNGC;pbh>CmHq"B(]9b(_sn?^Ok`U<T.7Nn7+I^%,mQRlUP0:7@Cbc\4YRB56mnLa/d@da"&X]V]A;S0OKQC*P5qAKYQA_mR+q6<R4slS?E3cA8)4"/#%hKsL],)76o_/5D-Im^W!Wjr%dY4W(e2VV5mg%_SAYie7Uki:RIruBKEt\*H2op^lr4%oSC)cHP?#<.6c3cmmrX'9G[L*,8%Yim[PdZZ:8;rqM>7?eMlc.:bIg$.g%A/65&j`$u%XS3[42*,-IDlp</K$?iucjaTPeV-I=6X'3"o+a4kjTV0nBcp*To*8AZ#G9&5!o)^DOS1gpK'>!<Uc'.TT4G/,C(*".%[N:U<Y,Q"n[+P"Ho[T5ba&9HFB!N21ofadj_m_7S5tdt9SE"pb8c,,!P',3-DDXP<=l#T-*Ma4)WeH?(%Pg:tj;kRRp]*AYKli@p%M;;2gm,+X6Ql(uukeDQaF;O/R!42/cO-g"X1.^)7IQRKr11GQg#Y;W[Q7Y/tJLSKa>&a]6(Mn=I"m]k?8ul]W)I3P@:F&;52V5X]%c4R`sX]4c%<OE^>SOgadZonUb*fD-.HGbmMjqkJi:`i*G9PYa815Rt!U@D/rIQLR;-HFQp<`OnZZ8J_+XOh$shi)Q'oa.gn>\kV+%7^j-)C*2"l\8Y4'f(e[/6Z#IdD,3Nr+N.tX!jrQ:D-[V9(J"Y*qIQIO1ipN5^Pn@l%,CKuaLAY3?L:1rKLb?%.lFM)`2PR#2>%Rr%E_:[Y)rV.cMc![.96rt52PaS@e/F+a'-e'(+e&*?B1VuD$a:E$[",nLE?XH5]HIW6lE;5ml>+F$IBa#>$+7>78"dTR%%*P]i[bDU%#H!r2,?[#`n5_1*Q_!pje@Rap8"eF5G6I1DEko'VXqA&nM9XJr[FO;8F,f`m'q"U<-1snI#I].E7p)%m0g.rB<8g)o$mAm!9_!E9%?f?iB>nDqbp4dVh4ga18/t33@JhBCL3PR+CR;E%lAi@.jXBa_(Sis\O:PCn="FmLO3""8d47u:6/N)I#I[M2k#?Xa=:_b,%jsip6%F-m#pR=5B,;Nqq#V`?7U:9bl)<ti88i0l86W$n&II"eg_9X"rDWNjZYk$"?SnPUi2FBjE9HA5_t.8Gk$*>[8/(s7-$^RPq-e&>l$%Xj[+>N(]S<&oh6P2Z[129:ACL>fm;&l=A.+AY0&Fs!i0I_K$-h+\SVT3c1\p`(/%.@UWS6./5fKn[O7RTGC4a7b[j)/NQI%bR3bm%OEm`/l!iHZl86iPShB0e:b6<?NcWN7BCPu:@!Hr_S$+B];UF(H3Si.(&Q&,PE8]c=@-//r8&5QD,G1(7q%V!Big-\Fl,q1'aFsX>%%\oG`Q^l&nME7]b>?eV1o)%i[5rO=ifBa@G^gY1N.KU&n>DOni0gErN'?nMUUCML3e%ij0>n5ee^*M?i!b<*dgk^&u#rMZRNc+-R%YmkY9@<qB#:Nc1-X>42"?Kts?95;c;IP+TD*:+qGq!-fZZ]18gBlHV0l/?=)*"8@q+i$[9'Vb@`]%K&/"#k%/f0%RshsrH9FPa^-%Bn:mG0//jfcAjMC.QAD7!5MT_aY:U9(XW@S>h'4;#;6`Tdo/El.'oV'\.,ccFPVVJHE?ML-lSag\--7t47NI]E1t13K3='C!P>u?%UuO52'No>9o];Gi>!FYMK:$(G*b=)&Br7AGh&;NRoPQ]O7$5;[4_Cib(h3_]\;-P7D<4=n3]"W#IA$m%VGr.N<%(UTP!^WD0E'4n%5(MWj7Gi6MTX[)g`;ll6`M"&6'g&cmEcU^dF+]=EH;t$2$crF3S/dEf09;b=E)bGl"=K@8*7a;/<l%qEZblI+2[1g7M42?d4`Y6_%Oo42sCn6Ki=92!t$:*%sTi;THAardX"3"DK3>t'ufEC,hSKVSpZlgi&UpkX_1!-KL,Ylg'jEuhr0d5ODh5KUGZ4i%[oPdm8\kNlF%UG9'aX7L:/S#Dr'!X#l?3aPDH&15=u]TrQbC7`(qh--?')gnf]).=[Elj@8dD;_+t#YD7?</Fi/?(IaQNMp7!BG%RiK:*9PA>[+&%FjO&l8d9rd&:aAa@3jNK*!.mG9"HHF36&Mb!IjG(lLh2O,.K&8ppU<fICQYZ9Uh)F119Mfk3-bcYBs*.9qUTYEE?4uK-s9u)8uT/%C'E0W9OpU!'S?>2?V`f8AcIEm;+NpA.d0,-OtmLQTe(VM/U5K_&GmO7fS5+W/%mFaX2hf,V_9tU%jJlD<Xe[&"ZdBNe*(=-0dWCl%1t*2@.W@2WcD1/";5u[QQ?.EucE]N2mA6br\u7l#"1,f=:A3%;?/OT<k8;$jpOh,.cskE?4:Lp-0#HN]&e(jC]0j(#/;7@+EiCT>%V'ZKl!,BRfLQ_l7@J]p<;&UqgcjOho2t!5J=+fbARuF&S_^M"R#b[i-69[(S#!dn]JB;h$lLNCX8L,._D2Iuu-G0hH)ZY]\Uh^sm%#Z-NIJ?$(k-fQam:o*b4[bp;E2;\!dhBX[A<XKk3iP/97j(qm=,p9i=,qK[V)?MHdkqSd(+;&r06OQSn0uK*9RL\\EiTG[t]nO0R%ihaqK&ACjY&"N6='[\'+68P>XeL`G0Um!.u'9(_B%rcN4;Fd5Y-[Q#f*H0KUS/[V]13n"5VuA?]"dUm9`$6=7Zp\T$BmL=j'3598%k59MCU`_bj"9?I`2lZY;Q_5Db9;7fMjVYY<;I:;<8$L3FEkcQ95)BB7Gc:KblX^iM3^@fLU6`ae:aA_H2k[W')NT-AMZYN5aQY-J%%]%\eTE+_`/WBr>FkD'1I*4PDdla[@\jUbY9AID%"n'GYXpSVe3X$Pi`n.PKeC,*eTCb\#BrY[2mb':Il8.fDo2>nafbI<Gi<0$7%LNNC1gW/<6*eYA0qP7hM[M@2:(\)-nA^.$noh;P\Zr(EV$K78Tn2(/aoI,&,:5Y>"@&$W`6H[=mkcPsZ)_%6*kMs!Lk7R&f3NJ!/%@5&JMdhY-L:-h"TL`ls(H9o(oMmDaooL%enV-`>baAbBGl9!MK(@skje$;6,^2Fr'M%_q'85lUp+E%u'3Ydoac/DpX0YU/FGm2@R%igRT`e%F&8//T]i+Nsh;4(c'+%M]rdmITp:FfHZI712>HL+8<&&4!`PJSPUW1*F*AWQU[cG5)sCNVJoM8D"<'"Id:94ju.r0A#,F%`9dlZIXioTluJ<mj=+=<B*idf343MpM+8=ddo8U6hLq)]X%L8^khR4nVND+Scm'>Ih6l3q(e)34"s<#e[pi2R-u(-W!hdJhE`c<U%`a+0>kep@YK-H$S9Euf=Jm7=.67;C\b<['Z4=Wk[H(P"j3%dPdcP@8u4#/Wi\rqhB]c2_qe-ua=\.Y'Ogpc4aJO`n)M`S&5lh+(V%6iahKekgQR=ZMVZ]_9Np<hOQ1fAIOZaB[<6B)rZ(^HW"XWqIT2&[&S/Z\A8^*X+=<Yn'/UW4F1G@J)sP'Tlam*jQYeLb@n#[/`l&%U#@:_Nc[^Af^M?Ql"Pg2]5UlfblC83:=A!h]s2:6POY0[OFUG1ot2'uK"fGQ(h^!KHCuq:l)hd\K66(LWXCO]Plf7)-0U@G+b1+E%cr2QCCI0+K3hS.+0JK4A9E_(pC>fGQ3='A4!I^1N"?k*\!ia&d-!ka'Ss*+qU2_=B4;Kqq,4`cJ4Z3^-6hD[seRF0?7ghY:_:mO'%Oa0Tf1g!#n`)IjQKfZ^"q/`B!h8e2_::;o#;sAoed:?X\&uWl9fHHIV4S_UY7:ce?9$lG?(pY@+5mV9pLUa!YhMg6ZlA-68(Nh1&%]YM)4;t@^S:qkf(S8Ol[dYho9Oquk8l\5u\>h92eKbt&8_,2PuEh&EiQ)s@O:H\be8qp&\%*oR#9\ds>U>Xai%,*\i44t,jOq+WN%GoAs;,4YG?FM0XA'2CO_3o#NB]`,ip1XPfBU&'[i,Z1-5$%q3QeLfdJ8>X5G!?ok4Hng)e;&^\bIckOm_f_Hl#@?RZ`08dlW(([=%f&Hgea>0_+8N7`\kmSi6c8%iYoA!%(i,u3s6JUdLlf\'ZdWRjT,4IXklh5'`_Uj0H#KRq55h3B>',qn/a24osI8hpIDUP6[3/NBB%/L9B5;NusT!*J/l3JQRU/G=Ve[hDdmR:i+hRJ&[N;?9dK&`:Oo4NIiciK@fHf=>1q'of.j(;%N)`JEa:gr\Z("ih*DF3b55.]'AN%_J,$R>&p*mA#"^oT[?^#0oOnWd%$9NpcMq"C68VK6P?Dk*L_l5o/u?d)$*XHZ(0ht&sE[rQI`AlBiP(?-)TIVB)ipi`V!J3IX$"P%%dk4#QILM!&Yc>A9!%Mmj'?`Ia'b,dq+AF\FU*R[&RrqVB;-dSRL4\*?juU8c>m$rn,f5Y9fN;V*KV%[EiFunSO>"DofCh[K]"9.%C^Loi]&:,M6I=Ccgse[FjF/tkaFtpD9qo'cM'd@q]PHDG`!n?E%OtJO;[K,s3?K/7nY!^#L#RX.3%Us._t1ON7'%(t/RB`K!I]Cu%M9e96&]8YnBj!8J+.^?H^7cO`?Eu?hQJ*?rDjQ4o@_IC&:;R+'%>8R$_;M5lI6kdd%_-"Q,-5(to0.kId4oK/KTkF[M&<a4T13en%Nr)4R/>IVC_,WVdP6msGn'_Si5hm`OF'.XQP_)\WfI%CP.f6S>5Q*dN%M31<Q+l3)?G:6S[4GO:@O-pB[I@;,TbaB)DQ&7#K,\RA%G%a5pW9P=:_(Tt!/OX7.:b/CpB/)C-L0@f5X<#fmCNtf]730m9_oN`%=rHDpThmRNY^!)cR,f$ff7mp9JQf)`&eB+rhHhfl-uG[7%C'/hO>&AZrgTcbkl?-_"qBZ@S63?W:b.N0')>U7s>;0n='Eu'1)8RTsA0bZQZFn9O3B`EB`;(1hB`k]H$cB>b=,O6*9FY8%@ZldB%./*Ku=<r,?A'm=W)F+XB]ou>'_C-0?70=Dp>+o(*>=:tN..X0tW=Yt*q%,glKd):<KK.9j9=`\WM\:ne,TTl?L&tVDe"Fm()LK"a%cB=,[*K!2-("o^=@r9T;FN-A;'HSS?55I1EeB%(=@s[XVeVjr6NkN.:3[;8]"=/Wnc<2TK`,ApOdE=,D>j6XAZj$^u=ZX`<T(YDa%'g@Dh?m:<sP:9u=0lj4IM=0]m^cG[]Y8:cnW@^F>8R]:aA!M;B8&eG;8TY>YWI='RQm4GGLkb[#1+ZLt/A.mX,N)JR6L:<d#+L:$%"4g>RIkD\oPMjfarqSk,L3^*,UT?$AZ0Mf5j,GY0f:M=ho(^P[A9R7[DP0U!f])B\N[lIq1e3,dhBsg)3,OVr*S;\%Z21FdilNgi%_b/luVL&Z*7mLjINV.:Nf6Se"J.4i.&aK_Ling?(B:Eq2_2iL#rE&($gCZ8>I^9)g,8M>K#djj$>H)$So0-ikS@;;#C)l6U^'LQD%@[Ufu]hL!n.%Y"*7LTo2p-!@32g2O?-H32^@5?:3%>6T0I+eH:KI`a9Te5($)Q'in73iCY>MQ`&iTZQV&"?V_]j<>`rGE8!&9i:2%/5A8.F8dH3/C3#/cE:'(d>Tm;G[op(7@2WA(/amLb:-Y>p8HN;-Li!6k_jiVGT(CjMl6D+&69^DXcB&h/hh+L$1l:OGf!AhErq1o%HY6,-)u#kk+BV</8[QK@jC>JCI*T&iLW8)Yh3P2\,]<!t9?En<cNqU^<ZleBD&c]'<ZKl'AD#=WmFptUdq!8MYc8NBI,'0iHbrYQ%m3h3'n?Dj":u?^_3(WNb);u'W_lh?N57D_l5fC!=@/h4Z)4q+g0(mO$K#@:<J@>DaDFhm`rG3psG')'8K[nf?i4'2'r:)U'c@=Ns%\H7Po0n?\j(abc=Kl(\bfe84&Chppu/5iXS%=#M.:ts^n]LXTSV#b6'-l(Gs^cS1^Ub<1e]/*dk\2<]@ki3#gMkCNS/WBet<&d/2%[EH25]L8_::>^jkZi]3!>t#$%.0q@m8G1oaP6&UZP]En7["u@:=uAj@hU?p6Gk.0*ZA&d)G0IPKX(hah%b,m_Zcla9N>F\/f*sjt%MjU+X":'NGpNd_t=LgA4&0*p<F?Kh3kKaZuB^PejVlY(]8Vc':CkQGO)IkamK,_/K;S`k,5/<;hXGYuiL^\fiO^&A:Z:;e:hE\8c%gF=^fe##Fj47*tOCUlV[eIW7MFS(0onP46d14\:HV56Bd,#H")r[;G`_T`EeD$$<ub-%U_TTMeeAPG*DUXQiVUo)+e-[_8CeAU8P%04]_-jY9M8iJdk<Hg9[/O>t/LVRmY&W<j-l!Cs(aBa:tNoQY\1kEXQ_F4umg:M8+G=62?HZuq2NNB&D]jc2Q"3=I%ehBd^jB#1Fn%_-uTdNV`u@XS[Ab[-:nL2ViTrd6?9+@k4"ffbU3))+pB8nVN;]S&?G/&VW"J*JtiY`$\lW=4;%P04CgaM,/M:/0O&;obcK%?*6Pf%Wnsrhi'=E3O+IJAdW#gJ8#AmBK$jEse?ZO/nqJ)Q[s/AYgD,:o'rZui?cqAk#"?=?Zf)qs!!jGk2Wt0d.uVQdS-?R'8W`78&&=S\%/uh:C.sQC"lW&_Y.=T#O/A\a3P;'o\7D!LZ^qNmc[c7WQlp!>eIN!mNU";^XW(0h$#O.V.E3d,EY97hDcdS$]OS4F2$.EQK3-9Lf%a1u[Jc1r29m\T#1SHnq%FH6r"IoUV._*sYO;u+O/,.sp@:^0r3S@9jPb2%ul$<e"So,Ni=3tLsnoT.UIlC\p'csV?64q'gob4kUo%0LE>``BR[AXY3I6\2PUOhWWKuY8umldX&2-4a."g90&oli8h2+Q$'%o2']%\$Ykl*fljOTl>V_*DF*T/YbfdalJoc`FJ^uXkoGYk%anKAB`7kk!mG;?OjDY"j"HV0@4?'Z<RD:3^BmdUeDi[5&*u^_@7So^SH>W&SV):<HahZn&V+W<CJ#-hrfKd-t"qI3I%;J8_+6e#7%nriG!e!*=I!h];$&"]u?.+9;&o+L1,TX77blP.A3"0;Hh7P.Z2k*88VQ@_32NY=H(RBAmZdg_s%'BZO,.?N>R^"'9mU;LFher(94%(;5_9b@DhGb5:0W+/dZ-_fa:/`>n(Y8qXcO?gGeSr@tA='k`83JiA8me"1,?W"6Xqp(0JZI"?)]*/6\ZFCr"EEf9:E*.r^?3mYk]%:.h&tifpkB]UCPHo?73g&Hl>O`B_I'!OXY7dY^&0Ddc"tEb0,^A@6PnT[!Q&JS(j_c$F;N@#j*U?EOg_C>4bkoV0r@QbF1X!C_t-%75GqEqgoA+l-M,M!E>&nf@Hd1CN\\kbFC8NUJkfG@r2<):p>MQGHJ;;L@&+;h<?N==ApfiSR1^>%#")^TAmAKMF5(/>n)="dh-Oq%/U.DF)B:u6%b97KIUP*cWi&=$=YuR&4V`Ra34p]?E.q"aXt-MkYE+h=/_Wa;;^5Go<#L6PVSb5eOB-DW%@SbFQaTAZ*)5Oi5%nV)%;W!q19FHgK=.Ro:bf.^69e`BXaV61Z7j4^d.`3L\Pi2W_k_q4T:P7]_q4llP:Q;$=Hn^kfO>.cmjK4hk7>>,$Zqic)G&Z[=]Gq$o%DS)\%+C7Rb`o9%!gB-([1gPt$T1UU1J%0jAK_)+>-boGqk8,eTrqLGPI<5(#o()ImgT0/Lh;/%i`T,LLqO?<aLTB$fpCC?;fAGA5%#GcfX`IIE9J,&B>-iX^k6f&=~>%AI9_PrivateDataEnd