%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 10.0%%For: (Jill M Blumer) (Minneapolis Institute of Arts)%%Title: (Stribdotcom/b+w.eps)%%CreationDate: 9/23/02 11:11 AM%%BoundingBox: 175 -411 446 -343%%HiResBoundingBox: 175.1226 -410.5049 445.2715 -343.3662%%DocumentProcessColors: Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset AGM_Gradient 1.0 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_pattern_AI5 1.0 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%CMYKProcessColor: 1 0 1 0 (100c100y)%%+ 1 1 1 1 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () %AI3_TemplateBox: 306.5 -396.5 306.5 -396.5%AI3_TileBox: 87.7578 -718.7275 855.7578 -127.7275%AI3_DocumentPreview: Macintosh_ColorPic%AI5_ArtSize: 288 144%AI5_RulerUnits: 0%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -300 47 0.66 801 588 18 1 1 160 167 0 0%AI5_OpenViewLayers: 7%%PageOrigin:87.7578 -718.7275%%AI3_PaperRect:-10 602 779 -13%%AI3_Margin:10 -11 -11 13%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI7_Thumbnail: 128 32 8%%BeginData: 6372 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FFFFFF7D52FD05F82752FD05FFA8A8A8FD6EFF27FD0AF87DFFFF52%F8F8F852FD19FF52FD0FF852FD04FF7DF8F8F827FFFD04F8A8FD33FF27FD%0CF8A8FF7DF8F8F87DFD19FF7DFD0FF87DFD04FF52F8F8F827FFFD04F87D%FD32FF7DFD04F82752A87D52FD04F827FF52F8F8F852FD19FF52FD0FF852%FD04FF7DF8F8F827FFFD04F8A8FD32FF52F8F8F827FD05FF5227522752FF%7DF8F8F87DFD19FFA8275227522727F8F8F8272752275227A8FD04FF7D52%275252FFFD04F8A8FD32FF27F8F8F852FD09FFA827FD05F82727FFFFFF52%27FD04F8277DA8FFFFA8FD0427A852F8F87DFD05FF27F8F8F827FFFD0427%7D52F8F8527D27272752FFFD04F8A85227F8F8F87DA8FFFFFD0427FD04FF%A8FD0427FF52272727A87D52F82727FD06FFA852FD04277DFD04FF52F8F8%F827A8FD08FFA8FD08F8FFFF27FD08F827A8FFA8FD04F827F8F8F8A8FD05%FF52F8F8F852FFFD04F827F8F8F87D52F8F8F827FFFD04F827FD06F827A8%FFFD04F8FD04FF7DFD04F8FF27F8F8F827FD06F87DFFFFFF7DFD07F827FF%FFFF52FD05F8277D7DFD05FF7DFD08F8FF52FD04F82727FD05F8FFA8FD08%F87DFD05FF27F8F8F827FFFD08F8527DF8F8F827FFFD0CF87D7DFD04F8FD%04FFA8FD04F8FF27FD0BF8A8FF7DFD09F827A8FFFFFD09F82752FD04FF7D%F8F8F87DFFFFFF27F8F8F8A8FFFFA827F8F8F8FFA8FD06F85252FD06FF52%F8F8F852FFFD06F82752A852F8F8F827FFFD05F8277DA827F8F8F852A8FD%04F8FD04FFA8FD04F8FF27FD0BF852A8FD05F87D5227F8F8F827FFFFA8FD%0BF852A8FF52F8F8F852FFFFFF2727277DFD04FF27F8F8F87DA8FD05F8A8%FD08FF27F8F8F827FFFD05F87DFFFFFF7DF8F8F827FFFD04F827A8FFFFFF%27F8F87D7DFD04F8FD04FFA8FD04F8FF27F8F8F8277DFFFF27F8F8F8FF52%FD04F8A8FFFFA8FD04F87DFFFFFF5227FD09F827FF7DF8F8F87DFD08FF7D%7D27FD04F8A87DFD04F87DFD09FF27F8F8F827FFFD04F852FD04FF52F8F8%F827FFFD04F87DFD05FFF8F852A8FD04F8FD04FFA8FD04F8FF27F8F8F87D%FFFFFF7DF8F827FFFD04F87DFD04FF7DF8F8F827FD05FFA87D52FD07F8A8%52F8F8F852FD04FFA82727FD08F87DA8FD04F8A8FD09FF27F8F8F827FFFD%04F87DFD04FF7DF8F8F827FFFD04F8A8FD05FF27F87D7DFD04F8FD04FFA8%FD04F8FF27F8F8F8A8FFFFFFA8F8F852A8FD0DF827FD09FFA87DFD04F8A8%7DF8F8F87DFFFFFF52FD07F827F8F8F87DA8FD04F8FD0AFF52F8F8F852FF%FD04F8FD05FF52F8F8F827FFFD04F8A8FD05FF27F852A8FD04F8FD04FFA8%FD04F8FF27F8F8F8A8FFFFFFA8F8F87DA8FD0EF8527D527DFD07FF27F8F8%F8A852F8F8F852FFFF7DFD05F87D7DFF52F8F8F852A8FD04F8FD0AFF27F8%F8F827FFFD04F8FD05FF7DF8F8F827FFFD04F8A8FD05FF27F87D7DFD04F8%FD04FFA8FD04F8FF27F8F8F8A8FFFFFFA8F8F852A8FD12F87DFD06FF52F8%F8F87D7DF8F8F87DFFFF27F8F8F852FD04FF7DF8F8F87DA8FD04F8FD0AFF%52F8F8F852FFFD04F8FD05FF52F8F8F827FFFD04F87DFD05FFF8F852A8FD%04F8A8FFFFFF7DFD04F8FF27F8F8F8A8FFFFFFA8F8F852A8FD04F8FD0AFF%FD05F8FD05FFA8FD04F8A852F8F8F852FFFF27F8F8F87DFD04FFFD04F852%A8FD04F8FD0AFF27F8F8F827FFFD04F8FD05FF7DF8F8F827FFFD04F827A8%FFFFFF27F8F852FFFD04F827FFFFFF27FD04F8FF27F8F8F8A8FFFFFFA8F8%F8F8FFFD04F87DFD04FFA8527D527D7DFD04F8277D7D7D27FD05F8A8A8FD%04F827FF27FD04F8A8A8A827FD04F87DA8FD04F8FD0AFF52F8F8F852FFFD%04F8FD05FF52F8F8F827FFFD05F8277D7D27F8F8F827FFFD05F8522727FD%05F8FF27F8F8F8A8FFFFFFA8F8F8F8A87DF8F8F827A8FFFFFF27F8F8F827%FF52FD0CF852FFA8FD05F87D7DFD0CF852A8FD04F8FD0AFF27F8F8F827FF%FD04F8FD05FF7DF8F8F827FFFD0CF827FF52FD0CF8FF27F8F8F8A8FFFFFF%A8F8F8F827A8FD05F82727FD05F8A8FFFF7DFD09F8277DFFFFFF52FD04F8%27FF52FD07F827F8F8F87D7DFD04F8FD0AFF27F8F8F827FFFD04F8FD05FF%52F8F8F827FFFD0CF87DFFA827FD0BF8FF27F8F8F87DFFFFFF7DFD04F8FF%A827FD09F87DFD05FF5227F8F8F827277DA8FD05FF7D7D527D52FFFFA827%27F82727A87D7D527D7DA8527D527DFD0AFF5227272752FFFD0427FD05FF%7D27272752FFFD0427A827FD04F8277DFFFFFFA827FD04F852A8FD0427FF%52272727A8FFFFFFA8FD0427FFFFA827FD07F87DFD52FFA8A8FD09FFA8A8%FD1AFF7D7D527DA8FDFCFFFD4BFF52A8A827277DFD62FF277DFD0DFF5252%FD06FFA8F852A8F8F87DFD3FFFA8FD05FFA8FFFFFFA8FD04FFA8FFFFA8FD%05FFA8FD05FFA8A8FFFFFFF827FFFFFF7DFD06FFA8FFFFF827FFFFA8FFA8%FFFF7DA8FF52F852A8A8FD09FFA8FFA8A8A8FFFFFF7DA8FD06FFA8A87DFF%FFFFA8A8A8FFFFA8FFFFA8FFA8A8FD11FF7DF87DA8F852A8F82752F8A87D%F852A8F85227F8A852F87D7DF852FFFFFF7DF8F8277DFD04F8FFF8F8F87D%FF52F852F8A8FD04F852F827F87DF8F827FF7DFD04F87D7DF8F827F8F8A8%52F82727F827A8FF27F8F827FD04FFA827F8F827FF52F8F8277D7DF827F8%F827F8F852FD10FFA8F85252F8F87DF8527DF85252F82752F8527DF87D27%F82752F87DFFFFFF27F827F85227F8F827FF7D27F8F8FF52F8F8F87D27F8%27277DF8F8F87DF8F827FF52FD05F852F8F852F8F87D7DFD05F8A852FD04%F87DFFFFFF27F827F8F87DF8F827F8F87DFD08F8FD11FF27F827F8F827F8%A8FFF827F8F8F852F8FFA8F827F8F8272727FD04FF52F8F852FFFFF852FF%A8FD04F8FFFFF8F8A8FFFFF827FFFFF8F8A8FFA8F852FF7DF827FF27F8A8%27F8A852F8A8FF27F8FF52F8A852FD04F852FFFFFFF8F8A8A8527DF852A8%27F8A827F8A827F8FFF8F8FD11FF7DF8F827F8F8F8FFFF52FD05F852FFFF%27F8F827F8F852FF7DFFFF7D2727F87DFFF8F8FFF8F852F8F8FFFFF8F8FF%FFFFF827A8FFF8F8FFFF7DF827FF27F8F87DF8F87D27F852F8F852FF27F8%FF7DF8A827F8F85227A8FFA8FFF8F87D7DA852F8F87DF8F8A827F8FF27F8%FF27F8FD12FFF8F87DF8F87DFFFFA8F8F87DF8F87DFFFFA8F8F87DF8F8A8%A8F827FF2727F8F87DFFF8F85227F827F8F85252F8F852FFFF27F87D27F8%F852FFF8F8F852FD05F827FF27FD04F82752F8F82752F8F87DFD04F87D7D%F8A852FD04F8A8FD04F8277DF8F82727F85227F827FD11FF5227FF5227A8%FFFFFF2727FF5227FD04FF2727FF2752FFFF277DFF7D27F852FFFF7DF8A8%A827F85227A85227277DFFFF7D277D52272752FF2727277D525227F827A8%FFA827275252527D2727527D2727FF7DF82752FFA827A8FF272727A8FFA8%27F827FF7D272752522752522752FD07FFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)%%Version: 1.2 0%%CreationDate: (04/10/93) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)userdict /Adobe_level2_AI5 26 dict dup begin	put	/packedarray where not	{		userdict begin		/packedarray		{			array astore readonly		} bind def		/setpacking /pop load def		/currentpacking false def	 end		0	} if	pop	userdict /defaultpacking currentpacking put true setpacking	/initialize	{		Adobe_level2_AI5 begin	} bind def	/terminate	{		currentdict Adobe_level2_AI5 eq		{		 end		} if	} bind def	mark	/setcustomcolor where not	{		/findcmykcustomcolor		{			(AI8_CMYK_CustomColor)			6 packedarray		} bind def		/findrgbcustomcolor		{			(AI8_RGB_CustomColor)			5 packedarray		} bind def		/setcustomcolor		{			exch 			aload pop dup			(AI8_CMYK_CustomColor) eq			{				pop pop				4				{					4 index mul					4 1 roll				} repeat				5 -1 roll pop				setcmykcolor			}			{				dup (AI8_RGB_CustomColor) eq				{					pop pop					3					{						1 exch sub						3 index mul 						1 exch sub						3 1 roll					} repeat					4 -1 roll pop					setrgbcolor				}				{					pop					4					{						4 index mul 4 1 roll					} repeat					5 -1 roll pop					setcmykcolor				} ifelse			} ifelse		}		def	} if	/setAIseparationgray	{		false setoverprint		0 setgray		/setseparationgray where{			pop setseparationgray		}{			/setcolorspace where{				pop				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace				1 exch sub setcolor			}{				setgray			}ifelse		}ifelse	} def		/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put	userdict /level2?	systemdict /languagelevel known dup	{		pop systemdict /languagelevel get 2 ge	} if	put/level2ScreenFreq{ begin		60		HalftoneType 1 eq		{			pop Frequency		} if		HalftoneType 2 eq		{			pop GrayFrequency		} if		HalftoneType 5 eq		{			pop Default level2ScreenFreq		} if end} bind defuserdict /currentScreenFreq  	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse putlevel2? not	{		/setcmykcolor where not		{			/setcmykcolor			{				exch .11 mul add exch .59 mul add exch .3 mul add				1 exch sub setgray			} def		} if		/currentcmykcolor where not		{			/currentcmykcolor			{				0 0 0 1 currentgray sub			} def		} if		/setoverprint where not		{			/setoverprint /pop load def		} if		/selectfont where not		{			/selectfont			{				exch findfont exch				dup type /arraytype eq				{					makefont				}				{					scalefont				} ifelse				setfont			} bind def		} if		/cshow where not		{			/cshow			{				[				0 0 5 -1 roll aload pop				] cvx bind forall			} bind def		} if	} if	cleartomark	/anyColor?	{		add add add 0 ne	} bind def	/testColor	{		gsave		setcmykcolor currentcmykcolor		grestore	} bind def	/testCMYKColorThrough	{		testColor anyColor?	} bind def	userdict /composite?	1 0 0 0 testCMYKColorThrough	0 1 0 0 testCMYKColorThrough	0 0 1 0 testCMYKColorThrough	0 0 0 1 testCMYKColorThrough	and and and	put	composite? not	{		userdict begin		gsave		/cyan? 1 0 0 0 testCMYKColorThrough def		/magenta? 0 1 0 0 testCMYKColorThrough def		/yellow? 0 0 1 0 testCMYKColorThrough def		/black? 0 0 0 1 testCMYKColorThrough def		grestore		/isCMYKSep? cyan? magenta? yellow? black? or or or def		/customColor? isCMYKSep? not def	 end	} if end defaultpacking setpacking%%EndResource%%BeginResource: procset AGM_Gradient_Sep 1.0 0%%Title: (AGM Gradient Procset)%%Version: 1.0 0%%CreationDate: (4/26/96) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)userdict /defaultpacking currentpacking put true setpackinguserdict /AGM_Gradient_Sep 5 dict dup begin put/AGM_Gradient_Sep_private 100 dict def/initialize{	AGM_Gradient_Sep begin	AGM_Gradient_Sep_private begin	_compositeJob{		initializeSinglePassSeps	}{		initializeMultiPassSeps	}ifelse	initializeSeps	AGM_Gradient_private begin		/_fillSD newSpotDict def		/_rampSD newSpotDict def		/_nCustomColorSD nd end	AGM_Gradient_Sep_private 	{		dup xcheck 1 index type /arraytype eq and		{			bind		}if		pop pop	}forall	AGM_Gradient_Sep	{		dup xcheck 1 index type /arraytype eq and		{			bind		}if		pop pop	}forall end		currentdict readonly pop	 end}def/terminate{	currentdict AGM_Gradient_Sep eq{	 end	}if}defAGM_Gradient_Sep_private begin/initializeSeps{	/currentoverprint { _of } def	_noImage not _level2PS not and{		/linealFill{			currentoverprint{				0 0 1 1 rectfill			}{				mySave				8 setImageParms				_color{					_nCustomColorSD begin						cyan magenta yellow black							_spotColor{							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put						}if				 end						4{						makeByte8 4 1 roll					}repeat					true 4 _nCustomColorSD ncolorimage				}{					_nCustomColorSD/black get 1 exch sub makeByte8 					_nCustomColorSD bwImage				}ifelse				myRestore			}ifelse		}def	}if	/_whiteBytes 1 makeByte8 pt	 /knockOut{		_noImage _level2PS or currentoverprint or{			gsave			false setoverprint			1 setgray 			0 0 1 1 rectfill			grestore		}{			8 setImageParms _whiteBytes /_image load 5 execImage		}ifelse	}def	/newSpotDict{		11 dict dup begin			/nSpots 2 def			/spot1 7 dict def			/spot2 7 dict def	 end	}def	/initSpotData	{	 begin			/name nd			/tintImage nd			/tintValue nd			/spot_C nd			/spot_M nd			/spot_Y nd			/spot_K nd	 end	}def	/initSpotDict{	 begin			/cyanInk nd			/magentaInk nd			/yellowInk nd			/blackInk nd			/cyan nd			/magenta nd			/yellow nd			/black nd			spot1 initSpotData			spot2 initSpotData	 end	}def	/copySpotDict{		/_dst xp	 begin			cyanInk magentaInk yellowInk blackInk			cyan magenta yellow black			spot1 spot2	 end		_dst begin			/spot1 spot1 maxlength dict def			/spot2 spot2 maxlength dict def			spot2 copy pop			spot1 copy pop			/black xd			/yellow xd			/magenta xd			/cyan xd			/blackInk xd			/yellowInk xd			/magentaInk xd			/cyanInk xd	 end	}def	/setCustomColor	{		1 index /Black eq{			6 1 roll 5 npop			1 exch sub			setgray		}{			6 1 roll _ccAry1 astore exch			dup null eq{				pop 0			}if			setcustomcolor		}ifelse	}def	/setCStop{		/_colorStyle exch pt				_colorStyle 0 eq{			0 0 0			4 -1 roll			1 exch sub			_spotColor{				/_colorStyle 3 pt				/Black				1 index				1 exch sub			}if		}if		_colorStyle 2 eq{			3 npop		}if		_rampSD _fillSD copySpotDict				_colorStyle 4 eq{ 			pop			9 2 roll 3 npop 6 -2 roll		} if				_colorStyle 3 eq _colorStyle 4 eq or{ 								_fillSD begin				/_spot1 spot1 pt				/_spot2 spot2 pt		 end						exch dup _spot1/name get eq{				_spot1 _spot2			}{				_spot2 _spot1			}ifelse		 begin			 begin					/name xd					1 exch sub /tintValue xd					4{						tintValue mul 4 1 roll					}repeat					_spotColor not{						/tintValue null def					}if			 end				/tintValue 0 def		 end		}if		_fillSD nsetcustomcolor	}def	/renderCMYK{		spot1/name get null eq		spot2/name get null eq and		dup not{			pop			spot1 spotConverted		}if		dup not{			pop			spot2 spotConverted		}if	}def	/currentInk{		true		_inRipSep{			currentcolorspace 0 get			dup /DeviceGray eq			1 index /DeviceCMYK eq or{				pop				currentcmykcolor add add add 0 eq{					pop false				}if			}{				/Separation eq{					currentcolor 0 eq{						pop false					}if				}if			}ifelse		}{			currentgray 1 eq{				pop false			}if		}ifelse	}def	/currentInkN{			_nCustomColorSD begin			/_spot1 spot1 pt			/_spot2 spot2 pt			renderCMYK	 end		{			currentInk		}{			gsave			_spot1 begin				name null ne{					spot_C spot_M spot_Y spot_K name tintValue setCustomColor					currentInk				}{					false				}ifelse		 end			_spot2 begin				name null ne{					spot_C spot_M spot_Y spot_K name tintValue setCustomColor					currentInk				}{					false				}ifelse		 end			grestore						or		} ifelse	}def	/fill_ /fill load def	/fillOvp{		currentoverprint{			_inRipSep{				currentcolorspace 0 get				dup /DeviceGray eq				1 index /DeviceCMYK eq or{					pop					currentcmykcolor add add add 0 eq{						newpath					}if				}{					/Separation eq{						currentcolor 0 eq{							newpath						}if					}if				}ifelse			}{				currentgray 1 eq{					newpath				}if			}ifelse		}if		fill_	}def	/fill{		_nCustomColorSD begin			/_spot1 spot1 pt			/_spot2 spot2 pt			renderCMYK	 end				{			fillOvp		}{			_spot1 begin				gsave				name null ne{					spot_C spot_M spot_Y spot_K name tintValue setCustomColor				}{					1 setgray				}ifelse				fillOvp 				grestore		 end			_spot2 begin				name null ne{					gsave					true setoverprint					spot_C spot_M spot_Y spot_K name tintValue setCustomColor					fillOvp					grestore				}if		 end			newpath		}ifelse	}def	/expandSpot{		_spotColor{			/_len xp			_rampSD begin				spot1 begin					tintImage null ne{						tintImage _len expandOne /tintImage xd					}if			 end				spot2 begin					tintImage null ne{						tintImage _len expandOne /tintImage xd					}if			 end		 end		}{			pop		}ifelse	}def	/rampImage{		currentoverprint{			rectImage		}{			_enabledSmoothShade{				fillRamp			}{				_color{					_rampSD begin						/cyanInk _cyanData 0 ne def						/magentaInk _magentaData 0 ne def						/yellowInk _yellowData 0 ne def						/blackInk _blackData 0 ne def				 end										_nSamples setImageParms					_nSamples expandSpot					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor					true 4 _rampSD ncolorimage				}{					_rampSD begin						/cyanInk false def						/magentaInk false def						/yellowInk false def						/blackInk true def				 end					_nSamples setImageParms 					_blackData _rampSD bwImage				}ifelse			}ifelse		}ifelse	}def	/nsetcustomcolor where{		pop	}{		/nsetcustomcolor		{			/_nCustomColorSD xp			_nCustomColorSD begin				4 copy				/black xd				/yellow xd				/magenta xd				/cyan xd				4 copy				0 ne /blackInk xd				0 ne /yellowInk xd				0 ne /magentaInk xd				0 ne /cyanInk xd		 end			setcmykcolor		}def	}ifelse	/nsetcustomcolorend where{		pop	}{		/nsetcustomcolorend		{			/_nCustomColorSD null pt		}def	}ifelse}def/initializeSinglePassSeps{	/_decodeNorm	[0 1] pt	/_decodeInvert 	[1 0] pt	/spotConverted	{	 begin			name null eq{				false			}{				tintValue null eq tintImage null eq and{					true				}{					_inDistiller{						false					}{						false						currentpagedevice/SeparationColorNames get{name eq or}forall						not					}ifelse				}ifelse			}ifelse	 end	}def	/dictImage	{		20 dict dup begin			/Dict xd			/Decode xd			/DataSource xd			/ImageMatrix xd			/BitsPerComponent xd			/Height xd			/Width xd			/ImageType 1 def			Dict	 end		/_image load 1 execImage	}def	/bwImage{	 begin			gsave			currentoverprint{				blackInk{					[/Separation /Black /DeviceGray{}] setcolorspace					_decodeInvert dictImage				}{					5 npop				}ifelse			}{				/DeviceGray setcolorspace				_decodeNorm dictImage			}ifelse			grestore	 end	}def	/ncolorimage where{		pop	}{		/ncolorimage{		 begin				renderCMYK{					cyanInk 					magentaInk and					yellowInk and					blackInk and					not					currentoverprint 					and{							pop pop						gsave						cyanInk{							8 copy							[/Separation /Cyan /DeviceGray{}] setcolorspace							3 npop							_decodeNorm dictImage						}if						magentaInk{							8 copy							[/Separation /Magenta /DeviceGray{}] setcolorspace							4 -1 roll							3 npop							_decodeNorm dictImage						}if						yellowInk{							8 copy							[/Separation /Yellow /DeviceGray{}] setcolorspace							4 -2 roll							3 npop							_decodeNorm dictImage						}if						blackInk{							4 -3 roll							[/Separation /Black /DeviceGray{}] setcolorspace							3 npop							_decodeNorm dictImage						}{							8 npop						}ifelse						grestore					}{						/_colorimage load 10 execImage					}ifelse				}{					6 npop					gsave					spot1 begin						name null ne tintImage null ne and{							[/Separation name /DeviceGray{}] setcolorspace							4 copy							tintImage 							name /Black eq{								_decodeNorm							}{								_decodeInvert							}ifelse 							dictImage						}{							1 setgray fill						}ifelse				 end					spot2 begin						true setoverprint						name null ne tintImage null ne and{							[/Separation name /DeviceGray{}] setcolorspace							tintImage 							name /Black eq{								_decodeNorm							}{								_decodeInvert							}ifelse 							dictImage						}{							4 npop							1 setgray fill						}ifelse				 end					grestore				}ifelse		 end		}def	}ifelse	/getRampColorSpace{				/_renderCMYK _rampSD begin renderCMYK end pt				_renderCMYK not{			_rampSD begin				[/DeviceN 					[					spot1 begin						name null ne tintImage null ne and{							name						}if				 end					spot2 begin						name null ne tintImage null ne and{							name						}if				 end					]					_inDistiller {						/DeviceCMYK [							spot1 begin								name null ne tintImage null ne and{									spot_C spot_M spot_Y spot_K 1								}{									0 0 0 0 0								}ifelse						 end							spot2 begin								name null ne tintImage null ne and{									spot_C spot_M spot_Y spot_K 2								}{									0 0 0 0 0								}ifelse						 end							5 1 roll 6 -2 roll add							dup 1 eq {								pop								8 /index cvx 1 /exch cvx /sub cvx								9 1 /roll cvx							}{								2 eq {									8 /index cvx 1 /exch cvx /sub cvx									10 1 /roll cvx								}if							}ifelse							4 1 /roll cvx 5 -2 /roll cvx							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx							3 1 /roll cvx 4 -2 /roll cvx							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx							2 1 /roll cvx 3 -2 /roll cvx							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx							6 -2 /roll cvx /pop cvx /pop cvx						] cvx bind					}{						/DeviceCMYK {}					}ifelse				] setcolorspace		 end			/_nColorSpace currentcolorspace pt		}if				_nSamples 1 gt{ 			/_ndx 0 pt			[blendColor] cvx exec		}if		_renderCMYK{			/_C0 [currentcolor] pt			/_C0_Space currentcolorspace pt		}{			/_C0 [				_nCustomColorSD begin					spot1 begin 						name null ne{							tintValue						}if				 end					spot2 begin 						name null ne{							tintValue						}if				 end			 end			] pt			/_C0_Space _nColorSpace pt		}ifelse				_nSamples 1 gt{ 			/_ndx _nSamples 1 sub pt			[blendColor] cvx exec		}if		_renderCMYK{			/_C1 [currentcolor] pt			/_C1_Space currentcolorspace pt		}{			/_C1 [				_nCustomColorSD begin					spot1 begin 						name null ne{							tintValue						}if				 end					spot2 begin 						name null ne{							tintValue						}if				 end			 end			] pt			/_C1_Space _nColorSpace pt		}ifelse				/_rampColorSpace _C0_Space pt		_spotColor{			nsetcustomcolorend		}if	}def}def/initializeMultiPassSeps{	/invertXfer{		[		{			1 exch sub		}/exec load systemdict /currenttransfer get exec /exec load		] cvx systemdict /settransfer get exec	}def	/ccThrough{		gsave		1 setCustomColor		currentcmykcolor		grestore		add add add 0 ne	}def	/spotConverted	{	 begin			_isCMYKSep not{				false			}{				name null eq{					false				}{					tintValue null eq tintImage null eq and{						true					}{						spot_C spot_M spot_Y spot_K name ccThrough					}ifelse				}ifelse			}ifelse	 end	}def	/spotChannel	{		_isCMYKSep{			pop false		}{			/_spotDict xp				_spotDict/name get null eq{					false				}{					_spotDict/spot_C get					_spotDict/spot_M get					_spotDict/spot_Y get					_spotDict/spot_K get					_spotDict/name get					ccThrough 				}ifelse		}ifelse	}def	/getChannelData	{		_isCMYKSep dup{			pop renderCMYK		}if		{			_blackPlate{				4 1 roll 3 npop blackInk			}{				_yellowPlate{					4 2 roll 3 npop yellowInk				}{					_magentaPlate{						4 3 roll 3 npop magentaInk					}{						3 npop cyanInk					}ifelse				}ifelse			}ifelse			{				true /nonZeroData			}{				true /zeroData			}ifelse		}{			4 npop			spot1/name get null ne 			spot1 spotChannel and{				spot1/tintImage get dup null ne{					false /nonZeroData				}{					pop false /noData				}ifelse			}{				spot2/name get null ne 				spot2 spotChannel and{					spot2/tintImage get dup null ne{						false /nonZeroData					}{						pop false /noData					}ifelse				}{					false /noData				}ifelse			}ifelse		}ifelse	}def	/renderChannelData	{		/_tmp xp		_tmp /nonZeroData ne currentoverprint and{			pop			_tmp /zeroData eq{pop}if			4 npop		}{			_tmp /nonZeroData eq{				{					invertXfer				}if					systemdict/image				get 5 execImage			}{				pop				_tmp /zeroData eq{pop}if				4 npop				knockOut			}ifelse		}ifelse	}def	/bwImage{	 begin			gsave			dup dup dup			getChannelData			exch pop false exch			renderChannelData			grestore	 end	}def	/ncolorimage{	 begin			pop pop			gsave			spot2/name get null ne spot2 spotChannel and{				true setoverprint			}if			getChannelData 			renderChannelData			grestore	 end	}def	/getRampColorSpace{				/_renderCMYK _rampSD begin renderCMYK end pt				_nSamples 1 gt{ 			/_ndx 0 pt			[blendColor] cvx exec		}if				_renderCMYK{			/_C0 [currentcolor] pt			/_C0_Space currentcolorspace pt		}{			/_C0 [				_nCustomColorSD begin					0					spot1 begin 						name null ne						tintValue null ne and						spot1 spotChannel and{							pop tintValue						}if				 end					spot2 begin 						name null ne						tintValue null ne and						spot2 spotChannel and{							pop tintValue						}if				 end					1 exch sub			 end			] pt			/_C0_Space /DeviceGray pt		}ifelse				_nSamples 1 gt{ 			/_ndx _nSamples 1 sub pt			[blendColor] cvx exec		}if				_renderCMYK{			/_C1 [currentcolor] pt			/_C1_Space currentcolorspace pt		}{			/_C1 [				_nCustomColorSD begin					0					spot1 begin 						name null ne						tintValue null ne and						spot1 spotChannel and{							pop tintValue						}if				 end					spot2 begin 						name null ne						tintValue null ne and						spot2 spotChannel and{							pop tintValue						}if				 end					1 exch sub			 end			] pt			/_C1_Space /DeviceGray pt		}ifelse				/_rampColorSpace _C0_Space pt		_spotColor{			nsetcustomcolorend		}if	}def}defendenddefaultpacking setpacking%%EndResource%%BeginResource: procset AGM_Gradient 1.0 0%%Title: (AGM Gradient Procset)%%Version: 1.0 0%%CreationDate: (4/26/96) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)userdict /defaultpacking currentpacking put true setpackinguserdict /AGM_Gradient 20 dict dup begin put/AGM_Gradient_private 201 dict def/initialize{	AGM_Gradient begin	AGM_Gradient_private begin	initializeVars		/bd systemdict/mark get def	/ed		_level2PS 		{			(>>)		}{			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)		} ifelse	cvx def		_level2PS{		initializeLev2	}{		initializeLev1	}ifelse		queryDevice		initializeRectFill	initializeShading	initializeOps	_producingSeps{		AGM_Gradient_Sep/initialize get exec	}{		initializeComposite	}ifelse	_illustrator{		/f{}def		/F{}def		/s{}def		/S{}def		/b{}def		/B{}def	}if	/image where{		/image get /_image xd	}if	/colorimage where{		/colorimage get /_colorimage xd	}if	AGM_Gradient_private	{		dup xcheck 1 index type /arraytype eq and		{			bind		}if		pop pop	}forall	AGM_Gradient	{		dup xcheck 1 index type /arraytype eq and		{			bind		}if		pop pop	}forall end		currentdict readonly pop end}def/initializeAI{	pop pop 	AGM_Gradient/AGM_Gradient_private get /_illustrator true put	AGM_Gradient/initialize get exec		AGM_Gradient begin}def/unload{	systemdict/languagelevel known{		systemdict/languagelevel get 2 ge{			userdict/AGM_Gradient_Sep 2 copy known{				undef			}{				pop pop			}ifelse			userdict/AGM_Gradient 2 copy known{				undef			}{				pop pop			}ifelse		}if	}if}def/terminate{	currentdict AGM_Gradient eq{	 end	}if}def AGM_Gradient_private begin/initializeVars{	/_d255 256 array def	0 1 255{		_d255 exch dup 255 div put	}bind for	/_d255- 256 array def	0 1 255{		_d255- exch 1 _d255 2 index get sub put	}bind for	/_sSave nd	/_dUserSpace matrix defaultmatrix def	/_bUMatrix matrix def	/_imageMatrix matrix def	/_saveMatrix matrix def	/_xm matrix def	/_ccAry1 5 array def	/_bbox 4 array pt	/_level2PS 		systemdict/languagelevel known dup{			pop systemdict/languagelevel get 2 ge		}if	def	/_level3PS		_level2PS systemdict/shfill known and	def	currentdict /_illustrator known not{		/_illustrator false def	}if	}def/initializeOps{	AGM_Gradient begin	currentdict/Bc known not{		/Bc{					_renderFlag 2 eq _enabledSmoothShade or{				6 npop			}{				pushBSpace				_rampIndex 0 eq{					pop pop					setCStop				}if				linealFill				popBSpace			}ifelse				}def	}if		currentdict/Bg known not{		/Bg{			10 npop			/_gradName xp			/_renderFlag xp			/_enabledSmoothShade false pt					_renderFlag 2 ne{						_illustrator{					_of setoverprint				}if						/_enabledSmoothShade 					_level3PS{						_usingSmoothShade						_producingSeps not						currentoverprint not or and						_noImage not and					}{						false					}ifelse				pt								_illustrator _eo and _renderFlag 3 eq or{					eoclip				}{					clip				}ifelse						_gradNames _gradName 2 copy known{					get					mark exch aload pop					/_gradType xp					1 sub dup /_rampIndex xp					/_maxRampIndex xp					mark exch aload pop					0 0				}if				pop pop				getRampData			}{				mark mark			}ifelse		}def	}if		currentdict/Bm known not{		/Bm{			_renderFlag 2 ne{				_gradType 0 eq{					linealRamp				}{					radialGrad				}ifelse			}{				6 npop			}ifelse		}def	}if		currentdict/Bh known not{		/Bh{			2 npop			/_yHi xp			/_xHi xp			/_radHilite _xHi 0 ne _yHi 0 ne or pt		}def	}if		currentdict/Bn known not{		/Bn{			AGM_Gradient_private begin				dict /_gradNames xp		 end		}def	}if		currentdict/Bd known not{		/Bd{			AGM_Gradient begin			AGM_Gradient_private begin				/_nColorsBd xp				/_gradType xp				/_gradName xp		}def	}if		currentdict/BD known not{		/BD{				currentdict/_gradNames known not{					/_gradNames 20 dict def				}if				] _nColorsBd _gradType				]  _gradName exch /_gradNames xput		 end		 end		}def	}if		currentdict/Bb known not{		/Bb{					AGM_Gradient/AGM_Gradient_private get /_illustrator get not{				AGM_Gradient begin			}if			AGM_Gradient_private begin			_producingSeps{				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin			}if			mySave		}def	}if		currentdict/BB known not{		/BB{					/_tmp xp			cleartomark cleartomark					_tmp dup			_renderFlag					myRestore					_producingSeps{			 end			}if					_illustrator dup		 end			not {			 end			}if					{				2 ne exch 0 gt and{					2 eq{						s					}{						S					}ifelse				}{					pop newpath				}ifelse			}{				pop newpath			}ifelse						}def	}if		currentdict/Xm known not{		/Xm{			_xm astore pop		}def	}if	 end}def/queryDevice{	/_inDistiller		systemdict /currentdistillerparams known	def	/_inRipSep		_level2PS{			currentpagedevice/Separations 2 copy known{				get			}{				pop pop false			}ifelse		}{			false		}ifelse		_inDistiller or	def	/_noImage /lv1Fix where{		pop lv1Fix	}{		false	}ifelse	def	/_useShells where{		/_useShells get /_usingShells xp	}{		/_usingShells false def	}ifelse		/_useSmoothShade where{		pop	}{		/_useSmoothShade false def 	}ifelse	/_forceToCMYK where{		pop	}{		/_forceToCMYK false def 	}ifelse	/_cyanPlate 1 0 0 0 testCMYKColorThrough def	/_magentaPlate 0 1 0 0 testCMYKColorThrough def	/_yellowPlate 0 0 1 0 testCMYKColorThrough def	/_blackPlate 0 0 0 1 testCMYKColorThrough def	/_compositeJob		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and	def	/_isCMYKSep		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or	def	/_compositeSpotDevice where{		pop	}{		/_compositeSpotDevice _compositeJob not _inRipSep or{			1		}{			0		}ifelse		def	}ifelse	/_producingSeps _compositeSpotDevice 0 ne def	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def	/_dpiThreshold where{		pop	}{		/_dpiThreshold 600 def	}ifelse	/_screenFreqThreshold where{		pop	}{		/_screenFreqThreshold 150 def	}ifelse	/_contoneDevice where{		pop	}{		/_contoneDevice false def	}ifelse	/_subSampleOK 		_deviceDPI _dpiThreshold le 		currentScreenFreq _screenFreqThreshold le and 		_contoneDevice not and 	def}def/initializeRectFill{	/rectfill where dup{		exch pop not _producingSeps or	}{		not	}ifelse	{		/rectfill{			gsave			newpath			4 2 roll moveto			1 index 0 rlineto			0 1 index rlineto			1 index neg 0 rlineto			pop pop			closepath			fill			grestore		}def	}if}def/initializeLev1{	/currentScreenFreq{		currentscreen pop pop	}def	/_byte 1 string def	/colorimage where{		pop	}{		/colorimage{			pop pop			/_blackTmp xp			/_yellowTmp xp			/_magentaTmp xp			/_cyanTmp xp			/_cnt 0 pt			[			_byte dup 0			_cyanTmp 				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx			_magentaTmp				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx			_yellowTmp				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx			_blackTmp 				/_cnt cvx /get cvx _d255 /exch cvx /get cvx			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx			/dup cvx 0 /lt cvx{				pop 0			}/if cvx			/dup cvx 1 /gt cvx{				pop 1			}/if cvx			255 /mul cvx /cvi cvx			256 /mod cvx			/dup cvx 0 /lt cvx{				pop 0			}/if cvx			/put cvx			/_cnt dup cvx 1 /add cvx /pt cvx			] cvx			bind			/_image load 5 execImage		}def	}ifelse}def/initializeLev2{	/level2ScreenFreq{	 begin		60		HalftoneType 1 eq{			pop Frequency		}if		HalftoneType 2 eq{			pop GrayFrequency		}if		HalftoneType 5 eq{			pop Default level2ScreenFreq		}if		 end	}def	/currentScreenFreq{		currenthalftone level2ScreenFreq	}def}def/initializeShading{	_useSmoothShade _level3PS and{		/_usingSmoothShade true pt		initializeLev3_Ops	}{		/_usingSmoothShade false pt	}ifelse}def/initializeLev3_Ops{	/initShFill{		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt		/_rampFuncsArray _maxRampIndex array pt		/_boundsArray _maxRampIndex 1 sub array pt		/_encodeArray _maxRampIndex 2 mul array pt		/_beginCoord _rampPoint pt		/_colorSpace null pt		/_firstFill _rampIndex _maxRampIndex eq pt		/_lastFill false pt	}def	/linealShFill{		popBSpace		_xm aload pop pushBSpace				/_size _index 1 add pt		_size _maxRampIndex lt {			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt		}if				bd			/ShadingType 2			/ColorSpace _colorSpace			_rgbInCMYK{				/Function [					_cData sampFunc					_mData sampFunc					_yData sampFunc					_kData sampFunc				]			}{				/Function 					bd						/FunctionType 3						/Domain [0 1]						/Functions _rampFuncsArray						/Bounds _boundsArray						/Encode _encodeArray					ed			}ifelse			/Extend [_firstFill _lastFill]			/Domain [0 1] 			/Coords [_beginCoord 0 _endCoord 0]		ed		shfill	}def		/radialShFill{		/_size _maxRampIndex _index sub pt		_size _maxRampIndex lt {			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt			/_boundsArray _boundsArray _index _size 1 sub getinterval pt			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt		}if				/_rampLen _beginCoord _endCoord sub pt		bd			/ShadingType 3			/ColorSpace _colorSpace			_rgbInCMYK{				/Function [					_cData sampFunc					_mData sampFunc					_yData sampFunc					_kData sampFunc				]			}{				/Function 					bd						/FunctionType 3						/Domain [0 1]						/Functions _rampFuncsArray						/Bounds _boundsArray						/Encode _encodeArray					ed			}ifelse			/Extend [_lastFill _firstFill]			/Domain [0 1] 			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 		ed		shfill				_radHilite{			_xHi _rampLen mul _yHi _rampLen mul translate		}if	}def		%	/sampFunc{		/_tmp exch pt		bd			_tmp length 1 eq {				_tmp 0 get				/_tmp 2 string pt				dup _tmp 0 3 -1 roll put				_tmp 1 3 -1 roll put			}if			/FunctionType 0			/Order 1			/Size [_tmp length]			/Domain [0 1]			/BitsPerSample 8			/DataSource _tmp			/Range [0 1]		ed	}def		/fillRamp{				/_invert _midPoint 0.5 lt pt		_rampIndex _maxRampIndex eq {			initShFill		}if				getRampColorSpace				_colorSpace null eq{			/_colorSpace _rampColorSpace pt		}{			_colorSpace _rampColorSpace ne _rgbInCMYK or{				/_index _index 1 				_gradType 0 eq{					sub pt					linealShFill				}{					add pt					radialShFill				}ifelse				initShFill				/_colorSpace _rampColorSpace pt			} if		}ifelse		/_endCoord _endPoint pt			/_rgbInCMYK false pt		_producingSeps _forceToCMYK or _rgbRamp and {			_spotColor{				_renderCMYK			}{				_isCMYKSep			}ifelse		}{			false		}ifelse		{			_compositeJob{				/_rgbInCMYK true pt				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor				dup length string copy /_kData exch pt				dup length string copy /_yData exch pt				dup length string copy /_mData exch pt				dup length string copy /_cData exch pt			}{				_rampFuncsArray _index					_cyanPlate{_cyanData}if						_magentaPlate{_magentaData}if						_yellowPlate{_yellowData}if						_blackPlate{_blackData}if					_nSamples expandOne					sampFunc					dup begin /Decode [1 0] def end				put				/_invert false pt			}ifelse		}{			_rampFuncsArray _index				bd					/FunctionType 2					/Domain [0 1]					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div					_gradType 0 eq{						_invert{/C1}{/C0}ifelse _C0						_invert{/C0}{/C1}ifelse _C1					}{						_invert{/C0}{/C1}ifelse _C1						_invert{/C1}{/C0}ifelse _C0					}ifelse				ed			put		}ifelse				_rampIndex 1 ne{			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put		} if				0 1 _invert {exch}if		_encodeArray _index 2 mul 1 add 3 -1 roll put		_encodeArray _index 2 mul 3 -1 roll put		_rampIndex 1 eq {			/_lastFill true pt			_gradType 0 eq{				linealShFill			}{				radialShFill			}ifelse		}if		/_index _index 1 		_gradType 0 eq{			add pt		}{			sub pt		}ifelse	}def}def/initializeComposite{	/bwImage{		pop /_image load 5 execImage 	}def	/rampImage{		_enabledSmoothShade{			fillRamp		}{			_color{				_nSamples setImageParms									_rgbRamp _forceToCMYK not and{					_redData _greenData _blueData _nSamples 3 expandColor					true 3 null ncolorimage				}{					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor					true 4 null ncolorimage				}ifelse			}{				_nSamples setImageParms _blackData null bwImage			}ifelse		}ifelse	}def	/setCStop{		/_colorStyle exch pt		_colorStyle 0 eq{			1 exch sub			0 0 0			4 -1 roll		}if				_colorStyle 2 eq{			_forceToCMYK{				3 npop setcmykcolor			}{				setrgbcolor 4 npop			}ifelse		}if				_colorStyle 3 eq{			1 exch sub /_tmp xp			pop			4{				_tmp mul 4 1 roll			}repeat		}if				_colorStyle 4 eq{			_forceToCMYK{				6 npop setcmykcolor			}{				3 -1 roll pop pop				1 exch sub /_tmp xp				3{					1 exch sub _tmp mul 1 exch sub 3 1 roll				}repeat				setrgbcolor 				4 npop			}ifelse		}if		_colorStyle 2 ne _colorStyle 4 ne and{			null nsetcustomcolor		}if	}def	/nsetcustomcolor	{		pop setcmykcolor	}def	/nsetcustomcolorend	{	}def	/ncolorimage{		pop 		/_colorimage load 10 execImage	}def	_noImage not _level2PS not and{		/linealFill{			8 setImageParms			_color{				currentcmykcolor				4{					makeByte8 4 1 roll				}repeat				true 4 null ncolorimage			}{				currentgray makeByte8 null bwImage			}ifelse		}def	}if	/getRampColorSpace{		_nSamples 1 gt{ 			/_ndx 0 pt			[blendColor] cvx exec		}if		/_C0 [currentcolor] pt		/_C0_Space currentcolorspace pt				_nSamples 1 gt{ 			/_ndx _nSamples 1 sub pt			[blendColor] cvx exec		}if		/_C1 [currentcolor] pt		/_C1_Space currentcolorspace pt				/_rampColorSpace _C0_Space pt				_spotColor{			nsetcustomcolorend		}if	}def}def/npop{	{pop}repeat}def/xd{	exch def}def/nd{	null def}def/pt{	AGM_Gradient_private 3 1 roll put}def/xp{	exch pt}def/xput{	dup load dup length exch maxlength eq{		dup dup load dup		length 2 mul dict copy def	}if	load begin		def  end}def/mySave{	save /_sSave xp}def/myRestore{	_sSave type /savetype eq{		_sSave restore	}if}def/gMark{	counttomark 2 add -1 roll}def/execImage{	/_tmp xp	{		exec	}stopped{		$error /errorname get /undefinedresult ne{			stop		}{			_tmp npop		}ifelse	}if}def/pushBSpace{	newpath gsave	_bUMatrix astore concat }def/popBSpace{	grestore}def/makeByte8{	/_tmp 0 pt	255 mul cvi	8 string 8{		dup _tmp 3 index put 		/_tmp _tmp 1 add pt	}repeat	exch pop}def/setImageParms{	1 8 2 index 0 0 1 0 0 _imageMatrix astore}def/linealFill{	0 0 1 1 rectfill}def/testCMYKColorThrough{	gsave	setcmykcolor currentcmykcolor	grestore	add add add 0 ne}def/expandOne	{	/_tmp xp	dup type /stringtype ne{		_tmp string		exch		dup 0 ne{			255 mul cvi			0 1 _tmp 1 sub{				3 copy				exch put pop			}for		}if		pop	}if}def/expandColor{	/_channels xp	/_len xp	_channels{		_len expandOne _channels 1 roll	}repeat}def/blendColor{		_color{		_rgbRamp _producingSeps not and _forceToCMYK not and{			_redData dup type /stringtype eq{				/_ndx cvx /get cvx _d255 /exch cvx /get cvx			}if			_greenData dup type /stringtype eq{				/_ndx cvx /get cvx _d255 /exch cvx /get cvx			}if			_blueData dup type /stringtype eq{				/_ndx cvx /get cvx _d255 /exch cvx /get cvx			}if			/setrgbcolor cvx		}{			_cyanData dup type /stringtype eq{				/_ndx cvx /get cvx _d255 /exch cvx /get cvx			}if			_magentaData dup type /stringtype eq{				/_ndx cvx /get cvx _d255 /exch cvx /get cvx			}if			_yellowData dup type /stringtype eq{				/_ndx cvx /get cvx _d255 /exch cvx /get cvx			}if			_blackData dup type /stringtype eq{				/_ndx cvx /get cvx _d255 /exch cvx /get cvx			}if				_spotColor{				_rampSD begin					/_rampSD cvx /begin cvx						spot1 begin						tintImage dup type /stringtype eq{							/_ndx cvx /get cvx _d255- /exch cvx /get cvx						}{							dup null ne{								name type /nametype ne{									1 exch sub								}if							}if						}ifelse				 end					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx						spot2 begin						tintImage dup type /stringtype eq{							/_ndx cvx /get cvx _d255- /exch cvx /get cvx						}{							dup null ne{								name type /nametype ne{									1 exch sub								}if							}if						}ifelse				 end					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx					/end cvx			 end				/_rampSD cvx				/nsetcustomcolor cvx			}{				/setcmykcolor cvx			}ifelse		}ifelse	}{		_blackData dup type /stringtype eq{			/_ndx cvx /get cvx _d255 /exch cvx /get cvx		}if				_enabledSmoothShade{			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx		}{			 /setgray cvx		}ifelse	}ifelse}def/useRectImage{	_subSampleOK _enabledSmoothShade not and{		{			mark			0 1 dtransform atan cvi 90 mod 0 eq			1 0 dtransform atan cvi 90 mod 0 eq		} stopped		{			cleartomark			false		}		{			and exch pop		} ifelse	}{		false	}ifelse}def/linealImage{	_noImage{		rectImage	}{		_producingSeps{				AGM_Gradient_Sep/AGM_Gradient_Sep_private get				/rampImage get exec		}{			useRectImage{				rectImage			}{				rampImage			}ifelse		}ifelse	}ifelse}def/linealRamp{	pushBSpace	_ramp{		linealImage	}{		linealFill	}ifelse	popBSpace	/_rampIndex _rampIndex 1 sub pt	_rampIndex 0 gt{		getRampData	}if}def/radialGrad{	/_usingShells currentoverprint _producingSeps and _usingShells or pt	/_firstShell true pt	_enabledSmoothShade not{		currentoverprint _producingSeps and{						newpath			clippath pathbbox 			1 add 4 1 roll			1 add 4 1 roll			1 sub 4 1 roll			1 sub 4 1 roll			_bbox astore pop						newpath			_bbox 0 get _bbox 1 get moveto			_bbox 2 get _bbox 1 get lineto			_bbox 2 get _bbox 3 get lineto			_bbox 0 get _bbox 3 get lineto			closepath			6 copy			gsave _bUMatrix astore concat			1 0 moveto 0 0 1 0 360 arc closepath			eoclip fill			popBSpace		}{			fill		}ifelse	}if	pushBSpace		_radHilite{		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp		_rampPoint 1 lt{			1 _rampPoint sub dup _xHi mul exch _yHi mul translate		}if	}if	_rampIndex{		radialRamp		/_rampIndex _rampIndex 1 sub pt		_rampIndex 0 gt{			getRampData		}if	}repeat		popBSpace	}def/getNSamples{	0 exch	{		dup type /stringtype eq{			length exch pop exit		}if		pop	}forall	dup 0 eq{		pop 1	}if}def/getRampData{	/_rampType gMark pt	/_color _rampType 0 gt pt	/_ccRGB _rampType 5 eq _rampType 6 eq or pt	/_rgbRamp _rampType 4 eq _ccRGB or pt	/_ccProcess _rampType 2 eq _rampType 3 eq or pt	_producingSeps{		_rampSD initSpotDict		/_spotColor _ccProcess _ccRGB or pt	}{		/_spotColor false pt	}ifelse	/_ramp true pt	100 div /_rampPoint xp	100 div /_midPoint xp		dup /_colorStyle xp	_colorStyle 0 eq{ 		2	}{		_colorStyle 1 eq{ 			5		}{			_colorStyle 2 eq{				8			}{				_colorStyle 3 eq{					_producingSeps{						_rampSD /spot1 get begin							/name 3 index def							/spot_K 4 index def							/spot_Y 5 index def							/spot_M 6 index def							/spot_C 7 index def					 end					}if					7				}{					_producingSeps{						_rampSD/spot1 get begin							/name 4 index def							/spot_K 8 index def							/spot_Y 9 index def							/spot_M 10 index def							/spot_C 11 index def					 end					}if					11				} ifelse			}ifelse		}ifelse	}ifelse	/_tmp xp	_tmp index 100 div /_endPoint xp		_gradType 1 eq{		_tmp 1 add index 100 div /_midPoint xp	}if		_producingSeps{		_tmp 2 add index /_nextColorStyle xp		_nextColorStyle 3 eq{			/_tmp _tmp 4 add pt			_tmp index dup			_rampSD/spot1 get /name get ne{				_rampSD /spot2 get begin					/name xd					/spot_K _tmp 2 add index def					/spot_Y _tmp 3 add index def					/spot_M _tmp 4 add index def					/spot_C _tmp 5 add index def			 end			}{				pop			}ifelse		}if		_nextColorStyle 4 eq{			/_tmp _tmp 5 add pt			_tmp index dup			_rampSD/spot1 get /name get ne{				_rampSD /spot2 get begin					/name xd					/spot_K _tmp 5 add index def					/spot_Y _tmp 6 add index def					/spot_M _tmp 7 add index def					/spot_C _tmp 8 add index def			 end			}{				pop			}ifelse		}if	}if	_rampType 3 eq _rampType 6 eq or{		/_tint2Data gMark pt	}if	_ccProcess _ccRGB or{		/_tint1Data gMark pt	}if	_rgbRamp{		/_blueData gMark pt		/_greenData gMark pt		/_redData gMark pt	}if		_producingSeps{		_ccProcess _ccRGB or{			_rampType 3 eq _rampType 6 eq or{				_rampSD /spot2 get begin					/tintImage _gradType 0 eq{						_tint2Data					}{						_tint1Data					}ifelse					def					name null eq{						/name /Black def					}if			 end			}if			_rampSD /spot1 get begin				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{					_tint1Data				}{					_tint2Data				}ifelse				def				_rampType 2 eq _rampType 5 eq or{					name null eq{						/name _rampSD/spot2 get /name get def						/spot_C _rampSD/spot2 get /spot_C get def						/spot_M _rampSD/spot2 get /spot_M get def						/spot_Y _rampSD/spot2 get /spot_Y get def						/spot_K _rampSD/spot2 get /spot_K get def						_rampSD/spot2 get /name null put					}if				}{					name null eq{						/name /Black def					}if				}ifelse		 end		}if	}if	/_blackData gMark pt	_rampType 0 gt{		counttomark 4 add -3 roll		/_yellowData xp		/_magentaData xp		/_cyanData xp	}if	_ramp{		/_nSamples			[			_rampType 0 eq {_blackData}if			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if			] getNSamples pt		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if	} if		setCStop}def/rectImage{	gsave	/_sInc 1 pt	/_bInc 1 _nSamples div pt	/_nSubSamples _nSamples pt	/_optimize false pt			_subSampleOK{		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt				_pChange .5 gt dup /_optimize xp{			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt			/_bInc 1 _nSubSamples div pt			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt		}if	}if	0	_nSubSamples	[	/dup cvx	_optimize {		/round cvx /cvi cvx	} if	/_ndx /exch cvx /pt cvx	blendColor	0 0 _bInc 1 /rectfill cvx	_bInc 0 /translate cvx	_sInc /add cvx	] cvx	bind	repeat	pop	_spotColor{		nsetcustomcolorend	}if	grestore}def/radialInit{	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt	/_sInc -1 pt	/_rampLen _rampPoint _endPoint sub pt	/_bInc _rampLen _nSamples div neg pt	/_optimize false pt	_subSampleOK{		/_uRampLen			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt			2 copy lt{				exch			}if pop		pt		/_pChange 			_uRampLen 0 eq{				0			}{				_nSamples _uRampLen div			}ifelse		pt		_pChange .5 gt dup /_optimize xp{			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt			/_bInc _rampLen _nRadSamples div neg pt			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt		}if	}if	_radHilite{		/_xBCInc _xHi _rampLen mul _nRadSamples div pt		/_yBCInc _yHi _rampLen mul _nRadSamples div pt	}if}def/radialRamp{	_enabledSmoothShade{		fillRamp	}{		/_saveMatrix _saveMatrix currentmatrix def				radialInit			%		%		true		_producingSeps _rgbRamp not and{			_nSamples 1 gt{ 				pop				/_ndx 0 pt				[blendColor] cvx exec				currentInkN				/_ndx _nSamples 1 sub pt				[blendColor] cvx exec				currentInkN				or			}if		}if		{			_rampPoint					_nSamples 1 sub					_nRadSamples 			[				/dup cvx						_optimize{					/round cvx /cvi cvx				}if						/_ndx /exch cvx /pt cvx								_usingShells{					/_firstShell cvx{						/_firstShell false pt					}{						0 0 3 index 360 0 arcn fill					}/ifelse cvx				}if						blendColor						_usingShells{					0 0 3 /index cvx 0 360 /arc cvx 				}{					0 0 3 /index cvx 0 360 /arc cvx /fill cvx				}ifelse						/exch cvx _bInc /add cvx /exch cvx						_sInc /add cvx						_radHilite{					_xBCInc _yBCInc /translate cvx				}if			] cvx bind			repeat					pop pop		}{			_usingShells{				0 0 _rampPoint 360 0 arcn fill			}if		}ifelse			_saveMatrix setmatrix				_radHilite{			_xHi _rampLen mul _yHi _rampLen mul translate		}if				_usingShells _rampIndex 1 eq and{			fill		}if			_spotColor{			nsetcustomcolorend		}if	}ifelse}defendenddefaultpacking setpacking%%EndResource%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0userdict /Adobe_ColorImage_AI6 known not{	userdict /Adobe_ColorImage_AI6 53 dict put } ifuserdict /Adobe_ColorImage_AI6 get begin/initialize { 	Adobe_ColorImage_AI6 begin	Adobe_ColorImage_AI6 {		dup type /arraytype eq {			dup xcheck {				bind			} if		} if		pop pop	} forall} def/terminate { end } defcurrentdict /Adobe_ColorImage_AI6_Vars known not {	/Adobe_ColorImage_AI6_Vars 41 dict def} ifAdobe_ColorImage_AI6_Vars begin	/plateindex -1 def	/_newproc null def	/_proc1 null def	/_proc2 null def	/sourcearray 4 array def	/_ptispace null def	/_ptiname null def	/_pti0 0 def	/_pti1 0 def	/_ptiproc null def	/_ptiscale 0 def	/_pticomps 0 def	/_ptibuf 0 string def	/_gtigray 0 def	/_cticmyk null def	/_rtirgb null def	/XIEnable true def	/XIType 0 def	/XIEncoding 0 def	/XICompression 0 def	/XIChannelCount 0 def	/XIBitsPerPixel 0 def	/XIImageHeight 0 def	/XIImageWidth 0 def	/XIImageMatrix null def	/XIRowBytes 0 def	/XIFile null def	/XIBuffer1 null def	/XIBuffer2 null def	/XIBuffer3 null def	/XIDataProc null def	/XIColorSpace /DeviceGray def	/XIColorValues 0 def	/XIPlateList false defend/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def/ci6image systemdict /image get def/ci6curtransfer systemdict /currenttransfer get def/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def/ci6foureq {	4 index ne {		pop pop pop false	}{		4 index ne {			pop pop false		}{			4 index ne {				pop false			}{				4 index eq			} ifelse		} ifelse	} ifelse} def/ci6testplate {	Adobe_ColorImage_AI6_Vars begin		/plateindex -1 def		/setcmykcolor where {			pop			gsave			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub			grestore			1 0 0 0 ci6foureq { 				/plateindex 0 def			}{				0 1 0 0 ci6foureq { 					/plateindex 1 def				}{					0 0 1 0 ci6foureq {						/plateindex 2 def					}{						0 0 0 1 ci6foureq { 							/plateindex 3 def						}{							0 0 0 0 ci6foureq {								/plateindex 5 def							} if						} ifelse					} ifelse				} ifelse			} ifelse			pop pop pop pop		} if		plateindex end} def/ci6concatprocs {	/packedarray where {		pop dup type /packedarraytype eq 2 index type		/packedarraytype eq or	}{		false	} ifelse	{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		_proc1 aload pop		_proc2 aload pop		_proc1 length		_proc2 length add		packedarray cvx	}{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		/_newproc _proc1 length _proc2 length add array def		_newproc 0 _proc1 putinterval		_newproc _proc1 length _proc2 putinterval		_newproc cvx	} ifelse} def/ci6istint {	type /arraytype eq } def/ci6isspot {	dup type /arraytype eq {		dup length 1 sub get /Separation eq	}{		pop false	} ifelse} def/ci6spotname {	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse} def/ci6altspace {	aload pop pop pop ci6colormake} def/ci6numcomps {	dup /DeviceGray eq {		pop 1	}{		dup /DeviceRGB eq {			pop 3		}{			/DeviceCMYK eq {				4			}{				1			} ifelse		} ifelse	} ifelse} def/ci6marksplate {	dup /DeviceGray eq {		pop plateindex 3 eq	}{		dup /DeviceRGB eq {			pop plateindex 5 ne		}{			dup /DeviceCMYK eq {				pop plateindex 5 ne			}{				dup ci6isspot {					/findcmykcustomcolor where {						pop						dup length 2 sub get						0.1 0.1 0.1 0.1 5 -1 roll						findcmykcustomcolor 1 setcustomcolor						systemdict /currentgray get exec						1 ne					}{						pop plateindex 5 ne					} ifelse				}{					pop plateindex 5 ne				} ifelse			} ifelse		} ifelse	} ifelse} def/ci6colormake {	dup ci6numcomps	exch 1 index 2 add 1 roll	dup 1 eq {pop}{array astore} ifelse	exch} def/ci6colorexpand {	dup ci6spotname exch	dup ci6istint {		ci6altspace		exch 4 1 roll	}{		1 3 1 roll	} ifelse} def/ci6colortint {	dup /DeviceGray eq {		3 1 roll 1 exch sub mul 1 exch sub exch	}{		dup /DeviceRGB eq {			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch		}{			dup /DeviceCMYK eq {				3 1 roll {1 index mul exch} forall pop 4 array astore exch			}{				3 1 roll mul exch			} ifelse		} ifelse	} ifelse} def/ci6colortocmyk {	dup /DeviceGray eq {		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore	}{		dup /DeviceRGB eq {			pop aload pop _rgbtocmyk 4 array astore		}{			dup /DeviceCMYK eq {				pop			}{				ci6altspace ci6colortint ci6colortocmyk			} ifelse		} ifelse	} ifelse} def/ci6makeimagedict {	7 dict begin		/ImageType 1 def		/Decode exch def		/DataSource exch def		/ImageMatrix exch def		/BitsPerComponent exch def		/Height exch def		/Width exch def	currentdict end} def/ci6stringinvert {	0 1 2 index length 1 sub {		dup 2 index exch get 255 exch sub 2 index 3 1 roll put	} for} def/ci6stringknockout {	0 1 2 index length 1 sub {		255 2 index 3 1 roll put	} for} def/ci6stringapply {	0 1 4 index length 1 sub {		dup		4 index exch get		3 index 3 1 roll		3 index exec	} for	pop exch pop} def/ci6walkrgbstring {	0 3 index	dup length 1 sub 0 3 3 -1 roll {		3 getinterval {} forall		5 index exec		3 index	} for		 5 {pop} repeat} def/ci6walkcmykstring{	0 3 index	dup length 1 sub 0 4 3 -1 roll {		4 getinterval {} forall				6 index exec				3 index			} for		5 { pop } repeat	} def/ci6putrgbtograystr{	.11 mul exch		.59 mul add exch		.3 mul add		cvi 3 copy put		pop 1 add} def/ci6putcmyktograystr{	exch .11 mul add		exch .59 mul add		exch .3 mul add		dup 255 gt { pop 255 } if		255 exch sub cvi 3 copy put		pop 1 add} def/ci6rgbtograyproc {		Adobe_ColorImage_AI6_Vars begin 		sourcearray 0 get exec		XIBuffer3		dup 3 1 roll 				/ci6putrgbtograystr load exch		ci6walkrgbstring end} def/ci6cmyktograyproc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec		XIBuffer3		dup 3 1 roll 				/ci6putcmyktograystr load exch		ci6walkcmykstring end} def/ci6separatecmykproc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec				XIBuffer3				0 2 index				plateindex 4 2 index length 1 sub {			get 255 exch sub						3 copy put pop 1 add						2 index		} for		pop pop exch pop end} def	/ci6compositeimage {	dup 1 eq {		pop pop image	}{		/ci6colorimage load null ne {			ci6colorimage		}{			3 1 roll pop			sourcearray 0 3 -1 roll put			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load			image		} ifelse	} ifelse} def/ci6knockoutimage {	gsave	0 ci6curtransfer exec 1 ci6curtransfer exec	eq {		0 ci6curtransfer exec 0.5 lt	}{		0 ci6curtransfer exec 1 ci6curtransfer exec gt	} ifelse	{{pop 0}}{{pop 1}} ifelse	systemdict /settransfer get exec	ci6compositeimage	grestore} def/ci6drawimage {	ci6testplate -1 eq {		pop ci6compositeimage	}{		dup type /arraytype eq {			dup length plateindex gt {plateindex get}{pop false} ifelse		}{			{				true			}{				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse			} ifelse		} ifelse		{			dup 1 eq {				pop pop ci6image			}{				dup 3 eq {					ci6compositeimage				}{					pop pop					sourcearray 0 3 -1 roll put					/ci6separatecmykproc load					ci6image				} ifelse			} ifelse		}{			ci6curoverprint {				7 {pop} repeat			}{				ci6knockoutimage			} ifelse		} ifelse	} ifelse} def/ci6proctintimage {	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store	/_pticomps _ptispace ci6numcomps store	/_ptiscale _pti1 _pti0 sub store	level2? {		_ptiname length 0 gt version cvr 2012 ge and {			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace			[_pti0 _pti1] ci6makeimagedict ci6image		}{			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace			[0 255] ci6makeimagedict ci6image		} ifelse	}{		_pticomps 1 eq {			{				dup				{					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put				} ci6stringapply			} ci6concatprocs ci6image		}{			{				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse				_ptibuf {					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc					_pticomps 2 add -2 roll					_pticomps 1 sub -1 0 {						1 index add 2 index exch						5 -1 roll						255 mul cvi put					} for					pop pop				} ci6stringapply			} ci6concatprocs false _pticomps			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse		} ifelse	} ifelse} def/ci6graytintimage {	/_gtigray 5 -1 roll store	{1 _gtigray sub mul 1 exch sub} 4 1 roll	/DeviceGray ci6proctintimage} def/ci6cmyktintimage {	/_cticmyk 5 -1 roll store	{_cticmyk {1 index mul exch} forall pop} 4 1 roll	/DeviceCMYK ci6proctintimage} def/ci6rgbtintimage {	/_rtirgb 5 -1 roll store	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll	/DeviceRGB ci6proctintimage} def/ci6tintimage {	ci6testplate -1 eq {		ci6colorexpand		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll		dup /DeviceGray eq {			pop ci6graytintimage		}{			dup /DeviceRGB eq {				pop ci6rgbtintimage			}{				pop ci6cmyktintimage			} ifelse		} ifelse	}{		dup ci6marksplate {			plateindex 5 lt {				ci6colortocmyk plateindex get				dup 0 eq ci6curoverprint and {					7 {pop} repeat				}{					1 exch sub					exch {1 0}{0 1} ifelse () ci6graytintimage				} ifelse			}{				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage			} ifelse		}{			ci6curoverprint {				8 {pop} repeat			}{				pop pop pop				{pop 1} 0 1 () /DeviceGray ci6proctintimage			} ifelse		} ifelse	} ifelse} def/XINullImage {} def/XIImageMask {	XIImageWidth XIImageHeight false	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	imagemask} def/XIImageTint {	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	XIType 3 eq XIColorValues XIColorSpace ci6tintimage} def/XIImage {	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	false XIChannelCount XIPlateList ci6drawimage} def/XG {	pop pop} def/XF {	13 {pop} repeat} def/Xh {	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		/XIImageHeight exch def		/XIImageWidth exch def		/XIImageMatrix exch def		0 0 moveto		XIImageMatrix concat		XIImageWidth XIImageHeight scale				/_lp /null ddef		_fc		/_lp /imagemask ddef end} def/XH {	Adobe_ColorImage_AI6_Vars begin		grestore end} def/XIEnable {	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put} def/XC {	Adobe_ColorImage_AI6_Vars begin		ci6colormake		/XIColorSpace exch def		/XIColorValues exch def end} def/XIPlates {	Adobe_ColorImage_AI6_Vars begin		/XIPlateList exch def end} def/XI{	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		cvi dup		256 idiv /XICompression exch store		256 mod /XIEncoding exch store		pop pop		/XIChannelCount exch def		/XIBitsPerPixel exch def		/XIImageHeight exch def		/XIImageWidth exch def		pop pop pop pop		/XIImageMatrix exch def		XIBitsPerPixel 1 eq {			XIImageWidth 8 div ceiling cvi		}{			XIImageWidth XIChannelCount mul		} ifelse		/XIRowBytes exch def		XIEnable {			/XIBuffer3 XIImageWidth string def			XICompression 0 eq {				/XIBuffer1 XIRowBytes string def				XIEncoding 0 eq {					{currentfile XIBuffer1 readhexstring pop}				}{					{currentfile XIBuffer1 readstring pop}				} ifelse			}{				/XIBuffer1 256 string def				/XIBuffer2 XIRowBytes string def				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}				/ASCII85Decode filter /DCTDecode filter				/XIFile exch def				{XIFile XIBuffer2 readstring pop}			} ifelse			/XIDataProc exch def						XIType 1 ne {				0 setgray			} if			XIType 1 eq {				XIImageMask			}{				XIType 2 eq XIType 3 eq or {					XIImageTint				}{					XIImage				} ifelse			} ifelse		}{			XINullImage		} ifelse		/XIPlateList false def		grestore end} defend%%EndProcSet%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)%%Version: 1.3 0%%CreationDate: (3/7/1994) ()%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_Illustrator_AI5_vars 112 dict dup beginput/_?cmyk false def/_eo false def/_lp /none def/_pf{} def/_ps{} def/_psf{} def/_pss{} def/_pjsf{} def/_pjss{} def/_pola 0 def/_doClip 0 def/cf currentflat def/_lineorientation 0 def/_charorientation 0 def/_yokoorientation 0 def/_tm matrix def/_renderStart[/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def/_renderEnd[null null null null /i1 /i1 /i1 /i1] def/_render -1 def/_shift [0 0] def/_ax 0 def/_ay 0 def/_cx 0 def/_cy 0 def/_leading[0 0] def/_ctm matrix def/_mtx matrix def/_sp 16#020 def/_hyphen (-) def/_fontSize 0 def/_fontAscent 0 def/_fontDescent 0 def/_fontHeight 0 def/_fontRotateAdjust 0 def/Ss 256 string defSs 0 (fonts/) putinterval/_cnt 0 def/_scale [1 1] def/_nativeEncoding 0 def/_useNativeEncoding 0 def/_tempEncode 0 def/_pntr 0 def/_tDict 2 dict def/_hfname 100 string def/_hffound false def/Tx{} def/Tj{} def/CRender{} def/_AI3_savepage{} def/_gf null def/_cf 4 array def/_rgbf 3 array def/_if null def/_of false def/_fc{} def/_gs null def/_cs 4 array def/_rgbs 3 array def/_is null def/_os false def/_sc{} def/_pd 1 dict def/_ed 15 dict def/_pm matrix def/_fm null def/_fd null def/_fdd null def/_sm null def/_sd null def/_sdd null def/_i null def/_lobyte 0 def/_hibyte 0 def/_cproc null def/_cscript 0 def/_hvax 0 def/_hvay 0 def/_hvwb 0 def/_hvcx 0 def/_hvcy 0 def/_bitfont null def/_bitlobyte 0 def/_bithibyte 0 def/_bitkey null def/_bitdata null def/_bitindex 0 def/discardSave null def/buffer 256 string def/beginString null def/endString null def/endStringLength null def/layerCnt 1 def/layerCount 1 def/perCent (%) 0 get def/perCentSeen? false def/newBuff null def/newBuffButFirst null def/newBuffLast null def/clipForward? false defenduserdict /Adobe_Illustrator_AI5 known not {	userdict /Adobe_Illustrator_AI5 100 dict put} ifuserdict /Adobe_Illustrator_AI5 get begin/initialize{	Adobe_Illustrator_AI5 dup begin	Adobe_Illustrator_AI5_vars begin	/_aicmykps where {pop /_?cmyk _aicmykps def}if	discardDict	{		bind pop pop	} forall	dup /nc get begin	{		dup xcheck 1 index type /operatortype ne and		{			bind		} if		pop pop	} forall end	newpath} def/terminate{ end end} def/_null def/ddef{	Adobe_Illustrator_AI5_vars 3 1 roll put} def/xput{	dup load dup length exch maxlength eq	{		dup dup load dup		length 2 mul dict copy def	} if	load begin	def end} def/npop{	{		pop	} repeat} def/hswj{	dup stringwidth 3 2 roll	{		_hvwb eq { exch _hvcx add exch _hvcy add } if		exch _hvax add exch _hvay add	} cforall} def/vswj{	0 0 3 -1 roll	{		dup 255 le		_charorientation 1 eq		and		{			dup cstring stringwidth 5 2 roll			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			4 -1 roll sub exch			3 -1 roll sub exch		}		{			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			_fontHeight sub		} ifelse	} cforall} def/swj{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hswj } { vswj } ifelse} def/sw{	0 0 0 6 3 roll swj} def/vjss{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			gsave			false charpath currentpoint			5 index setmatrix stroke			grestore			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				gsave			2 index false charpath			6 index setmatrix stroke			grestore				moveto pop pop		} ifelse	} cforall	6 npop} def/hjss{	4 1 roll	{		dup cstring		gsave		false charpath currentpoint		5 index setmatrix stroke		grestore		moveto		_sp eq		{			5 index 5 index rmoveto		} if		2 copy rmoveto	} cforall	6 npop} def/jss{	_lineorientation 0 eq { hjss } { vjss } ifelse} def/ss{	0 0 0 7 3 roll jss} def/vjsp{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			false charpath            currentpoint			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				2 index false charpath				moveto pop pop		} ifelse	} cforall	6 npop} def/hjsp{    4 1 roll    {        dup cstring        false charpath        _sp eq        {            5 index 5 index rmoveto        } if        2 copy rmoveto    } cforall    6 npop} def/jsp{	matrix currentmatrix    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/sp{    matrix currentmatrix    0 0 0 7 3 roll    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/pl{	transform	0.25 sub round 0.25 add exch	0.25 sub round 0.25 add exch	itransform} def/setstrokeadjust where{	pop true setstrokeadjust	/c	{		curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll curveto	} def	/V	/v load def	/y	{		2 copy curveto	} def	/Y	/y load def	/l	{		lineto	} def	/L	/l load def	/m	{		moveto	} def}{	/c	{		pl curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll pl curveto	} def	/V	/v load def	/y	{		pl 2 copy curveto	} def	/Y	/y load def	/l	{		pl lineto	} def	/L	/l load def	/m	{		pl moveto	} def} ifelse/d{	setdash} def/cf{} def/i{	dup 0 eq	{		pop cf	} if	setflat} def/j{	setlinejoin} def/J{	setlinecap} def/M{	setmiterlimit} def/w{	setlinewidth} def/XR{	0 ne	/_eo exch ddef} def/H{} def/h{	closepath} def/N{	_pola 0 eq	{		_doClip 1 eq		{			_eo {eoclip} {clip} ifelse /_doClip 0 ddef		} if		newpath	}	{		/CRender		{			N		} ddef	} ifelse} def/n{	N} def/F{	_pola 0 eq	{		_doClip 1 eq		{			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc			/_doClip 0 ddef		}		{			_pf		} ifelse	}	{		/CRender		{			F		} ddef	} ifelse} def/f{	closepath	F} def/S{	_pola 0 eq	{		_doClip 1 eq		{			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			_ps		} ifelse	}	{		/CRender		{			S		} ddef	} ifelse} def/s{	closepath	S} def/B{	_pola 0 eq	{		_doClip 1 eq		gsave F grestore		{			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			S		} ifelse	}	{		/CRender		{			B		} ddef	} ifelse} def/b{	closepath	B} def/W{	/_doClip 1 ddef} def/*{	count 0 ne	{		dup type /stringtype eq		{			pop		} if	} if	newpath} def/u{} def/U{} def/q{	_pola 0 eq	{		gsave	} if} def/Q{	_pola 0 eq	{		grestore	} if} def/*u{	_pola 1 add /_pola exch ddef} def/*U{	_pola 1 sub /_pola exch ddef	_pola 0 eq	{		CRender	} if} def/D{	pop} def/*w{} def/*W{} def/`{	/_i save ddef	clipForward?	{		nulldevice	} if	6 1 roll 4 npop	concat pop	userdict begin	/showpage	{	} def	0 setgray	0 setlinecap	1 setlinewidth	0 setlinejoin	10 setmiterlimit	[] 0 setdash	/setstrokeadjust where {pop false setstrokeadjust} if	newpath	0 setgray	false setoverprint} def/~{ end	_i restore} def/_rgbtocmyk{	3	{		1 exch sub 3 1 roll	} repeat	3 copy 1 4 1 roll	3	{		3 index 2 copy gt		{			exch		} if		pop 4 1 roll	} repeat	pop pop pop	4 1 roll	3	{		3 index sub		3 1 roll	} repeat	4 -1 roll} def/setrgbfill{	_rgbf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_rgbf aload pop setrgbcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/setrgbstroke{	_rgbs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_rgbs aload pop setrgbcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/O{	0 ne	/_of exch ddef	/_lp /none ddef} def/R{	0 ne	/_os exch ddef	/_lp /none ddef} def/g{	/_gf exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/G{	/_gs exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/k{	_cf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_cf aload pop setcmykcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/K{	_cs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_cs aload pop setcmykcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xa{	_?cmyk {		3 npop k	}{		setrgbfill 4 npop	} ifelse} def/XA{	_?cmyk {		3 npop K	}{		setrgbstroke 4 npop	} ifelse} def/Xs{	/_gf exch ddef	5 npop	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setAIseparationgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XS{	/_gs exch ddef	5 npop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setAIseparationgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xx{	exch	/_gf exch ddef	0 eq {		findcmykcustomcolor	}{		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse		{			4 1 roll 3 npop			findcmykcustomcolor		}{			8 -4 roll 4 npop			findrgbcustomcolor		} ifelse	} ifelse	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XX{	exch	/_gs exch ddef	0 eq {		findcmykcustomcolor	}{		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse		{			4 1 roll 3 npop			findcmykcustomcolor		}{			8 -4 roll 4 npop			findrgbcustomcolor		} ifelse	} ifelse	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/x{	/_gf exch ddef	findcmykcustomcolor	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/X{	/_gs exch ddef	findcmykcustomcolor	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/XK{	3 -1 roll pop	0 eq	{		1 exch sub		3 {dup 3 1 roll mul 5 1 roll} repeat		mul 4 1 roll		K	}	{		1 exch sub 4 1 roll		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat		4 -1 roll pop		XA	} ifelse} def/Xk{	3 -1 roll pop	0 eq	{		1 exch sub		3 {dup 3 1 roll mul 5 1 roll} repeat		mul 4 1 roll		k	}	{		1 exch sub 4 1 roll		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat		4 -1 roll pop		Xa	} ifelse} def/A{	pop} def/annotatepage{userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse} def/XT {	pop pop} def/Xt {	pop} def/discard{	save /discardSave exch store	discardDict begin	/endString exch store	gt38?	{		2 add	} if	load	stopped	pop end	discardSave restore} bind defuserdict /discardDict 7 dict dup beginput/pre38Initialize{	/endStringLength endString length store	/newBuff buffer 0 endStringLength getinterval store	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store} def/shiftBuffer{	newBuff 0 newBuffButFirst putinterval	newBuffLast 0	currentfile read not	{	stop	} if	put} def0{	pre38Initialize	mark	currentfile newBuff readstring exch pop	{		{			newBuff endString eq			{				cleartomark stop			} if			shiftBuffer		} loop	}	{	stop	} ifelse} def1{	pre38Initialize	/beginString exch store	mark	currentfile newBuff readstring exch pop	{		{			newBuff beginString eq			{				/layerCount dup load 1 add store			}			{				newBuff endString eq				{					/layerCount dup load 1 sub store					layerCount 0 eq					{						cleartomark stop					} if				} if			} ifelse			shiftBuffer		} loop	} if} def2{	mark	{		currentfile buffer {readline} stopped {			% assume error was due to overfilling the buffer		}{			not			{				stop			} if			endString eq {				cleartomark stop			} if		}ifelse	} loop} def3{	/beginString exch store	/layerCnt 1 store	mark	{		currentfile buffer {readline} stopped {			% assume error was due to overfilling the buffer		}{			not			{				stop			} if			dup beginString eq			{				pop /layerCnt dup load 1 add store			}			{				endString eq				{					layerCnt 1 eq					{						cleartomark stop					}					{						/layerCnt dup load 1 sub store					} ifelse				} if			} ifelse		}ifelse	} loop} defenduserdict /clipRenderOff 15 dict dup beginput{	/n /N /s /S /f /F /b /B}{	{		_doClip 1 eq		{			/_doClip 0 ddef _eo {eoclip} {clip} ifelse		} if		newpath	} def} forall/Tr /pop load def/Bb {} def/BB /pop load def/Bg {12 npop} def/Bm {6 npop} def/Bc /Bm load def/Bh {4 npop} defend/Lb{	6 npop	7 2 roll	5 npop	0 eq	{		0 eq		{			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard		}		{						/clipForward? true def						/Tx /pop load def			/Tj /pop load def						currentdict end clipRenderOff begin begin		} ifelse	}	{		0 eq		{			save /discardSave exch store		} if	} ifelse} bind def/LB{	discardSave dup null ne	{		restore	}	{		pop		clipForward?		{			currentdict		 end		 end		 begin								/clipForward? false ddef		} if	} ifelse} bind def/Pb{	pop pop	0 (%AI5_EndPalette) discard} bind def/Np{	0 (%AI5_End_NonPrinting--) discard} bind def/Ln /pop load def/Ap/pop load def/Ar{	72 exch div	0 dtransform dup mul exch dup mul add sqrt	dup 1 lt	{		pop 1	} if	setflat} def/Mb{	q} def/Md{} def/MB{	Q} def/nc 4 dict defnc begin/setgray{	pop} bind def/setcmykcolor{	4 npop} bind def/setrgbcolor{	3 npop} bind def/setcustomcolor{	2 npop} bind defcurrentdict readonly popend/XP{	4 npop} bind def/XD{	pop} bind defendsetpacking%%EndResource%%BeginResource: procset Adobe_pattern_AI5 1.1 0%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)%%Version: 1.1 0%%CreationDate: (03/26/93) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_Illustrator_AI5 known not {	userdict /Adobe_Illustrator_AI5 95 dict put} ifuserdict /Adobe_Illustrator_AI5 get begin/@{} def/&{} def/dp{	dup null eq	{		pop		_dp 0 ne		{			0 1 _dp 1 sub _dl mod			{				_da exch get 3 get			} for			_dp 1 sub _dl mod 1 add packedarray			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll			definepattern pop		} if	}	{		_dp 0 ne _dp _dl mod 0 eq and		{			null dp		} if		7 packedarray _da exch _dp _dl mod exch put		_dp _dl mod _da 0 get 4 get 2 packedarray		/_dp _dp 1 add def	} ifelse} def/E{	_ed begin	dup 0 get type /arraytype ne	{		0		{			dup 1 add index type /arraytype eq			{				1 add			}			{				exit			} ifelse		} loop		array astore	} if	/_dd exch def	/_ury exch def	/_urx exch def	/_lly exch def	/_llx exch def	/_n exch def	/_y 0 def	/_dl 4 def	/_dp 0 def	/_da _dl array def	0 1 _dd length 1 sub	{		/_d exch _dd exch get def		0 2 _d length 2 sub		{			/_x exch def			/_c false def			/_r _d _x 1 add get cvlit def			_r _ ne			{				_urx _llx sub _ury _lly sub				[				1 0 0 1 0 0				]				[				/save cvx				_llx neg _lly neg /translate cvx				_c				{					nc /begin cvx				} if				_r dup type /stringtype eq				{					cvx				}				{					{						exec					} /forall cvx				} ifelse				_c				{					/end cvx				} if				/restore cvx				] cvx				/_fn 12 _n length add string def				_y _fn cvs pop				/_y _y 1 add def				_fn 12 _n putinterval				_fn _c false dp				_d exch _x 1 add exch put			} if		} for	} for	null dp	_n _dd /_pd end	xput} def/fc{	_fm dup concatmatrix pop} def/p{	/_fm exch ddef	9 -2 roll _pm translate fc	7 -2 roll _pm scale fc	5 -1 roll _pm rotate fc	4 -2 roll exch 0 ne	{		dup _pm rotate fc		1 -1 _pm scale fc		neg _pm rotate fc	}	{		pop	} ifelse	dup _pm rotate fc	exch dup sin exch cos div 1 0 0 1 0 6 2 roll	_pm astore fc	neg _pm rotate fc	_pd exch get /_fdd exch ddef	/_pf	{		save		/_doClip 0 ddef		0 1 _fdd length 1 sub		{			/_fd exch _fdd exch get ddef			_fd			0 2 _fd length 2 sub			{				gsave				2 copy get dup _ ne				{					cvx exec _fc				}				{					pop				} ifelse				2 copy 1 add get dup _ ne				{					aload pop findfont _fm					patternfill				}				{					pop					fill				} ifelse				grestore				pop			} for			pop		} for		restore		newpath	} ddef	/_psf	{		save		/_doClip 0 ddef		0 1 _fdd length 1 sub		{			/_fd exch _fdd exch get ddef			_fd			0 2 _fd length 2 sub			{				gsave				2 copy get dup _ ne				{					cvx exec _fc				}				{					pop				} ifelse				2 copy 1 add get dup _ ne				{					aload pop findfont _fm					9 copy 6 npop patternashow				}				{					pop					6 copy 3 npop hvashow				} ifelse				grestore				pop			} for			pop		} for		restore		sw rmoveto	} ddef	/_pjsf	{		save		/_doClip 0 ddef		0 1 _fdd length 1 sub		{			/_fd exch _fdd exch get ddef			_fd			0 2 _fd length 2 sub			{				gsave				2 copy get dup _ ne				{					cvx exec _fc				}				{					pop				} ifelse				2 copy 1 add get dup _ ne				{					aload pop findfont _fm					12 copy 6 npop patternawidthshow				}				{					pop 9 copy 3 npop hvawidthshow				} ifelse				grestore				pop			} for			pop		} for		restore		swj rmoveto	} ddef	/_lp /none ddef} def/sc{	_sm dup concatmatrix pop} def/P{	/_sm exch ddef	9 -2 roll _pm translate sc	7 -2 roll _pm scale sc	5 -1 roll _pm rotate sc	4 -2 roll exch 0 ne	{		dup _pm rotate sc		1 -1 _pm scale sc		neg _pm rotate sc	}	{		pop	} ifelse	dup _pm rotate sc	exch dup sin exch cos div 1 0 0 1 0 6 2 roll	_pm astore sc	neg _pm rotate sc	_pd exch get /_sdd exch ddef	/_ps	{		save		/_doClip 0 ddef		0 1 _sdd length 1 sub		{			/_sd exch _sdd exch get ddef			_sd			0 2 _sd length 2 sub			{				gsave				2 copy get dup _ ne				{					cvx exec _sc				}				{					pop				} ifelse				2 copy 1 add get dup _ ne				{					aload pop findfont _sm					patternstroke				}				{					pop stroke				} ifelse				grestore				pop			} for			pop		} for		restore		newpath	} ddef	/_pss	{		save		/_doClip 0 ddef		0 1 _sdd length 1 sub		{			/_sd exch _sdd exch get ddef			_sd			0 2 _sd length 2 sub			{				gsave				2 copy get dup _ ne				{					cvx exec _sc				}				{					pop				} ifelse				2 copy 1 add get dup _ ne				{					aload pop findfont _sm					10 copy 6 npop patternashowstroke				}				{					pop 7 copy 3 npop ss				} ifelse				grestore				pop			} for			pop		} for		restore		pop sw rmoveto	} ddef	/_pjss	{		save		/_doClip 0 ddef		0 1 _sdd length 1 sub		{			/_sd exch _sdd exch get ddef			_sd			0 2 _sd length 2 sub			{				gsave				2 copy get dup _ ne				{					cvx exec _sc				}				{					pop				} ifelse				2 copy 1 add get dup _ ne				{					aload pop findfont _sm					13 copy 6 npop patternawidthshowstroke				}				{					pop 10 copy 3 npop jss				} ifelse				grestore				pop			} for			pop		} for		restore		pop swj rmoveto	} ddef	/_lp /none ddef} defenduserdict /Adobe_pattern_AI5 18 dict dup beginput/initialize{	/definepattern where	{		pop		pop pop	}	{	 begin	 begin		Adobe_pattern_AI5 begin		Adobe_pattern_AI5		{			dup xcheck			{				bind			} if			pop pop		} forall		mark		cachestatus 7 1 roll pop pop pop pop exch pop exch		{			{				10000 add				dup 2 index gt				{					exit				} if				dup setcachelimit			} loop		} stopped		cleartomark	 end 				 end	 end				Adobe_pattern_AI5 begin	} ifelse} def/terminate{	currentdict Adobe_pattern_AI5 eq	{	 end	} if} deferrordict/nocurrentpoint{	pop	stop} puterrordict/invalidaccess{	pop	stop} put/patternencoding256 array def0 1 255{	patternencoding exch ( ) 2 copy exch 0 exch put cvn put} for/definepattern{	17 dict begin	/uniform exch def	/cache exch def	/key exch def	/procarray exch def	/mtx exch matrix invertmatrix def	/height exch def	/width exch def	/ctm matrix currentmatrix def	/ptm matrix def	/str 32 string def	/slice 9 dict def	slice /s 1 put	slice /q 256 procarray length div sqrt floor cvi put	slice /b 0 put	/FontBBox	[	0 0 0 0	] def	/FontMatrix mtx matrix copy def	/Encoding patternencoding def	/FontType 3 def	/BuildChar	{		exch	 begin		/setstrokeadjust where {pop true setstrokeadjust} if		slice begin		dup q dup mul mod s idiv /i exch def		dup q dup mul mod s mod /j exch def		q dup mul idiv procarray exch get		/xl j width s div mul def		/xg j 1 add width s div mul def		/yl i height s div mul def		/yg i 1 add height s div mul def		uniform		{			1 1		}		{			width 0 dtransform			dup mul exch dup mul add sqrt dup 1 add exch div			0 height dtransform			dup mul exch dup mul add sqrt dup 1 add exch div		} ifelse		width 0 cache		{			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul			setcachedevice		}		{			setcharwidth		} ifelse		gsave		scale		newpath		xl yl moveto		xg yl lineto		xg yg lineto		xl yg lineto		closepath		clip		newpath	 end	 end		exec		grestore	} def	key currentdict definefont end} def/patterncachesize{	gsave	newpath	0 0 moveto	width 0 lineto	width height lineto	0 height lineto	closepath	patternmatrix setmatrix	pathbbox	exch ceiling 4 -1 roll floor sub 3 1 roll	ceiling exch floor sub	mul 1 add	grestore} def/patterncachelimit{	cachestatus 7 1 roll 6 npop 8 mul} def/patternpath{	exch dup begin	setfont	ctm setmatrix	concat	slice exch /b exch slice /q get dup mul mul put	FontMatrix concat	uniform	{		width 0 dtransform round width div exch round width div exch		0 height dtransform round height div exch height div exch		0 0 transform round exch round exch		ptm astore setmatrix	}	{		ptm currentmatrix pop	} ifelse	{		currentpoint	} stopped not	{		2 npop		pathbbox		true		4 index 3 index eq		4 index 3 index eq		and		{			pop false			{				{					2 npop				}				{					3 npop true				}				{					7 npop true				}				{					pop true				} pathforall			} stopped			{				5 npop true			} if		} if		{			height div ceiling height mul 4 1 roll			width div ceiling width mul 4 1 roll			height div floor height mul 4 1 roll			width div floor width mul 4 1 roll			2 index sub height div ceiling cvi exch			3 index sub width div ceiling cvi exch			4 2 roll moveto			FontMatrix mtx invertmatrix			dup dup 4 get exch 5 get rmoveto			ptm ptm concatmatrix pop			slice /s			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi			dup slice /q get gt			{				pop slice /q get			} if			put			0 1 slice /s get dup mul 1 sub			{				slice /b get add				gsave				0 1 str length 1 sub				{					str exch 2 index put				} for				pop				dup				{					gsave					ptm setmatrix					1 index str length idiv					{						str show					} repeat					1 index str length mod str exch 0 exch getinterval show					grestore					0 height rmoveto				} repeat				grestore			} for			2 npop		}		{			4 npop		} ifelse	} if end} def/patternclip{	_eo {eoclip} {clip} ifelse} def/patternstrokepath{	strokepath} def/patternmatrixmatrix def/patternfill{	dup type /dicttype eq	{		Adobe_pattern_AI5 /patternmatrix get	} if	gsave	patternclip	Adobe_pattern_AI5 /patternpath get exec	grestore	newpath} def/patternstroke{	dup type /dicttype eq	{		Adobe_pattern_AI5 /patternmatrix get	} if	gsave	patternstrokepath	true	{		{			{				newpath				moveto			}			{				lineto			}			{				curveto			}			{				closepath				3 copy				Adobe_pattern_AI5 /patternfill get exec			} pathforall			3 npop		} stopped		{			5 npop			patternclip			Adobe_pattern_AI5 /patternfill get exec		} if	}	{		patternclip		Adobe_pattern_AI5 /patternfill get exec	} ifelse	grestore	newpath} def/vpatternawidthshow{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef		{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			gsave			false charpath currentpoint			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec			grestore			_fontRotateAdjust sub			moveto			_hvwb eq { _hvcx _hvcy rmoveto } if			_hvax _hvay rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			_hvax sub			3 index _hvwb eq { _hvcx sub } if			currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto			gsave			2 index false charpath			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec			grestore			newpath moveto pop pop		} ifelse	} cforall	3 npop} def/hpatternawidthshow{	{		dup cstring exch		gsave		3 index eq { 5 index 5 index rmoveto } if		false charpath currentpoint		9 index 9 index 9 index		Adobe_pattern_AI5 /patternfill get exec		grestore		newpath moveto		2 copy rmoveto	} cforall	8 npop} def/patternashow{0 0 0 6 3 rollpatternawidthshow} def/patternawidthshow{	6 index type /dicttype eq	{		Adobe_pattern_AI5 /patternmatrix get 7 1 roll	} if	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse} def/vpatternawidthshowstroke{	7 1 roll	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			gsave			false charpath currentpoint			3 index setmatrix			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec			grestore			_fontRotateAdjust sub			moveto			_hvwb eq { _hvcx _hvcy rmoveto } if			_hvax _hvay rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			_hvax sub			3 index _hvwb eq { _hvcx sub } if			currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto			gsave			2 index false charpath			4 index setmatrix			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec			grestore			newpath moveto pop pop		} ifelse	} cforall	4 npop} def/hpatternawidthshowstroke{	7 1 roll	{		dup cstring exch		gsave		3 index eq { 5 index 5 index rmoveto } if		false charpath currentpoint		7 index setmatrix		10 index 10 index 10 index		Adobe_pattern_AI5 /patternstroke get exec		grestore		newpath moveto		2 copy rmoveto	} cforall	9 npop} def/patternashowstroke{	0 0 0 7 3 roll	patternawidthshowstroke} def/patternawidthshowstroke{	7 index type /dicttype eq	{		patternmatrix /patternmatrix get 8 1 roll	} if	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse} defendsetpacking%%EndResource%%BeginResource: procset Adobe_cshow 2.0 8%%Title: (Writing System Operators)%%Version: 2.0 8%%CreationDate: (1/23/89) ()%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_cshow 14 dict dup begin put/initialize{	Adobe_cshow begin	Adobe_cshow	{		dup xcheck		{			bind		} if		pop pop	} forall end	Adobe_cshow begin} def/terminate{currentdict Adobe_cshow eq	{ end	} if} def/cforall{	/_lobyte 0 ddef	/_hibyte 0 ddef	/_cproc exch ddef	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef	{		/_lobyte exch ddef		_hibyte 0 eq		_cscript 1 eq		_lobyte 129 ge _lobyte 159 le and		_lobyte 224 ge _lobyte 252 le and or and		_cscript 2 eq		_lobyte 161 ge _lobyte 254 le and and		_cscript 3 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript 25 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript -1 eq		or or or or and		{			/_hibyte _lobyte ddef		}		{			_hibyte 256 mul _lobyte add			_cproc			/_hibyte 0 ddef		} ifelse	} forall} def/cstring{	dup 256 lt	{		(s) dup 0 4 3 roll put	}	{		dup 256 idiv exch 256 mod		(hl) dup dup 0 6 5 roll put 1 4 3 roll put	} ifelse} def/clength{	0 exch	{ 256 lt { 1 } { 2 } ifelse add } cforall} def/hawidthshow{	{		dup cstring		show		_hvax _hvay rmoveto		_hvwb eq { _hvcx _hvcy rmoveto } if	} cforall} def/vawidthshow{	{		dup 255 le		_charorientation 1 eq		and		{			-90 rotate			0 _fontRotateAdjust rmoveto			cstring			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow			0 _fontRotateAdjust neg rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			exch _hvay sub exch _hvax sub			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if			3 2 roll			cstring			dup stringwidth pop 2 div neg _fontAscent neg rmoveto			show			moveto		} ifelse	} cforall} def/hvawidthshow{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse} def/hvwidthshow{	0 0 3 -1 roll hvawidthshow} def/hvashow{	0 0 0 6 -3 roll hvawidthshow} def/hvshow{	0 0 0 0 0 6 -1 roll hvawidthshow} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_shading_AI8 1.0 0%%Title: (Adobe Illustrator 8 Shading Procset)%%Version: 1.0 0%%CreationDate: (12/17/97) ()%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)userdict /defaultpacking currentpacking put true setpackinguserdict /Adobe_shading_AI8 10 dict dup begin put/initialize {	Adobe_shading_AI8 begin	Adobe_shading_AI8 bdprocs	Mesh /initialize get exec} def/terminate {	currentdict Adobe_shading_AI8 eq {	 end	} if} def/bdprocs {	{		dup xcheck 1 index type /arraytype eq and {			bind		} if		pop pop	} forall} def/X! {pop} def/X# {pop pop} def/Mesh 40 dict defMesh begin/initialize {	Mesh bdprocs	Mesh begin		/emulate? /AI8MeshEmulation where {			pop AI8MeshEmulation		}{			systemdict /shfill known not		} ifelse def end} def/bd {	shadingdict begin} def/paint {	emulate? {	 end	}{		/_lp /none ddef _fc /_lp /none ddef				/AIColorSpace AIColorSpace tocolorspace store		/ColorSpace AIColorSpace topsspace store				version_ge_3010.106 not systemdict /setsmoothness known and {			0.0001 setsmoothness		} if				composite? {			/DataSource getdatasrc def			Matrix concat			currentdict end			shfill		}{			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {			 end			}{				/ColorSpace /DeviceGray store				/Decode [0 1 0 1 0 1] store				/DataSource getplatesrc def				Matrix concat				currentdict end				shfill			} ifelse		} ifelse	} ifelse} def/shadingdict 12 dict defshadingdict begin	/ShadingType 6 def	/BitsPerCoordinate 16 def	/BitsPerComponent 8 def	/BitsPerFlag 8 defend/datafile null def/databuf 256 string def/dataptr 0 def/srcspace null def/srcchannels 0 def/dstchannels 0 def/dstplate 0 def/srctodstcolor null def/getplatesrc {	/srcspace AIColorSpace store	/srcchannels AIColorSpace getnchannels store	/dstchannels 1 store	/dstplate getplateindex store	/srctodstcolor srcspace makesmarks {		dstplate 4 eq {			{1 exch sub}		}{			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}		} ifelse	}{		{srcchannels {pop} repeat 1}	} ifelse store	/datafile getdatasrc store	/rdpatch168 load DataLength () /SubFileDecode filter} def/getdatasrc {	/rdcmntline load /ASCII85Decode filter} def/rdpatch168 {	/dataptr 0 store	49 rdcount	4 {		dup {pop srcchannels getint8} if		dup {pop srctodstcolor dstchannels putint8 true} if	} repeat	{databuf 0 dataptr getinterval}{()} ifelse} def/rdpatch3216 {	/dataptr 0 store	97 rdcount	4 {		dup {pop srcchannels getint16} if		dup {pop srctodstcolor dstchannels putint16 true} if	} repeat	{databuf 0 dataptr getinterval}{()} ifelse} def/rdcount {	dup 0 gt {		datafile databuf dataptr 4 -1 roll getinterval readstring		exch length dataptr add /dataptr exch store	}{		true	} ifelse} def/getint8 {	mark true 3 -1 roll	{		dup {pop datafile read} if		dup {pop 255 div true} if	} repeat	{		counttomark 1 add -1 roll pop true	}{		cleartomark false	} ifelse} def/putint8 {	dup dataptr add /dataptr exch store	dataptr exch	{		1 sub exch		255 mul cvi		databuf 2 index		3 -1 roll put	} repeat	pop} def /getint16 {	mark true 3 -1 roll	{		dup {pop datafile read} if		dup {pop 256 mul datafile read} if		dup {pop add 65535 div true} if	} repeat	{		counttomark 1 add -1 roll pop true	}{		cleartomark false	} ifelse} def/putint16 {	dup 2 mul dataptr add /dataptr exch store	dataptr exch	{		2 sub exch		65535 mul cvi dup		256 idiv databuf 3 index 3 -1 roll put		256 mod databuf 2 index 1 add 3 -1 roll put	} repeat	pop} def /srcbuf 256 string def/rdcmntline {	currentfile srcbuf readline pop	(%) anchorsearch {pop} if} def/getplateindex {	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall} def/aicsarray 4 array def/aicsaltvals 4 array def/aicsaltcolr aicsaltvals def/tocolorspace {	dup type /arraytype eq {		mark exch aload pop		aicsarray 0 3 -1 roll put		aicsarray 1 3 -1 roll put		dup aicsarray 2 3 -1 roll put		gettintxform aicsarray 3 3 -1 roll put		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store		aicsaltcolr astore pop pop		aicsarray	} if} def/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def/gettintxform {	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load} def/getnchannels {	dup type /arraytype eq {0 get} if	colorspacedict exch get begin Channels end} def/makesmarks {	composite? {		pop true	}{		dup dup type /arraytype eq {0 get} if		colorspacedict exch get begin MarksPlate end	} ifelse} def/markingplate {	composite? {		pop true	}{		dup type /arraytype eq {			dup length getplateindex gt {getplateindex get}{pop false} ifelse		} if	} ifelse} def/tocmyk {	dup dup type /arraytype eq {0 get} if	colorspacedict exch get begin ToCMYK end} def/topsspace {	dup dup type /arraytype eq {0 get} if	colorspacedict exch get begin ToPSSpace end} def/colorspacedict 5 dict dup begin	/DeviceGray 4 dict dup begin		/Channels 1 def		/MarksPlate {pop black?} def		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def		/ToPSSpace {} def end def	/DeviceRGB 4 dict dup begin		/Channels 3 def		/MarksPlate {pop isCMYKSep?} def		/ToCMYK {pop _rgbtocmyk} def		/ToPSSpace {} def end def	/DeviceCMYK 4 dict dup begin		/Channels 4 def		/MarksPlate {pop isCMYKSep?} def		/ToCMYK {pop} def		/ToPSSpace {} def end def	/Separation 4 dict dup begin		/Channels 1 def		/MarksPlate {			/findcmykcustomcolor where {				pop dup 1 exch ToCMYK 5 -1 roll 1 get				findcmykcustomcolor 1 setcustomcolor				systemdict /currentgray get exec				1 ne			}{				pop false			} ifelse		} def		/ToCMYK {			dup 2 get mark exch 4 2 roll			3 get exec			counttomark -1 roll tocmyk			5 -1 roll pop		} def		/ToPSSpace {} def end def	/Process 4 dict dup begin		/Channels 1 def		/MarksPlate {			isCMYKSep? {				1 exch ToCMYK 4 array astore getplateindex get 0 ne 			}{				pop false			} ifelse		} def		/ToCMYK {			dup 2 get mark exch 4 2 roll			3 get exec			counttomark -1 roll tocmyk			5 -1 roll pop		} def		/ToPSSpace {			4 array copy dup 0 /Separation put		} def end defend def/isoverprint {	/currentoverprint where {pop currentoverprint}{_of} ifelse} def/version_ge_3010.106 {   version {cvr} stopped {      pop      false   }{      3010.106 ge   } ifelse} defendenddefaultpacking setpacking%%EndResource%%EndProlog%%BeginSetupuserdict /_useSmoothShade true putuserdict /_aicmykps true putuserdict /_forceToCMYK true putAdobe_level2_AI5 /initialize get execAdobe_cshow /initialize get execAdobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get execAdobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get execAdobe_ColorImage_AI6 /initialize get execAdobe_shading_AI8 /initialize get execAdobe_Illustrator_AI5 /initialize get exec%AI5_Begin_NonPrintingNp5 Bn%AI5_BeginGradient: (Black, White)(Black, White) 0 2 Bd[<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>0 %_Br[0 0 50 100 %_BS%_0 0 50 100 Bs1 0 50 0 %_BS%_1 0 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Chrome)(Chrome) 0 6 Bd[0<464646454545444444444343434342424241414141404040403F3F3F3E3E3E3E3D3D3D3C3C3C3C3B3B3B3B3A3A3A393939393838383837373736363636353535353434343333333332323231313131303030302F2F2F2E2E2E2E2D2D2D2D2C2C2C2B2B2B2B2A2A2A2A2929292828282827272726262626252525252424242323232322222222212121202020201F1F1F1F1E1E1E1D1D1D1D1C1C1C1B1B1B1B1A1A1A1A1919191818181817171717161616151515151414141413131312121212111111101010100F0F0F0F0E0E0E0D0D0D0D0C0C0C0C0B0B0B0A0A0A0A0909090908080807070707060606050505050404040403030302020202010101010000><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><1F1E1E1E1E1E1E1E1E1E1D1D1D1D1D1D1D1D1C1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1B1A1A1A1A1A1A1A1A19191919191919191818181818181818181717171717171717161616161616161615151515151515151514141414141414141313131313131313121212121212121212111111111111111110101010101010100F0F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0909090909090909090808080808080808070707070707070706060606060606060605050505050505050404040404040404030303030303030303020202020202020201010101010101010000000000>1 %_Br00.2751<6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F>1 %_Br0<00000101010102020202030303040404040505050506060607070707080808090909090A0A0A0A0B0B0B0C0C0C0C0D0D0D0D0E0E0E0F0F0F0F1010101011111112121212131313141414141515151516161617171717181818181919191A1A1A1A1B1B1B1C1C1C1C1D1D1D1D1E1E1E1F1F1F1F2020202021212122222222232323232424242525252526262626272727282828282929292A2A2A2A2B2B2B2B2C2C2C2D2D2D2D2E2E2E2E2F2F2F303030303131313132323233333333343434353535353636363637373738383838393939393A3A3A3B3B3B3B3C3C3C3D3D3D3D3E3E3E3E3F3F3F40404040414141414242424343434344444444454545464646><000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF><00000101020203030304040505050606070708080809090A0A0B0B0B0C0C0D0D0D0E0E0F0F1010101111121212131314141515151616171718181819191A1A1A1B1B1C1C1D1D1D1E1E1F1F1F20202121222222232324242525252626272727282829292A2A2A2B2B2C2C2D2D2D2E2E2F2F2F30303131323232333334343435353636373737383839393A3A3A3B3B3C3C3C3D3D3E3E3F3F3F4040414142424243434444444545464647474748484949494A4A4B4B4C4C4C4D4D4E4E4F4F4F5050515151525253535454545555565657575758585959595A5A5B5B5C5C5C5D5D5E5E5E5F5F6060616161626263636464646565666666676768686969696A6A6B6B>1 %_Br10 %_Br<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><4D4C4C4C4B4B4B4A4A4A4A4949494848484747474746464645454544444444434343424242414141414040403F3F3F3E3E3E3E3D3D3D3C3C3C3B3B3B3B3A3A3A3939393838383837373736363635353535343434333333323232323131313030302F2F2F2E2E2E2E2D2D2D2C2C2C2B2B2B2B2A2A2A292929282828282727272626262525252524242423232322222222212121202020201F1F1F1E1E1E1D1D1D1D1C1C1C1B1B1B1A1A1A1A1919191818181717171616161615151514141413131313121212111111101010100F0F0F0E0E0E0D0D0D0D0C0C0C0B0B0B0A0A0A0A0909090808080707070706060605050504040404030303020202010101010000>001 %_Br[1 0 50 92 %_BS%_1 0 50 92 Bs0 0.275 1 0.12 1 50 59 %_BS%_0 0.275 1 0.12 1 50 59 Bs0 0.275 1 0.42 1 50 50 %_BS%_0 0.275 1 0.42 1 50 50 Bs1 0 50 49 %_BS%_1 0 50 49 Bs1 0 50 41 %_BS%_1 0 50 41 Bs1 0.3 0 0 1 50 0 %_BS%_1 0.3 0 0 1 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Rainbow)(Rainbow) 0 6 Bd[<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>1001 %_Br1<0708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF>001 %_Br1<00000000000000000000000000000000000001010101010101010101010101010101010101010101010101010101010101010101010102020202020202020202020202020202020202020202020202020202020202020202020203030303030303030303030303030303030303030303030303030303030303030303030304040404040404040404040404040404040404040404040404040404040404040404040405050505050505050505050505050505050505050505050505050505050505050505050506060606060606060606060606060606060606060606060606060606060606060606060707070707070707070707070707070707070707070707><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>01 %_Br<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF>0101 %_Br0<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>101 %_Br[0 1 0 0 1 50 100 %_BS%_0 1 0 0 1 50 100 Bs1 1 0 0 1 50 80 %_BS%_1 1 0 0 1 50 80 Bs1 0.0279 0 0 1 50 60 %_BS%_1 0.0279 0 0 1 50 60 Bs1 0 1 0 1 50 40 %_BS%_1 0 1 0 1 50 40 Bs0 0 1 0 1 50 20 %_BS%_0 0 1 0 1 50 20 Bs0 1 1 0 1 50 0 %_BS%_0 1 1 0 1 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 1)(Unnamed gradient 1) 0 2 Bd[<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>0 %_Br[0 0 50 100 %_BS%_0 0 50 100 Bs1 0 50 0 %_BS%_1 0 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Yellow & Orange Radial)(Yellow & Orange Radial) 1 2 Bd[0<0001010203040506060708090A0B0C0C0D0E0F10111213131415161718191A1B1C1D1D1E1F202122232425262728292A2B2B2C2D2E2F303132333435363738393A3B3C3D3E3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C><FFFFFFFFFEFEFEFEFEFEFEFDFDFDFDFDFDFCFCFCFCFCFCFBFBFBFBFBFBFAFAFAFAFAFAF9F9F9F9F9F9F8F8F8F8F8F8F7F7F7F7F7F7F6F6F6F6F6F6F5F5F5F5F5F5F4F4F4F4F4F3F3F3F3F3F3F2F2F2F2F2F2F1F1F1F1F1F0F0F0F0F0F0EFEFEFEFEFEFEEEEEEEEEEEDEDEDEDEDEDECECECECECEBEBEBEBEBEBEAEAEAEAEAE9E9E9E9E9E9E8E8E8E8E8E8E7E7E7E7E7E6E6E6E6E6E6>01 %_Br[0 0 1 0 1 52 19 %_BS%_0 0 1 0 1 52 19 Bs0 0.55 0.9 0 1 50 100 %_BS%_0 0.55 0.9 0 1 50 100 BsBD%AI5_EndGradient%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI3_BeginPattern: (Brick)(Brick) 0 0 72 72 [%AI3_Tile(0 O 0 R 0.3 0.85 0.85 0 k 0.3 0.85 0.85 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR0 0 m0 72 L72 72 L72 0 L0 0 Lf%AI6_EndPatternLayer) &(0 O 0 R 1 g 1 G) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d0 XR0 68.4097 m72 68.4097 lS0 61.209 m72 61.209 LS0 54.0088 m72 54.0088 LS0 46.8076 m72 46.8076 LS0 39.6084 m72 39.6084 LS0 32.4072 m72 32.4072 LS0 25.207 m72 25.207 LS0 18.0059 m72 18.0059 LS0 10.8057 m72 10.8057 LS0 3.6064 m72 3.6064 LS68.4102 68.4097 m68.4102 61.2217 lS54.0098 68.4097 m54.0098 61.2217 LS39.6094 68.4097 m39.6094 61.2217 LS25.21 68.4097 m25.21 61.2217 LS10.8105 68.4097 m10.8105 61.2217 LS68.4102 53.9717 m68.4102 46.7842 lS54.0098 53.9717 m54.0098 46.7842 LS39.6094 53.9717 m39.6094 46.7842 LS25.21 53.9717 m25.21 46.7842 LS10.8105 53.9717 m10.8105 46.7842 LS68.4102 39.5967 m68.4102 32.4092 lS54.0098 39.5967 m54.0098 32.4092 LS39.6094 39.5967 m39.6094 32.4092 LS25.21 39.5967 m25.21 32.4092 LS10.8105 39.5967 m10.8105 32.4092 LS68.4102 25.2217 m68.4102 18.0342 lS54.0098 25.2217 m54.0098 18.0342 LS39.6094 25.2217 m39.6094 18.0342 LS25.21 25.2217 m25.21 18.0342 LS10.8105 25.2217 m10.8105 18.0342 LS68.4102 10.7842 m68.4102 3.5967 lS54.0098 10.7842 m54.0098 3.5967 LS39.6094 10.7842 m39.6094 3.5967 LS25.21 10.7842 m25.21 3.5967 LS10.8105 10.7842 m10.8105 3.5967 LS61.1973 3.5967 m61.1973 0 LS46.7969 3.5967 m46.7969 0 LS32.3965 3.5967 m32.3965 0 LS17.9971 3.5967 m17.9971 0 LS3.5967 3.5967 m3.5967 0 lS61.1973 18.0342 m61.1973 10.8467 LS46.7969 18.0342 m46.7969 10.8467 LS32.3965 18.0342 m32.3965 10.8467 LS17.9971 18.0342 m17.9971 10.8467 LS3.5967 18.0342 m3.5967 10.8467 lS61.1973 32.4092 m61.1973 25.2217 LS46.7969 32.4092 m46.7969 25.2217 LS17.9971 32.4092 m17.9971 25.2217 LS3.5967 32.4092 m3.5967 25.2217 lS61.1973 46.7842 m61.1973 39.5967 LS46.7969 46.7842 m46.7969 39.5967 LS32.3965 46.7842 m32.3965 39.5967 LS17.9971 46.7842 m17.9971 39.5967 LS3.5967 46.7842 m3.5967 39.5967 lS61.1973 61.2217 m61.1973 54.0347 LS46.7969 61.2217 m46.7969 54.0347 LS32.3965 61.2217 m32.3965 54.0347 LS17.9971 61.2217 m17.9971 54.0347 LS3.5967 61.2217 m3.5967 54.0347 lS61.1973 71.959 m61.1973 68.4717 LS46.7969 71.959 m46.7969 68.4717 LS32.3965 71.959 m32.3965 68.4717 LS17.9971 71.959 m17.9971 68.4717 LS3.5967 71.959 m3.5967 68.4717 lS32.3965 32.4092 m32.3965 25.2217 LS%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Confetti)(Confetti) 4.85 3.617 76.85 75.617 [%AI3_Tile(0 O 0 R 1 g 1 G) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR4.85 3.617 m4.85 75.617 L76.85 75.617 L76.85 3.617 L4.85 3.617 Lf%AI6_EndPatternLayer) &(0 O 0 R 0 g 0 G) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d0 XR10.6 64.867 m7.85 62.867 lS9.1 8.617 m6.85 6.867 lS78.1 68.617 m74.85 67.867 lS76.85 56.867 m74.35 55.117 lS79.6 51.617 m76.6 51.617 lS76.35 44.117 m73.6 45.867 lS78.6 35.867 m76.6 34.367 lS76.1 23.867 m73.35 26.117 lS78.1 12.867 m73.85 13.617 lS68.35 14.617 m66.1 12.867 lS76.6 30.617 m73.6 30.617 lS62.85 58.117 m60.956 60.941 lS32.85 59.617 m31.196 62.181 lS47.891 64.061 m49.744 66.742 lS72.814 2.769 m73.928 5.729 lS67.976 2.633 m67.35 5.909 lS61.85 27.617 m59.956 30.441 lS53.504 56.053 m51.85 58.617 lS52.762 1.779 m52.876 4.776 lS45.391 5.311 m47.244 7.992 lS37.062 3.375 m35.639 5.43 lS55.165 34.828 m57.518 37.491 lS20.795 3.242 m22.12 5.193 lS14.097 4.747 m15.008 8.965 lS9.736 1.91 m8.073 4.225 lS31.891 5.573 m32.005 8.571 lS12.1 70.367 m15.6 68.867 lS9.35 54.867 m9.6 58.117 lS12.85 31.867 m14.35 28.117 lS10.1 37.367 m12.35 41.117 lS34.1 71.117 m31.85 68.617 lS38.35 71.117 m41.6 68.367 lS55.1 71.117 m58.35 69.117 lS57.35 65.117 m55.35 61.867 lS64.35 66.367 m69.35 68.617 lS71.85 62.867 m69.35 61.117 lS23.6 70.867 m23.6 67.867 lS20.6 65.867 m17.35 65.367 lS24.85 61.367 m25.35 58.117 lS25.85 65.867 m29.35 66.617 lS14.1 54.117 m16.85 56.117 lS12.35 11.617 m12.6 15.617 lS12.1 19.867 m14.35 22.367 lS26.1 9.867 m23.6 13.367 lS34.6 47.117 m32.1 45.367 lS62.6 41.867 m59.85 43.367 lS31.6 35.617 m27.85 36.367 lS36.35 26.117 m34.35 24.617 lS33.85 14.117 m31.1 16.367 lS37.1 9.867 m35.1 11.117 lS34.35 20.867 m31.35 20.867 lS44.6 56.617 m42.1 54.867 lS47.35 51.367 m44.35 51.367 lS44.1 43.867 m41.35 45.617 lS43.35 33.117 m42.6 30.617 lS43.85 23.617 m41.1 25.867 lS44.35 15.617 m42.35 16.867 lS67.823 31.1 m64.823 31.1 lS27.1 32.617 m29.6 30.867 lS31.85 55.117 m34.85 55.117 lS19.6 40.867 m22.1 39.117 lS16.85 35.617 m19.85 35.617 lS20.1 28.117 m22.85 29.867 lS52.1 42.617 m54.484 44.178 lS52.437 50.146 m54.821 48.325 lS59.572 54.133 m59.35 51.117 lS50.185 10.055 m53.234 9.928 lS51.187 15.896 m53.571 14.075 lS58.322 19.883 m59.445 16.823 lS53.1 32.117 m50.6 30.367 lS52.85 24.617 m49.6 25.617 lS61.85 9.117 m59.1 10.867 lS69.35 34.617 m66.6 36.367 lS67.1 23.617 m65.1 22.117 lS24.435 46.055 m27.484 45.928 lS25.437 51.896 m27.821 50.075 lS62.6 47.117 m65.321 46.575 lS19.85 19.867 m20.35 16.617 lS21.85 21.867 m25.35 22.617 lS37.6 62.867 m41.6 62.117 lS38.323 42.1 m38.823 38.6 lS69.35 52.617 m66.85 53.867 lS14.85 62.117 m18.1 59.367 lS9.6 46.117 m7.1 44.367 lS20.6 51.617 m18.6 50.117 lS46.141 70.811 m47.994 73.492 lS69.391 40.561 m71.244 43.242 lS38.641 49.311 m39.35 52.117 lS25.141 16.811 m25.85 19.617 lS36.6 32.867 m34.6 31.367 lS6.1 68.617 m2.85 67.867 lS4.85 56.867 m2.35 55.117 lS7.6 51.617 m4.6 51.617 lS6.6 35.867 m4.6 34.367 lS6.1 12.867 m1.85 13.617 lS4.6 30.617 m1.6 30.617 lS72.814 74.769 m73.928 77.729 lS67.976 74.633 m67.35 77.909 lS52.762 73.779 m52.876 76.776 lS37.062 75.375 m35.639 77.43 lS20.795 75.242 m22.12 77.193 lS9.736 73.91 m8.073 76.225 lS10.1 23.617 m6.35 24.367 lS73.217 18.276 m71.323 21.1 lS28.823 39.6 m29.505 42.389 lS49.6 38.617 m47.6 37.117 lS60.323 73.6 m62.323 76.6 lS60.323 1.6 m62.323 4.6 lS%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Leaves - Fall )(Leaves - Fall ) 0 0 64.0781 78.9336 [%AI3_Tile(0 O 0 R 0.05 0.2 1 0 k 0.05 0.2 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR64.0781 78.9336 m64.0781 0 L0 0 L0 78.9336 L64.0781 78.9336 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.83 0 1 0 k 0.83 0 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR29.7578 0.9902 m30.4346 1.1914 30.7246 1.3428 V29.2559 4.0547 33.707 8.3359 34.627 9.0762 C35.2275 8.8506 35.3477 6.3184 34.6699 4.9805 C35.5137 5.1035 37.7031 3.7256 38.4609 2.4365 C38.5254 3.125 40.0957 6.0664 40.9219 6.4434 C40.002 6.8408 39.3359 8.3135 38.5742 9.7617 C39.5957 9.9287 40.9961 9.0078 42.4668 8.1025 C42.9814 8.9043 44.3555 9.875 45.6143 10.3916 C44.5264 11.0781 44.0313 11.8203 43.5352 13.2793 C42.4922 12.7139 40.3057 12.5645 39.7764 12.8516 C40.291 13.9648 42.5371 14.5078 43.2676 14.4551 C43.0137 15.3164 42.8652 17.4697 43.0391 20.0625 C41.3789 18.7461 39.834 17.4297 38.1738 17.4883 C38.4434 16.0664 37.8076 14.2607 37.4307 13.7676 C36.8574 14.5117 36.4463 15.3389 36.8008 17.3164 C35.3486 17.8008 34.1113 18.3467 32.7373 19.6045 C32.7373 17.7734 32.166 16.5723 31.2969 15.2959 C32.5576 14.8076 33.8301 13.6045 33.8252 12.5664 C32.9775 12.7178 31.2852 13.4619 30.793 14.4551 C30.0742 13.707 28.3906 12.3984 26.7871 12.3945 C27.9746 11.5391 28.8945 10.5059 28.9893 8.5938 C30.2422 9.5645 32.6953 10.1797 34.0752 9.582 C29.2344 5.3457 29.7031 2.3125 29.7578 0.9902 Cf13.8525 29.9844 m13.3281 29.5127 13.1309 29.25 V15.623 27.4326 13.3691 21.6074 12.8555 20.5439 C12.2168 20.4883 10.8096 23.2285 10.8457 24.7266 C9.7129 23.9707 8.0488 24.0918 6.4463 24.3779 C7.0186 23.2891 6.6172 21.3447 5.8164 20.5439 C6.8184 20.5801 8.1699 19.8652 9.4785 18.8838 C8.6436 18.0645 6.8164 18.2246 4.9004 18.8838 C4.9004 17.5107 4.0781 15.7734 3.2412 14.5918 C4.5576 14.6484 5.7031 13.9629 6.5605 12.9316 C7.2256 14.5 9.2598 15.6133 10.166 15.5645 C10.1826 14.1992 8.6094 12.1094 7.5879 11.7109 C8.1875 11.041 9.207 9.5107 10.166 7.0947 C10.9648 9.0205 12.1348 10.2627 13.3672 11.1953 C12.2256 12.7578 12.3994 13.6289 12.7988 15.1074 C13.541 14.5664 14.5723 14.1338 14.7441 12.1309 C16.4609 12.416 17.5957 12.3447 19.0938 11.4434 C18.6387 13.1055 18.6348 14.707 18.9551 16.4063 C17.1055 16.2666 15.5449 16.4795 14.5156 17.9688 C15.3457 18.1953 17.6055 18.2549 18.4795 17.3223 C18.8066 18.3047 19.7012 19.7109 21.1475 20.4043 C19.707 20.6641 18.7227 21.7637 17.8135 23.4492 C17.1006 22.0332 14.873 20.3691 13.3711 20.3145 C15.373 24.3779 15.373 27.2959 13.8525 29.9844 Cf41.2324 26.0742 m41.5518 26.7021 41.7549 26.959 V44.1523 25.0176 48.958 28.3262 49.8535 29.0957 C49.7432 29.7266 47.6182 30.8643 45.9004 29.834 C46.3408 31.123 45.4395 33.084 44.2402 34.126 C45.9805 34.0254 48.126 35.3867 48.6484 36.1289 C48.8701 35.1514 50.0527 33.8809 51.3379 32.8672 C51.6895 33.8398 50.9941 35.958 50.0781 37.5605 C51.3125 38.0605 52.4248 38.9912 52.8828 40.25 C53.3398 38.9336 54.3428 38.2598 55.6875 37.5039 C54.5273 36.0762 53.7471 33.9023 54.0273 33.0391 C55.3496 33.374 56.9209 36.0918 57.0439 37.1816 C57.9189 36.415 59.4727 35.7285 62.0537 35.4219 C60.3535 34.3438 59.9902 32.3516 59.4063 30.9219 C58.2588 31.3682 56.0898 31.4277 55.1152 30.8643 C55.8281 30.2852 57.168 29.7344 59.1777 29.7207 C59.1777 28.1758 59.6406 27.043 60.8945 25.8281 C59.1719 25.8418 57.0723 25.3555 55.5762 24.9629 C55.3281 26.292 54.4844 27.8887 53.3398 28.2891 C53.334 27.4277 53.5996 25.1797 54.4844 24.5117 C53.6201 23.9443 52.3672 22.5674 51.9102 20.8496 C51.2881 22.1758 50.4268 23.4805 48.5645 23.9238 C49.749 24.9766 50.584 26.9941 50.25 28.4609 C45.1973 24.4785 42.5215 25.7773 41.2324 26.0742 Cf27.7578 38.7324 m28.4346 38.9316 28.7246 39.084 V27.2559 41.7969 31.707 46.0776 32.627 46.8169 C33.2275 46.5918 33.3477 44.0586 32.6699 42.7227 C33.5137 42.8457 35.7031 41.4678 36.4609 40.1787 C36.5254 40.8652 38.0957 43.8066 38.9219 44.1846 C38.002 44.582 37.3359 46.0547 36.5742 47.5039 C37.5957 47.6709 38.9961 46.7485 40.4668 45.8438 C40.9814 46.6445 42.3555 47.6177 43.6143 48.1328 C42.5264 48.8198 42.0313 49.5615 41.5352 51.0205 C40.4922 50.4556 38.3057 50.3057 37.7764 50.5938 C38.291 51.7056 40.5371 52.2485 41.2676 52.1958 C41.0137 53.0576 40.8652 55.2109 41.0391 57.8037 C39.3789 56.4878 37.834 55.1719 36.1738 55.2285 C36.4434 53.8076 35.8076 52.002 35.4307 51.5088 C34.8574 52.2529 34.4463 53.0796 34.8008 55.0576 C33.3486 55.5425 32.1113 56.0879 30.7373 57.3467 C30.7373 55.5146 30.166 54.314 29.2969 53.0366 C30.5576 52.5488 31.8301 51.3467 31.8252 50.3076 C30.9775 50.46 29.2852 51.2036 28.793 52.1958 C28.0742 51.4497 26.3906 50.1396 24.7871 50.1357 C25.9746 49.2817 26.8945 48.2466 26.9893 46.335 C28.2422 47.3057 30.6953 47.9209 32.0752 47.3237 C27.2344 43.0869 27.7031 40.0547 27.7578 38.7324 Cf13.5195 70.3916 m12.9941 69.9209 12.7988 69.6587 V15.2891 67.8418 13.0352 62.0146 12.5225 60.9517 C11.8828 60.8955 10.4766 63.6367 10.5117 65.1348 C9.3809 64.3789 7.7148 64.4995 6.1133 64.7856 C6.6855 63.6987 6.2842 61.7529 5.4834 60.9517 C6.4854 60.9878 7.8359 60.2729 9.1455 59.2925 C8.3105 58.4717 6.4834 58.6338 4.5674 59.2925 C4.5674 57.9189 3.7461 56.1816 2.9082 54.9995 C4.2246 55.0576 5.3691 54.3706 6.2275 53.3408 C6.8926 54.9097 8.9258 56.0215 9.832 55.9727 C9.8496 54.6079 8.2764 52.5176 7.2539 52.1187 C7.8545 51.4497 8.873 49.9189 9.832 47.5039 C10.6309 49.4297 11.8008 50.6719 13.0342 51.6045 C11.8926 53.1655 12.0664 54.0366 12.4648 55.5146 C13.209 54.9746 14.2393 54.5415 14.4102 52.5386 C16.127 52.8247 17.2637 52.7529 18.7598 51.8525 C18.3057 53.5137 18.3027 55.1147 18.623 56.8149 C16.7725 56.6748 15.2129 56.8887 14.1826 58.377 C15.0117 58.6035 17.2725 58.6626 18.1465 57.731 C18.4736 58.7129 19.3691 60.1187 20.8145 60.8125 C19.375 61.0728 18.3896 62.1719 17.4805 63.8579 C16.7676 62.4429 14.541 60.7769 13.0371 60.7227 C15.041 64.7856 15.041 67.7046 13.5195 70.3916 Cf41.2324 64.4824 m41.5518 65.1113 41.7549 65.3682 V44.1523 63.4272 48.958 66.7354 49.8535 67.5034 C49.7432 68.1362 47.6182 69.2725 45.9004 68.2422 C46.3408 69.5313 45.4395 71.4922 44.2402 72.5342 C45.9805 72.4341 48.126 73.7954 48.6484 74.5371 C48.8701 73.5601 50.0527 72.29 51.3379 71.2754 C51.6895 72.249 50.9941 74.3662 50.0781 75.9683 C51.3125 76.4692 52.4248 77.3994 52.8828 78.6582 C53.3398 77.3423 54.3428 76.667 55.6875 75.9111 C54.5273 74.4844 53.7471 72.3101 54.0273 71.4473 C55.3496 71.7822 56.9209 74.5 57.0439 75.5903 C57.9189 74.8232 59.4727 74.1372 62.0537 73.8311 C60.3535 72.7534 59.9902 70.7612 59.4063 69.3301 C58.2588 69.7773 56.0898 69.8364 55.1152 69.2725 C55.8281 68.6934 57.168 68.1431 59.1777 68.1284 C59.1777 66.583 59.6406 65.4512 60.8945 64.2373 C59.1719 64.249 57.0723 63.7632 55.5762 63.3721 C55.3281 64.7002 54.4844 66.2974 53.3398 66.6973 C53.334 65.8364 53.5996 63.5874 54.4844 62.9214 C53.6201 62.353 52.3672 60.9751 51.9102 59.2583 C51.2881 60.583 50.4268 61.8882 48.5645 62.333 C49.749 63.3862 50.584 65.4033 50.25 66.8691 C45.1973 62.8872 42.5215 64.1851 41.2324 64.4824 Cf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Stripes)(Stripes) 8.45 4.6001 80.45 76.6001 [%AI3_Tile(0 O 0 R 1 0.07 1 0 k 1 0.07 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 3.6 w 4 M []0 d0 XR8.2 8.2 m80.7 8.2 LS8.2 22.6001 m80.7 22.6001 LS8.2 37.0002 m80.7 37.0002 LS8.2 51.4 m80.7 51.4 LS8.2 65.8001 m80.7 65.8001 LS8.2 15.4 m80.7 15.4 LS8.2 29.8001 m80.7 29.8001 LS8.2 44.2 m80.7 44.2 LS8.2 58.6001 m80.7 58.6001 LS8.2 73.0002 m80.7 73.0002 LS%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginBrushPattern(New Pattern 1)0 Au1 Ap0 J 0 j 1 w 4 M []0 d0 XR-7834.7505 7795.001 m-7834.7505 7771.001 L-7884.7505 7771.001 L-7884.7505 7795.001 L-7834.7505 7795.001 Lnu0 Ap0 O1 g-7854.7505 7793.001 m-7866.96 7796.0527 -7875.4438 7786.061 -7884.7505 7778.9521 CF-7844.7505 7793.001 m-7861.1279 7797.0952 -7870.8018 7777.7231 -7884.7505 7773.3159 CF-7884.7505 7773.001 m-7864.7505 7768.001 -7854.7505 7798.001 -7834.7505 7793.001 CF-7874.7505 7773.001 m-7858.3726 7768.9058 -7848.7002 7788.2778 -7834.7505 7792.6846 CF-7864.7505 7773.001 m-7852.541 7769.9482 -7844.0566 7779.9399 -7834.7505 7787.0498 CF-7844.7505 7773.001 m-7841.1279 7772.0952 -7837.835 7772.3418 -7834.7505 7773.3159 CF-7874.7505 7793.001 m-7878.3726 7793.9058 -7881.6655 7793.6602 -7884.7505 7792.6846 CF-7844.7822 7773.1255 m-7850.9014 7771.6167 -7854.7822 7773.1255 V-7858.8774 7771.6489 -7864.7822 7773.1255 V-7869.7446 7771.4497 -7874.7822 7773.1255 V-7880.7974 7771.5742 -7884.7822 7773.1255 V-7884.7822 7792.8105 L-7881.6958 7793.7847 -7878.2974 7793.9922 -7874.3809 7792.9087 C-7868.2134 7794.4922 -7864.4639 7792.9087 V-7859.4639 7794.4922 -7854.3809 7792.8247 V-7850.0479 7794.4087 -7844.3809 7792.9087 V-7838.8799 7794.3247 -7834.7822 7793.1255 V-7834.7822 7773.4409 L-7837.5254 7772.4287 -7840.6519 7771.9297 -7844.7822 7773.1255 Cf0 R0 G1 J 1 j 0.5 w-7864.7505 7793.001 m-7872.541 7794.9482 -7878.8135 7791.5854 -7884.7505 7787.0498 CS-7854.7505 7793.001 m-7866.96 7796.0527 -7875.4438 7786.061 -7884.7505 7778.9521 CS-7844.7505 7793.001 m-7861.1279 7797.0952 -7870.8018 7777.7231 -7884.7505 7773.3159 CS-7884.7505 7773.001 m-7864.7505 7768.001 -7854.7505 7798.001 -7834.7505 7793.001 CS-7874.7505 7773.001 m-7858.3726 7768.9058 -7848.7002 7788.2778 -7834.7505 7792.6846 CS-7864.7505 7773.001 m-7852.541 7769.9482 -7844.0566 7779.9399 -7834.7505 7787.0498 CS-7854.7505 7773.001 m-7846.96 7771.0527 -7840.687 7774.415 -7834.7505 7778.9521 CS-7844.7505 7773.001 m-7841.1279 7772.0952 -7837.835 7772.3418 -7834.7505 7773.3159 CS-7874.7505 7793.001 m-7878.3726 7793.9058 -7881.6655 7793.6602 -7884.7505 7792.6846 CSUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 10)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7884.001 7794.001 m-7833.8926 7794.001 L-7833.8926 7737.9761 L-7884.001 7737.9761 L-7884.001 7794.001 Lnu0 O0.1 1 1 0 k-7846.9014 7759.5762 m-7848.7183 7753.0962 -7858.8257 7756.4663 Y-7858.791 7756.5313 L-7868.9009 7753.1616 -7870.7153 7759.6401 V-7876.6758 7777.0073 -7871.4927 7783.7456 V-7864.7534 7793.3374 -7860.606 7793.3374 V-7857.0103 7793.271 L-7852.8638 7793.271 -7846.1255 7783.6826 Y-7840.9414 7776.9434 -7846.9014 7759.5762 Yfu0 0 0 1 k-7851.3926 7737.9761 m-7852.1167 7739.4209 -7852.9238 7740.4761 V-7852.4063 7740.064 -7851.5151 7739.1929 -7851.3926 7737.9761 Cf-7865.0649 7740.4858 m-7865.8721 7739.4312 -7866.5942 7737.9873 Y-7866.4727 7739.2026 -7865.5825 7740.0737 -7865.0649 7740.4858 CfU0 0.61 0.74 0 k-7850.5986 7762.4614 m-7851.9038 7757.7969 -7859.1826 7760.2222 Y-7859.1567 7760.269 L-7866.437 7757.8433 -7867.7422 7762.5078 V-7872.0342 7775.0122 -7868.3022 7779.8638 V-7863.4497 7786.769 -7860.4639 7786.769 V-7857.875 7786.7231 L-7854.8896 7786.7231 -7850.0366 7779.8174 Y-7846.3047 7774.9648 -7850.5986 7762.4614 Yfu1 Ap0.73 0.43 1 0.22 k0 R0 0 0 1 K-7854.623 7765.2759 m-7853.8135 7765.2759 -7853.1558 7764.6182 -7853.1558 7763.8105 c-7853.1558 7763.001 -7853.8135 7762.3433 -7854.623 7762.3433 c-7855.4326 7762.3433 -7856.0898 7763.001 -7856.0898 7763.8105 c-7856.0898 7764.6182 -7855.4326 7765.2759 -7854.623 7765.2759 cb-7854.3638 7776.9976 m-7853.0806 7776.9976 -7852.042 7776.1206 -7852.042 7775.0425 c-7852.042 7773.9624 -7853.0806 7773.0874 -7854.3638 7773.0874 c-7855.6455 7773.0874 -7856.6846 7773.9624 -7856.6846 7775.0425 c-7856.6846 7776.1206 -7855.6455 7776.9976 -7854.3638 7776.9976 cb-7853.8345 7788.7866 m-7852.2822 7788.7866 -7851.0239 7788.1304 -7851.0239 7787.3218 c-7851.0239 7786.5122 -7852.2822 7785.855 -7853.8345 7785.855 c-7855.3862 7785.855 -7856.6455 7786.5122 -7856.6455 7787.3218 c-7856.6455 7788.1304 -7855.3862 7788.7866 -7853.8345 7788.7866 cb-7849.6113 7760.5273 m-7848.8687 7760.5273 -7848.2671 7759.8159 -7848.2671 7758.937 c-7848.2671 7758.0601 -7848.8687 7757.3481 -7849.6113 7757.3481 c-7850.3535 7757.3481 -7850.9551 7758.0601 -7850.9551 7758.937 c-7850.9551 7759.8159 -7850.3535 7760.5273 -7849.6113 7760.5273 cb-7848.0039 7782.083 m-7848.8823 7781.7358 -7849.1494 7780.335 -7848.603 7778.9546 c-7848.0566 7777.5762 -7846.9014 7776.7368 -7846.0239 7777.0854 c-7845.1455 7777.4326 -7844.8774 7778.8335 -7845.4238 7780.2144 c-7845.9702 7781.5952 -7847.1255 7782.4321 -7848.0039 7782.083 cbu-7863.0566 7765.1602 m-7863.8662 7765.1602 -7864.5249 7764.5024 -7864.5249 7763.6934 c-7864.5249 7762.8833 -7863.8662 7762.2271 -7863.0566 7762.2271 c-7862.249 7762.2271 -7861.5918 7762.8833 -7861.5918 7763.6934 c-7861.5918 7764.5024 -7862.249 7765.1602 -7863.0566 7765.1602 cb-7863.3169 7776.8799 m-7864.6001 7776.8799 -7865.6382 7776.0054 -7865.6382 7774.9258 c-7865.6382 7773.8447 -7864.6001 7772.9702 -7863.3169 7772.9702 c-7862.0342 7772.9702 -7860.9951 7773.8447 -7860.9951 7774.9258 c-7860.9951 7776.0054 -7862.0342 7776.8799 -7863.3169 7776.8799 cb-7863.8462 7788.6714 m-7865.3975 7788.6714 -7866.6558 7788.0151 -7866.6558 7787.2046 c-7866.6558 7786.394 -7865.3975 7785.7393 -7863.8462 7785.7393 c-7862.2935 7785.7393 -7861.0352 7786.394 -7861.0352 7787.2046 c-7861.0352 7788.0151 -7862.2935 7788.6714 -7863.8462 7788.6714 cb-7868.0688 7760.4097 m-7868.811 7760.4097 -7869.4126 7759.6982 -7869.4126 7758.8218 c-7869.4126 7757.9448 -7868.811 7757.2334 -7868.0688 7757.2334 c-7867.3262 7757.2334 -7866.7246 7757.9448 -7866.7246 7758.8218 c-7866.7246 7759.6982 -7867.3262 7760.4097 -7868.0688 7760.4097 cb-7869.6758 7781.9678 m-7868.7983 7781.6206 -7868.5303 7780.2192 -7869.0767 7778.8384 c-7869.623 7777.4575 -7870.7783 7776.6206 -7871.6558 7776.9678 c-7872.5342 7777.3169 -7872.8042 7778.7183 -7872.2578 7780.0977 c-7871.7114 7781.478 -7870.5562 7782.3159 -7869.6758 7781.9678 cbUU0 Ap0 0 0 1 k-7859.1318 7760.6558 m-7859.1318 7793.3154 lFu-7843.3911 7746.5313 m-7844.082 7745.8374 -7847.019 7746.7026 Y-7848.2295 7746.8745 -7848.0566 7749.2944 Y-7847.019 7751.3687 -7847.7114 7751.1953 Y-7848.2998 7751.1953 -7849.855 7751.1143 -7850.7822 7751.064 C-7851.123 7749.6694 -7852.6138 7748.4761 -7854.7222 7747.77 C-7852.7583 7744.478 -7854.5186 7743.7954 -7856.2935 7743.7905 C-7856.3105 7743.7026 -7856.333 7743.6167 -7856.3599 7743.5337 C-7854.1094 7743.5791 -7853.6401 7741.2593 Y-7853.4058 7741.064 -7853.1606 7740.7866 -7852.9238 7740.4761 C-7853.1426 7740.6479 -7853.2954 7740.7402 Y-7854.2593 7740.7402 -7855.8774 7742.4946 -7856.4966 7743.207 C-7856.9199 7742.4438 -7857.8535 7741.9121 -7858.9438 7741.9121 c-7860.0703 7741.9121 -7861.0327 7742.48 -7861.4321 7743.2856 C-7861.999 7742.625 -7863.6978 7740.751 -7864.6943 7740.751 C-7864.8462 7740.6577 -7865.0649 7740.4858 V-7864.8286 7740.7944 -7864.583 7741.0737 -7864.3486 7741.269 C-7863.8638 7743.6567 -7861.5254 7743.5342 V-7861.5454 7743.5898 -7861.5679 7743.644 -7861.5806 7743.7026 C-7864.9238 7743.6929 -7863.9375 7746.3174 -7863.2114 7747.6606 C-7865.5918 7748.377 -7867.2646 7749.7017 -7867.5249 7751.2505 C-7868.4482 7751.2998 -7869.6738 7751.3594 -7870.1807 7751.3594 C-7870.873 7751.5322 -7869.835 7749.4585 V-7869.6631 7747.04 -7870.873 7746.8662 V-7873.8105 7746.0024 -7874.5015 7746.6934 V-7875.1919 7747.5566 -7876.0566 7746.3472 V-7875.1919 7748.0762 -7873.291 7747.5566 V-7870.6982 7746.8662 -7871.3911 7748.5942 V-7871.9087 7752.0503 -7870.1807 7752.7407 V-7868.0342 7753.855 -7866.2822 7754.0898 V-7865.9087 7754.4146 -7865.4639 7754.7114 -7864.9585 7754.9766 C-7867.5566 7755.0474 -7870.2246 7755.9214 -7871.0762 7758.957 C-7871.5151 7760.2441 -7872.0518 7762.2441 V-7873.103 7762.8257 -7874.3022 7764.0078 -7875.5415 7766.2632 C-7876.3945 7769.4502 -7877.167 7764.7134 V-7878.3975 7761.6494 -7879.6514 7761.5386 V-7878.4702 7763.2881 -7878.9038 7764.417 V-7877.2998 7768.9175 -7875.6143 7767.8999 V-7874.0991 7767.2202 -7872.689 7764.8159 V-7873.0703 7766.4976 -7873.4326 7768.4175 -7873.6753 7770.3911 C-7874.4897 7770.3975 L-7876.3511 7769.48 -7876.3262 7772.959 V-7877.123 7776.9458 -7876.3599 7779.6831 V-7875.647 7782.1514 -7878.1279 7780.9312 V-7879.2847 7781.3247 -7879.9839 7780.7886 V-7882.3887 7779.4136 -7884.001 7781.125 V-7882.147 7780.8799 -7881.4487 7781.4175 V-7879.979 7781.562 -7879.8975 7782.1792 V-7876.957 7782.856 -7876.189 7782.0776 V-7874.4175 7781.2144 -7875.1313 7778.3608 V-7875.8799 7770.4814 -7874.3198 7772.4058 V-7874.1182 7772.4224 -7873.8794 7772.5186 V-7874.1519 7776.4326 -7873.8022 7780.3257 -7871.9966 7782.8521 C-7875.4546 7775.3335 -7870.2974 7760.3042 Y-7868.9614 7755.5313 -7863.1274 7756.1025 -7860.1455 7756.7354 C-7860.0718 7758.1304 -7859.8374 7759.9497 -7859.1318 7760.6558 C-7858.2134 7758.6968 -7858.2358 7757.0737 V-7857.0767 7756.7222 -7850.2822 7754.8447 -7847.4497 7758.3374 C-7848.4321 7755.814 -7850.8262 7755.019 -7853.2017 7754.9194 C-7852.667 7754.6318 -7852.2046 7754.3057 -7851.8262 7753.9502 C-7850.0415 7753.7866 -7847.7114 7752.5776 Y-7845.9814 7751.8862 -7846.502 7748.4312 Y-7847.1919 7746.7026 -7844.6001 7747.394 Y-7842.7007 7747.9121 -7841.835 7746.1841 Y-7842.7007 7747.394 -7843.3911 7746.5313 Yf-7837.9087 7780.9526 m-7838.6079 7781.4897 -7839.7642 7781.0942 Y-7842.2446 7782.314 -7841.5327 7779.8472 Y-7840.7695 7777.1104 -7841.5649 7773.1226 Y-7841.5415 7769.645 -7843.4014 7770.5601 Y-7844.0342 7770.5562 L-7844.3198 7768.6128 -7844.7046 7766.7554 -7845.0903 7765.1704 C-7843.7134 7767.4209 -7842.2783 7768.064 Y-7840.5918 7769.0825 -7838.9878 7764.5791 Y-7839.4214 7763.4502 -7838.2422 7761.7026 Y-7839.4946 7761.813 -7840.7246 7764.877 Y-7841.498 7769.6162 -7842.3521 7766.4272 Y-7843.5786 7764.1914 -7844.7695 7763.0103 -7845.8145 7762.4233 C-7846.2031 7761.064 -7846.4863 7760.2402 Y-7846.7007 7759.4727 -7847.0342 7758.8486 -7847.4497 7758.3374 C-7847.3809 7758.5137 -7847.3174 7758.6982 -7847.2642 7758.8921 C-7841.3022 7776.2593 -7846.4863 7782.9976 V-7853.2246 7792.5874 -7857.3726 7792.5874 V-7860.9663 7792.6519 L-7865.1143 7792.6519 -7871.8535 7783.062 Y-7871.9038 7782.9966 -7871.9473 7782.9224 -7871.9966 7782.8521 C-7871.7383 7783.4146 -7871.4375 7783.9409 -7871.0762 7784.4097 C-7864.3359 7794.001 -7860.1895 7794.001 V-7856.5942 7793.9351 L-7852.4487 7793.9351 -7845.7095 7784.3457 Y-7843.5806 7781.5776 -7843.3311 7777.0186 -7843.7778 7772.606 C-7843.6558 7772.5762 -7843.5703 7772.5688 Y-7842.0122 7770.6479 -7842.7598 7778.5249 Y-7843.4751 7781.3794 -7841.7031 7782.2407 Y-7840.9351 7783.019 -7837.9951 7782.3433 Y-7837.9146 7781.7266 -7836.4438 7781.5815 Y-7835.7446 7781.0454 -7833.8926 7781.2886 Y-7835.5034 7779.5776 -7837.9087 7780.9526 YfUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 2)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7884.001 7794.001 m-7819.187 7794.001 L-7819.187 7729.9023 L-7884.001 7729.9023 L-7884.001 7794.001 Lnu0 O0 g-7849.6982 7752.4302 m-7851.6094 7729.9023 L-7853.522 7752.4302 L-7852.9038 7752.3071 -7852.2646 7752.2407 -7851.6094 7752.2407 c-7850.9551 7752.2407 -7850.3169 7752.3071 -7849.6982 7752.4302 Cf-7861.2407 7760.3975 m-7884.001 7762.3306 L-7861.1143 7764.2734 L-7861.2866 7763.5474 -7861.3857 7762.7935 -7861.3857 7762.0161 c-7861.3857 7761.4634 -7861.3286 7760.9258 -7861.2407 7760.3975 Cf-7856.519 7753.5728 m-7870.1631 7744.8047 L-7860.2158 7757.3774 L-7859.3574 7755.791 -7858.0718 7754.4766 -7856.519 7753.5728 Cf-7853.4814 7771.6079 m-7851.5791 7794.001 L-7849.6768 7771.5967 L-7850.3022 7771.7231 -7850.9482 7771.791 -7851.6094 7771.791 c-7852.2505 7771.791 -7852.8735 7771.7246 -7853.4814 7771.6079 Cf-7841.9614 7763.5073 m-7819.187 7761.5737 L-7842.083 7759.6294 L-7842.083 7759.8511 L-7841.9263 7760.5498 -7841.8345 7761.27 -7841.8345 7762.0161 c-7841.8345 7762.5239 -7841.8857 7763.02 -7841.9614 7763.5073 Cf-7860.1143 7766.8262 m-7870.165 7779.5298 L-7856.2783 7770.606 L-7857.8833 7769.731 -7859.2119 7768.417 -7860.1143 7766.8262 Cf-7842.9966 7757.395 m-7832.875 7744.606 L-7846.7671 7753.5322 L-7845.1777 7754.4414 -7843.8638 7755.7798 -7842.9966 7757.395 Cf-7846.6895 7770.4521 m-7832.8735 7779.3286 L-7842.9663 7766.5737 L-7843.8198 7768.1895 -7845.1162 7769.5322 -7846.6895 7770.4521 Cf-7842.8896 7766.6138 m-7842.3862 7765.665 -7842.043 7764.6216 -7841.875 7763.52 c-7841.7998 7763.0298 -7841.749 7762.5278 -7841.749 7762.0161 c-7841.749 7761.2642 -7841.8398 7760.5361 -7841.9985 7759.8311 c-7842.1958 7758.9575 -7842.5054 7758.125 -7842.9185 7757.355 c-7843.7959 7755.7246 -7845.1201 7754.3745 -7846.7246 7753.457 c-7847.6294 7752.938 -7848.623 7752.5542 -7849.6807 7752.3462 c-7850.3057 7752.2207 -7850.9502 7752.1528 -7851.6094 7752.1528 c-7852.27 7752.1528 -7852.915 7752.2207 -7853.5391 7752.3462 c-7854.623 7752.561 -7855.6382 7752.9575 -7856.563 7753.4966 c-7858.1318 7754.4102 -7859.4287 7755.7368 -7860.291 7757.335 c-7860.7974 7758.27 -7861.1455 7759.2974 -7861.3262 7760.3833 c-7861.415 7760.917 -7861.4727 7761.459 -7861.4727 7762.0161 c-7861.4727 7762.8018 -7861.3711 7763.561 -7861.1982 7764.2935 c-7860.9814 7765.207 -7860.6406 7766.0737 -7860.187 7766.8706 c-7859.2798 7768.4727 -7857.939 7769.8018 -7856.3174 7770.6831 c-7855.4497 7771.1558 -7854.501 7771.4985 -7853.4966 7771.6934 c-7852.8857 7771.812 -7852.2559 7771.8784 -7851.6094 7771.8784 c-7850.9414 7771.8784 -7850.2905 7771.8086 -7849.6606 7771.6831 c-7848.5791 7771.4673 -7847.5674 7771.0654 -7846.646 7770.5278 c-7845.0566 7769.5986 -7843.751 7768.2446 -7842.8896 7766.6138 cfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 3)0 Au1 Ap0 J 0 j 1 w 4 M []0 d0 XR-7874.7505 7795.001 m-7874.7505 7771.001 L-7884.7505 7771.001 L-7884.7505 7795.001 L-7874.7505 7795.001 Lnuu0 Ap0 O1 g-7875.4063 7786.5366 m-7874.9878 7785.436 -7874.7505 7784.248 -7874.7505 7783.001 c-7874.7505 7781.1382 -7875.269 7779.4009 -7876.1553 7777.9082 c-7877.8975 7774.9746 -7881.0903 7773.001 -7884.7505 7773.001 C-7884.7505 7793.001 L-7884.4302 7793.001 -7884.1143 7792.9814 -7883.8022 7792.9526 c-7881.9126 7792.7759 -7880.1807 7792.0649 -7878.7446 7790.9834 c-7877.248 7789.855 -7876.0806 7788.3184 -7875.4063 7786.5366 cf0 R0 G1 J 1 j 0.5 w-7884.7505 7773.3174 m-7881.7217 7774.2754 -7878.8926 7775.9326 -7876.1553 7777.9082 CS-7884.7505 7778.9521 m-7881.6001 7781.3569 -7878.543 7784.0874 -7875.4063 7786.5366 CS-7878.7446 7790.9834 m-7880.811 7789.8921 -7882.7998 7788.5342 -7884.7505 7787.043 CS-7883.8022 7792.9526 m-7884.1201 7792.8687 -7884.438 7792.7856 -7884.7505 7792.687 CS-7878.7446 7790.9834 m-7880.1807 7792.0649 -7881.9126 7792.7754 -7883.8022 7792.9526 CS-7875.4063 7786.5366 m-7874.9878 7785.436 -7874.7505 7784.248 -7874.7505 7783.001 c-7874.7505 7781.1382 -7875.269 7779.4009 -7876.1553 7777.9082 CS-7884.7505 7793.001 m-7884.4302 7793.001 -7884.1143 7792.9814 -7883.8022 7792.9526 CS-7878.7446 7790.9834 m-7877.248 7789.855 -7876.0806 7788.3184 -7875.4063 7786.5366 CS-7876.1553 7777.9082 m-7877.8975 7774.9746 -7881.0903 7773.001 -7884.7505 7773.001 CSUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 34)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7884.0254 7794.0273 m-7828.0542 7794.0273 L-7828.0542 7732.5342 L-7884.0254 7732.5342 L-7884.0254 7794.0273 Lnuu0 O0.0745 0.9 0.9019 0.18 k0 R0 0 0 1 K1 J 1 j 0.0518 w-7857.6001 7770.7222 m-7857.3599 7781.522 -7862.8799 7791.8398 v-7862.4014 7794.001 -7860.959 7794.001 v-7861.2007 7790.6406 -7860.2402 7790.1616 v-7855.9199 7778.1606 -7856.6382 7770.2407 v-7857.6001 7770.7222 lb-7857.6001 7770.7222 m-7859.2798 7776.001 -7871.04 7777.2017 v-7875.3599 7777.6816 -7875.6001 7779.1216 v-7869.1206 7769.52 -7868.1606 7769.7617 v-7881.3599 7764.0015 -7884.001 7758.7202 v-7878.959 7761.6006 -7875.6001 7759.4409 v-7867.6807 7759.2017 -7862.6406 7761.3618 v-7858.8018 7763.2817 -7866.7207 7747.2017 v-7862.8799 7758.9614 -7859.2798 7732.561 v-7858.3198 7737.8418 -7856.8799 7739.2817 v-7850.8799 7746.9614 -7851.8398 7749.1216 v-7852.3198 7752.9614 -7847.7598 7746.7217 v-7848.001 7756.3218 -7850.4014 7759.6816 v-7852.5601 7763.2817 -7846.5601 7761.1216 v-7840.5601 7759.2017 -7835.2798 7760.8818 v-7829.7598 7762.3208 -7828.0806 7759.4409 v-7839.8398 7771.9214 -7845.6001 7771.6816 v-7843.9199 7775.2817 l-7841.519 7780.0815 -7842.001 7781.2817 v-7857.269 7771.8833 -7857.6001 7770.7222 vb-7857.6001 7770.7222 m-7854.959 7752.2407 -7857.6001 7744.561 v-7859.9985 7734.0015 -7859.2798 7732.561 vS-7856.1606 7759.4409 m-7850.1606 7754.6406 -7848.959 7749.3608 vS-7856.1606 7758.7202 m-7865.04 7751.0415 -7866.7207 7747.2017 vS-7828.0806 7759.4409 m-7829.2798 7761.6006 -7857.3599 7769.7617 y-7862.4014 7764.2422 -7873.9199 7761.8418 v-7881.5991 7760.8818 -7884.001 7758.7202 vS-7874.6382 7777.6816 m-7863.1201 7768.562 -7857.3599 7769.7617 y-7843.2002 7776.001 -7842.001 7781.2817 vSUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 36)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7883.8506 7793.9966 m-7833.96 7793.9966 L-7833.96 7742.9263 L-7883.8506 7742.9263 L-7883.8506 7793.9966 Lnu0 O0.025 0.1 0.475 0 k-7862.1514 7761.9048 m-7864.4766 7760.813 -7866.6919 7760.4438 -7868.3735 7760.9238 c-7869.0518 7761.1177 -7869.6455 7761.4482 -7870.123 7761.9238 c-7870.6006 7762.4033 -7870.9302 7762.9951 -7871.123 7763.6738 c-7872.0098 7766.772 -7870.0103 7771.6782 -7865.9238 7775.7671 c-7861.8345 7779.854 -7856.9302 7781.8521 -7853.8286 7780.9673 c-7853.1519 7780.772 -7852.5591 7780.4434 -7852.0806 7779.9663 c-7851.603 7779.4888 -7851.2759 7778.896 -7851.0825 7778.2178 c-7850.5186 7776.2466 -7851.123 7773.5454 -7852.686 7770.7896 c-7853.5825 7769.2104 -7854.791 7767.6138 -7856.2798 7766.123 c-7858.1514 7764.2544 -7860.1919 7762.8247 -7862.1514 7761.9048 cfu0.0035 0.014 0.0665 0 k-7861.2192 7760.9727 m-7863.8311 7760.022 -7866.3975 7759.9697 -7868.3735 7760.9238 C-7866.6919 7760.4438 -7864.4766 7760.813 -7862.1514 7761.9048 c-7861.6191 7762.1553 -7861.0806 7762.4438 -7860.543 7762.7681 C-7858.8994 7762.0542 L-7859.667 7761.6177 -7860.4438 7761.2544 -7861.2192 7760.9727 cf0.015 0.06 0.285 0 k-7858.8994 7762.0542 m-7860.543 7762.7681 L-7859.0967 7763.6353 -7857.6431 7764.7617 -7856.2798 7766.123 c-7856.1543 7766.2505 -7856.0337 7766.3784 -7855.9102 7766.5063 C-7855.2158 7764.8638 L-7856.3711 7763.7241 -7857.6191 7762.7817 -7858.8994 7762.0542 CfUu0.039 0.156 0.741 0 k-7849.687 7749.4048 m-7849.9751 7749.6919 -7861.2192 7760.9727 Y-7860.4438 7761.2544 -7859.667 7761.6177 -7858.8994 7762.0542 C-7845.415 7748.5713 L-7847.0615 7748.1001 -7848.6406 7748.356 -7849.687 7749.4048 cf0.025 0.1 0.475 0 k-7845.415 7748.5713 m-7858.8994 7762.0542 L-7857.585 7762.8032 -7856.2974 7763.7759 -7855.1143 7764.9575 c-7855.085 7764.9873 -7855.0591 7765.0161 -7855.0278 7765.0454 C-7841.3418 7751.3574 L-7841.5273 7751.1338 -7841.7207 7750.9146 -7841.9302 7750.7017 c-7843.0103 7749.623 -7844.231 7748.9087 -7845.415 7748.5713 CfUu0.0115 0.046 0.2185 0 k-7835.9351 7758.3926 m-7833.5342 7755.9897 -7833.335 7752.0903 -7835.1382 7748.6978 C-7836.2959 7749.1182 L-7834.0942 7752.4966 -7833.8398 7756.2954 -7835.9351 7758.3926 cf0.015 0.06 0.285 0 k-7843.5342 7743.5962 m-7842.5825 7742.9263 L-7845.2046 7742.3521 -7847.8311 7742.9146 -7849.6206 7744.7065 c-7848.1729 7743.2583 -7845.9087 7742.9312 -7843.5342 7743.5962 Cf0.0295 0.118 0.5605 0 k-7843.5342 7743.5962 m-7845.9087 7742.9312 -7848.1729 7743.2583 -7849.6206 7744.7065 c-7851.019 7746.106 -7851.3711 7748.2642 -7850.7959 7750.5474 C-7848.8682 7747.5454 -7845.4087 7748.5542 V-7843.5854 7743.6313 L-7843.5342 7743.5962 Lf*u1 D0.048 0.192 0.912 0 k-7835.9351 7758.3926 m-7837.2822 7759.7393 -7839.333 7760.1138 -7841.5239 7759.6274 C-7851.6719 7769.7734 L-7851.77 7769.5688 -7851.77 7769.5688 -7851.6719 7769.7734 c-7850.2246 7772.8154 -7849.9702 7775.917 -7851.0825 7778.2178 C-7850.5186 7776.2466 -7851.123 7773.5454 -7852.686 7770.7896 c-7853.5054 7769.3442 -7854.5918 7767.8857 -7855.9102 7766.5063 C-7855.2158 7764.8638 L-7855.1826 7764.895 -7855.147 7764.9238 -7855.1143 7764.9575 c-7855.085 7764.9888 -7855.0566 7765.0186 -7855.0278 7765.0474 c-7855.0278 7765.0474 -7855.0278 7765.0454 V-7841.3418 7751.3574 L-7836.3262 7749.1294 L-7836.2959 7749.1182 L-7834.0942 7752.4966 -7833.8398 7756.2954 -7835.9351 7758.3926 cf*U0 D0.0215 0.086 0.4085 0 k-7842.5825 7742.9263 m-7843.5342 7743.5962 L-7841.6846 7744.1118 -7839.7666 7745.229 -7838.1143 7746.8833 c-7837.4063 7747.5898 -7836.7998 7748.3423 -7836.2959 7749.1182 C-7835.1382 7748.6978 L-7835.6558 7747.7246 -7836.3374 7746.7935 -7837.1807 7745.9521 c-7838.77 7744.3599 -7840.6758 7743.3433 -7842.5825 7742.9263 Cf0.0205 0.082 0.3895 0 k-7836.2959 7749.1182 m-7836.7998 7748.3423 -7837.4063 7747.5898 -7838.1143 7746.8833 c-7839.7666 7745.229 -7841.6846 7744.1118 -7843.5342 7743.5962 C-7843.5854 7743.6313 L-7845.4087 7748.5542 L-7844.2119 7748.9224 -7842.9878 7749.644 -7841.9302 7750.7017 c-7841.7207 7750.9146 -7841.5273 7751.1338 -7841.3418 7751.3574 C-7836.3262 7749.1294 L-7836.2959 7749.1182 LfUu0.445 0.356 0.267 0 k-7883.8506 7793.9966 m-7861.9575 7770.9697 L-7862.2017 7770.6494 -7862.5762 7770.6138 -7862.8896 7770.6602 C-7867.1807 7775.2896 -7878.3154 7787.457 -7882.7271 7792.2798 C-7883.5654 7793.3521 -7884.001 7793.9937 -7883.8506 7793.9966 Cf0.15 0.12 0.09 0 k-7883.8345 7793.9966 m-7882.6606 7793.7041 -7861.6934 7772.0034 Y-7861.6934 7771.5024 -7861.7998 7771.1758 -7861.9575 7770.9697 C-7883.8506 7793.9966 L-7883.8447 7793.9966 -7883.8423 7794.001 -7883.8345 7793.9966 cf0.2 0.16 0.12 0 k-7882.7271 7792.2798 m-7878.3154 7787.457 -7867.1807 7775.2896 -7862.8896 7770.6602 C-7863.2007 7770.7046 -7863.4526 7770.8306 Y-7864.603 7771.1338 -7878.5742 7786.9624 -7882.7271 7792.2798 CfUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 37)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7882.9502 7793.2329 m-7833.04 7793.2329 L-7833.04 7729.1162 L-7882.9502 7729.1162 L-7882.9502 7793.2329 Lnu0 O0 0 0 1 k0 R0 0 0 1 K0 w-7833.2358 7729.1162 m-7833.6074 7729.249 -7833.9863 7729.2842 -7834.3838 7729.2031 c-7834.4863 7729.1689 l-7834.5254 7729.1606 -7834.5713 7729.1792 -7834.603 7729.2002 c-7834.9438 7729.3926 l-7838.7134 7731.2959 -7842.0967 7733.897 -7844.501 7737.4482 c-7845.9639 7739.5918 -7847.123 7741.8794 -7848.7998 7743.8569 c-7849.1738 7744.2095 -7849.1758 7744.7729 -7848.8345 7745.1313 c-7848.4961 7745.5015 -7847.9185 7745.5078 -7847.5615 7745.1655 c-7847.4038 7745.2104 l-7847.2646 7745.1294 -7847.0742 7745.0703 -7847.0239 7744.9575 c-7845.8535 7742.2031 -7845.1895 7739.5142 -7843.4346 7737.1392 c-7841.1729 7734.0952 -7838.1782 7731.9946 -7835.0303 7730.0239 c-7834.3682 7729.606 L-7834.4966 7729.6353 L-7833.77 7729.6431 l-7833.791 7729.6118 -7833.8018 7729.5962 -7833.8223 7729.5649 C-7833.6074 7729.5239 -7833.3774 7729.4751 -7833.1631 7729.4346 c-7833.0767 7729.4238 -7833.019 7729.3394 -7833.04 7729.2383 c-7833.0513 7729.1528 -7833.1382 7729.1089 -7833.2358 7729.1162 c-7833.2358 7729.1162 lb-7849.2222 7742.9951 m-7849.5742 7742.8071 -7849.9663 7742.6719 -7850.249 7742.3887 c-7856.4526 7736.1729 -7866.6807 7735.2734 -7874.0498 7741.686 C-7874.1582 7741.7817 -7874.1582 7741.9575 -7874.063 7742.0649 C-7871.0527 7740.9438 -7862.8838 7742.375 -7859.3232 7745.4126 C-7859.2534 7745.4673 -7859.147 7745.4536 -7859.106 7745.3711 C-7859.0513 7745.3057 -7859.0674 7745.1958 -7859.1338 7745.1567 C-7862.563 7742.0864 -7867.0679 7740.2905 -7871.6738 7740.749 C-7868.854 7739.186 -7865.6318 7738.4946 -7862.3994 7738.689 c-7857.7153 7738.9722 -7853.4639 7741.1201 -7849.3711 7743.2798 c-7849.291 7743.3198 -7849.1982 7743.2935 -7849.1558 7743.2114 C-7849.1025 7743.1313 -7849.1431 7743.0352 -7849.2222 7742.9951 cb-7858.647 7744.3359 m-7860.2271 7748.3618 -7862.3921 7752.3208 -7865.8022 7755.0767 c-7865.9658 7755.2129 -7865.9951 7755.4497 -7865.8721 7755.606 c-7865.7354 7755.7681 -7865.5054 7755.7798 -7865.3486 7755.6567 c-7861.123 7753.5967 -7858.1914 7749.1313 -7858.1631 7744.4014 c-7858.1631 7744.4014 l-7858.1338 7744.2681 -7858.2358 7744.1353 -7858.3638 7744.1226 c-7858.5039 7744.106 -7858.6318 7744.1978 -7858.647 7744.3359 c-7858.647 7744.3359 lb-7852.9414 7749.0186 m-7853.0425 7749.1826 -7853.1162 7749.3838 -7853.2622 7749.4834 c-7856.0806 7751.3911 -7858.979 7752.6313 -7861.8857 7754.1338 c-7862.0513 7754.2095 -7862.1118 7754.4185 -7862.0322 7754.5713 c-7861.9521 7754.7231 -7861.7559 7754.7798 -7861.5903 7754.7046 c-7858.439 7753.3242 -7854.3135 7752.501 -7852.6738 7749.1802 c-7852.6294 7749.1118 -7852.646 7749.0151 -7852.7271 7748.9658 c-7852.7969 7748.9199 -7852.8975 7748.9497 -7852.9414 7749.0186 c-7852.9414 7749.0186 lb-7852.6606 7749.9185 m-7852.4438 7750.4302 -7852.144 7750.8906 -7852.0513 7751.436 c-7851.2192 7756.2778 -7851.1162 7761.0425 -7852.249 7765.688 c-7852.249 7765.688 l-7852.3423 7765.9536 -7852.2119 7766.2446 -7851.9438 7766.3394 c-7851.6782 7766.4346 -7851.3887 7766.313 -7851.2935 7766.0479 c-7849.2935 7760.812 -7849.8975 7754.7378 -7852.3711 7749.7842 c-7852.4063 7749.7007 -7852.4985 7749.6694 -7852.5825 7749.6919 c-7852.665 7749.728 -7852.6982 7749.835 -7852.6606 7749.9185 c-7852.6606 7749.9185 lb-7851.5361 7765.5942 m-7848.8994 7763.228 -7846.6826 7760.2529 -7845.8535 7756.7368 c-7845.8535 7756.7368 l-7845.7246 7756.1826 -7846.0742 7755.623 -7846.6426 7755.4902 c-7847.2002 7755.375 -7847.7583 7755.7246 -7847.8862 7756.2798 c-7848.5654 7759.5322 -7849.8721 7762.6738 -7851.7959 7765.3872 c-7851.7959 7765.3872 l-7851.8462 7765.4561 -7851.8345 7765.5586 -7851.77 7765.6206 c-7851.7002 7765.6704 -7851.5986 7765.6582 -7851.5361 7765.5942 c-7851.5361 7765.5942 lb-7836.3711 7758.1831 m-7837.7119 7753.8306 -7840.2598 7750.0698 -7843.6895 7747.1538 C-7843.7295 7747.0728 -7843.8247 7747.0327 -7843.9038 7747.0864 C-7843.9873 7747.1274 -7844.0127 7747.2207 -7843.9727 7747.3022 C-7843.9575 7747.7896 -7843.7153 7748.2334 -7843.4463 7748.5322 c-7838.4063 7754.1626 -7834.9902 7762.7202 -7837.3442 7769.9551 C-7837.0767 7764.4521 -7838.7246 7758.3018 -7842.1367 7753.6743 c-7843.1606 7752.27 -7844.7422 7752.1216 -7846.3086 7752.2031 C-7846.4033 7752.1895 -7846.4839 7752.2441 -7846.4966 7752.3374 c-7846.5103 7752.4194 -7846.4561 7752.5142 -7846.3633 7752.5254 C-7843.1489 7753.77 -7841.4878 7757.2246 -7840.085 7760.1953 c-7838.415 7763.7446 -7837.7026 7767.6392 -7838.0054 7771.501 C-7838.0454 7771.6782 -7838.1143 7773.3975 -7837.978 7773.4102 C-7837.8311 7773.4399 -7837.7095 7773.3442 -7837.6807 7773.1953 C-7837.6455 7773.0454 -7834.6431 7763.7993 -7836.3711 7758.1831 cb-7844.4863 7745.4922 m-7843.395 7741.6216 -7841.1094 7738.251 -7838.4834 7735.2383 c-7838.3311 7735.105 -7838.3154 7734.8872 -7838.4502 7734.7358 c-7838.5762 7734.6006 -7838.8047 7734.5825 -7838.9575 7734.7183 c-7842.3311 7737.333 -7843.4497 7741.5415 -7844.7959 7745.375 c-7844.7959 7745.375 l-7844.8262 7745.4658 -7844.7759 7745.5591 -7844.6982 7745.5874 c-7844.6094 7745.6191 -7844.5166 7745.5688 -7844.4863 7745.4922 c-7844.4863 7745.4922 lb-7838.5322 7770.1094 m-7838.6001 7770.0566 -7838.707 7770.083 -7838.749 7770.1514 C-7838.9639 7770.4751 -7840.6919 7772.52 -7841.3926 7773.1406 c-7846.1729 7777.395 -7849.5142 7781.9614 -7857.5391 7785.7231 c-7864.4521 7788.9648 -7867.1118 7791.5962 -7874.3862 7789.8262 c-7877.687 7789.0298 -7879.0322 7788.5322 -7880.4351 7783.4561 C-7881.9482 7777.2993 -7880.8682 7779.7842 -7881.085 7772.439 c-7881.2222 7767.6978 -7884.001 7756.4561 -7871.5254 7742.2598 C-7871.4209 7742.1489 -7871.4346 7741.9966 -7871.5342 7741.9082 C-7871.6338 7741.8032 -7871.7969 7741.8169 -7871.8862 7741.917 C-7877.5791 7746.7178 -7881.0239 7753.6582 -7882.3154 7760.9434 c-7883.2881 7766.4673 -7882.9199 7771.2505 -7882.6665 7777.6367 c-7882.5698 7780.0942 -7883.686 7787.0728 -7878.9102 7791.063 c-7875.3926 7794.001 -7870.3921 7793.5474 -7866.355 7792.1567 c-7860.7002 7790.2129 -7855.9727 7787.147 -7850.8721 7783.6094 c-7847.2666 7781.1255 -7839.2886 7771.2856 -7838.479 7770.3262 C-7838.4351 7770.2593 -7838.4502 7770.1514 -7838.5322 7770.1094 Cb-7873.0513 7757.3066 m-7872.1689 7756.5034 -7871.7026 7757.8462 -7871.4302 7758.6025 c-7871.1631 7759.3574 -7870.1895 7759.2505 -7870.5137 7759.5737 c-7870.8374 7759.8975 -7870.8374 7759.9526 -7871.3242 7759.52 c-7871.8086 7759.0879 -7871.8086 7759.7368 -7872.5654 7759.2505 c-7873.3198 7758.7632 -7873.6455 7757.8462 -7873.0513 7757.3066 cb-7865.6519 7761.9497 m-7865.3662 7761.5918 -7864.6807 7761.5728 -7864.4658 7761.895 c-7864.2505 7762.2202 -7863.3311 7762.2734 -7863.4946 7762.5967 c-7863.6543 7762.9224 -7863.6025 7763.1392 -7864.0879 7762.9224 c-7864.5742 7762.7056 -7864.4126 7763.2998 -7864.8975 7763.085 c-7865.3838 7762.8682 -7865.8687 7762.2202 -7865.6519 7761.9497 cb-7857.6079 7767.0801 m-7857.1206 7766.7559 -7855.8799 7767.5122 -7856.4727 7767.5122 c-7857.0679 7767.5122 -7856.311 7768.2681 -7856.853 7768.4839 c-7857.3911 7768.7002 -7857.2842 7768.4302 -7857.6079 7768.645 c-7857.9302 7768.8618 -7858.3638 7769.2402 -7858.5249 7768.4302 c-7858.686 7767.6191 -7858.3638 7767.6191 -7857.9858 7767.3506 c-7857.6079 7767.0801 -7857.6079 7767.0801 yb-7872.2407 7767.3506 m-7871.1079 7767.2422 -7871.8638 7767.9985 -7871.2695 7768.4839 c-7870.6743 7768.9702 -7869.9185 7769.6177 -7870.7295 7769.4009 c-7871.5391 7769.186 -7872.9966 7769.6719 -7872.9438 7768.5386 c-7872.8896 7767.4038 -7872.6338 7767.3872 -7872.2407 7767.3506 cb-7866.5713 7775.6118 m-7866.1025 7775.3442 -7866.6807 7775.7202 -7866.0303 7775.6118 c-7865.3838 7775.5039 -7864.7886 7775.6118 -7865.2207 7775.8286 c-7865.6519 7776.0449 -7866.3018 7776.1528 -7866.4639 7775.9897 c-7866.6255 7775.8286 -7866.9482 7775.8286 -7866.5713 7775.6118 cb-7857.0679 7775.1802 m-7857.479 7774.1802 -7856.0967 7774.4238 -7855.4482 7774.7466 c-7854.7998 7775.0728 -7853.8262 7774.478 -7854.4214 7774.9102 c-7855.0142 7775.3423 -7854.7998 7774.9102 -7855.3926 7775.2334 c-7855.9878 7775.5566 -7856.6895 7776.0986 -7857.0679 7775.1802 cb-7872.6743 7781.0674 m-7872.7222 7780.0762 -7871.8086 7780.9575 -7871.2695 7781.0122 c-7870.7295 7781.0674 -7870.0806 7781.0674 -7870.2441 7781.2817 c-7870.4038 7781.4985 -7870.459 7781.4985 -7871.1631 7781.7134 c-7871.8638 7781.9302 -7872.6191 7782.145 -7872.6743 7781.0674 cb-7873.1582 7775.6118 m-7874.0674 7775.9751 -7874.2935 7775.8818 -7874.563 7776.2056 c-7874.8345 7776.5298 -7875.1558 7777.2319 -7875.5361 7776.0986 c-7875.9126 7774.9634 -7875.4287 7773.7769 -7875.0479 7773.938 c-7874.6719 7774.1001 -7874.2935 7774.7466 -7873.8623 7774.9634 c-7873.4302 7775.1802 -7872.6191 7775.395 -7873.1582 7775.6118 cbUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 41)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7884.001 7794.001 m-7803.001 7794.001 L-7803.001 7689.001 L-7884.001 7689.001 L-7884.001 7794.001 Lnuuu0 O0 0 0 1 k-7865.8066 7706.4263 m-7866.0742 7704.6626 -7867.1606 7703.291 -7868.5249 7703.397 c-7869.8862 7703.5024 -7870.707 7705.0239 -7870.7441 7706.8071 c-7870.749 7707.0698 -7870.6753 7708.2446 -7870.6313 7708.478 C-7870.6382 7708.5825 -7870.6191 7708.6743 -7870.6113 7708.7808 c-7870.5142 7710.0254 -7869.3574 7711.3608 -7867.9414 7711.2505 c-7866.5254 7711.1406 -7865.4902 7709.8618 -7865.6367 7708.4727 c-7865.645 7708.4082 -7865.6958 7707.6265 -7865.707 7707.563 C-7865.6826 7707.2856 -7865.7598 7706.7266 -7865.8066 7706.4263 cf-7876.2646 7715.7334 m-7876.9951 7723.917 -7871.502 7723.1201 v-7868.3687 7722.019 -7869.4414 7719.1216 v-7869.6431 7717.752 -7871.7856 7716.4985 v-7872.1465 7716.2505 -7872.7642 7715.1025 v-7873.1294 7713.5986 -7874.519 7713.2983 v-7876.0767 7713.251 -7876.2646 7715.7334 vf-7850.7646 7724.4976 mF-7850.0767 7722.3418 m-7850.7856 7721.1934 -7853.8857 7721.6289 Y-7854.811 7721.689 -7855.3809 7721.1118 Y-7857.8398 7717.0918 -7861.0391 7717.8862 -7861.4087 7717.9937 C-7861.4102 7717.9873 L-7864.999 7718.605 -7865.2671 7723.604 V-7865.4922 7724.3833 -7866.335 7724.77 V-7869.27 7725.8618 -7869.3486 7727.209 V-7869.9009 7729.1162 -7867.6006 7729.7422 V-7865.6802 7730.2578 -7863.7886 7727.895 V-7862.6118 7726.6802 -7859.5767 7725.9399 V-7859.5728 7725.9536 L-7856.3599 7725.0464 -7854.6401 7725.5898 Y-7851.853 7726.7681 -7850.4063 7725.4014 Y-7848.6831 7723.7559 -7850.0767 7722.3418 Yf-7863.9839 7705.8794 m-7864.5854 7704.2007 -7864.2822 7702.478 -7863.0337 7701.9233 c-7861.7847 7701.3682 -7860.3394 7702.3169 -7859.459 7703.8682 c-7859.3286 7704.0962 -7858.8369 7705.1655 -7858.7642 7705.3911 C-7858.707 7705.479 -7858.6802 7705.5688 -7858.6367 7705.667 c-7858.1294 7706.8086 -7858.5127 7708.5313 -7859.811 7709.1079 c-7861.1094 7709.686 -7862.6289 7709.0527 -7863.1582 7707.7622 c-7863.1841 7707.7007 -7863.5078 7706.9888 -7863.5303 7706.9272 C-7863.6831 7706.6968 -7863.8818 7706.1665 -7863.9839 7705.8794 cf-7849.7134 7708.9321 m-7845.1807 7715.7822 -7850.3921 7717.6943 v-7853.6719 7718.2178 -7854.103 7715.1577 v-7854.5791 7713.8569 -7853.2905 7711.7358 v-7853.0913 7711.3457 -7853.0942 7710.041 v-7853.4863 7708.5454 -7852.4087 7707.6182 v-7851.0591 7706.8369 -7849.7134 7708.9321 vfUu-7824.7358 7758.1079 m-7824.3687 7756.3633 -7824.9058 7754.6968 -7826.2192 7754.3169 c-7827.5327 7753.938 -7828.835 7755.0762 -7829.4946 7756.7329 c-7829.5903 7756.978 -7829.9326 7758.103 -7829.9751 7758.3374 C-7830.0186 7758.4326 -7830.0327 7758.5249 -7830.063 7758.6289 c-7830.4097 7759.8271 -7829.7935 7761.481 -7828.4287 7761.875 c-7827.063 7762.27 -7825.6455 7761.437 -7825.2974 7760.0854 c-7825.2798 7760.021 -7825.0562 7759.271 -7825.043 7759.207 C-7824.9214 7758.9551 -7824.7983 7758.4058 -7824.7358 7758.1079 cf-7838.271 7762.6177 m-7841.8247 7770.0249 -7836.3999 7771.2065 v-7833.0806 7771.2759 -7833.0698 7768.1846 v-7832.7783 7766.8311 -7834.3442 7764.9082 v-7834.5942 7764.5464 -7834.77 7763.2544 v-7834.5854 7761.7192 -7835.7798 7760.9497 v-7837.2222 7760.3599 -7838.271 7762.6177 vf-7817.4658 7779.77 mF-7816.063 7777.9922 m-7816.3247 7776.6694 -7819.3809 7775.9888 Y-7820.2705 7775.7202 -7820.5991 7774.98 Y-7821.4927 7770.354 -7824.7671 7769.9751 -7825.1494 7769.9458 C-7825.1494 7769.9399 L-7828.7271 7769.2593 -7830.731 7773.8472 V-7831.2158 7774.4966 -7832.1426 7774.563 V-7835.2729 7774.5562 -7835.8174 7775.7896 V-7837.0049 7777.3818 -7835.0718 7778.7769 V-7833.4526 7779.9321 -7830.8535 7778.3823 V-7829.3247 7777.6582 -7826.2222 7778.0298 V-7826.2241 7778.0425 L-7822.897 7778.3218 -7821.4766 7779.4326 Y-7819.2798 7781.5151 -7817.4463 7780.7441 Y-7815.2559 7779.8066 -7816.063 7777.9922 Yf-7822.8374 7758.2358 m-7822.8135 7756.4521 -7821.9263 7754.9458 -7820.561 7754.8638 c-7819.1953 7754.7808 -7818.1743 7756.1777 -7817.895 7757.939 c-7817.8545 7758.1978 -7817.7671 7759.3711 -7817.7783 7759.6094 C-7817.7559 7759.7114 -7817.7622 7759.8042 -7817.7559 7759.9126 c-7817.6816 7761.1602 -7818.645 7762.6367 -7820.063 7762.7222 c-7821.4814 7762.8071 -7822.6831 7761.6831 -7822.7246 7760.2881 c-7822.7271 7760.2222 -7822.7822 7759.4409 -7822.7798 7759.375 C-7822.8442 7759.105 -7822.8433 7758.541 -7822.8374 7758.2358 cf-7811.019 7765.563 m-7809.1782 7773.5688 -7814.7271 7773.5313 v-7817.9839 7772.8696 -7817.3159 7769.8521 v-7817.3042 7768.4673 -7815.3535 7766.9326 v-7815.0278 7766.6382 -7814.5742 7765.415 v-7814.4175 7763.877 -7813.083 7763.3882 v-7811.5454 7763.1279 -7811.019 7765.563 vfUU1 Ap-7884.001 7794.001 m-7884.001 7689.001 L-7803.001 7689.001 L-7803.001 7794.001 L-7884.001 7794.001 LnUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 42)0 Au0 Ap0 J 0 j 1 w 4 M []0 d0 XR-7857.4614 7767.0854 m-7885.001 7767.0854 L-7885.001 7794.625 L-7857.4614 7794.625 L-7857.4614 7767.0854 Ln0 O0 0.55 1 0.12 k-7871.7598 7785.3633 m-7871.7598 7795.001 L-7870.6353 7795.001 L-7870.6353 7785.3633 L-7871.7598 7785.3633 Lf0 0.55 1 0.3 k-7875.4238 7780.877 m-7874.3105 7779.1558 -7870.8818 7777.4575 -7866.4966 7777.4575 c-7862.1162 7777.4575 -7858.6143 7779.1074 -7857.5718 7780.8745 C-7857.5718 7780.8745 L-7858.6143 7782.6006 -7862.1162 7784.2983 -7866.4966 7784.2983 c-7870.875 7784.2983 -7874.3247 7782.562 -7875.4238 7780.877 CfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 45)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7885.001 7751.9185 m-7885.001 7795.001 L-7798.2222 7795.001 L-7798.2222 7751.9185 L-7885.001 7751.9185 Lnuu0 O0 0 0 1 k-7825.2222 7781.2368 m-7825.2222 7789.0742 L-7813.2222 7782.145 L-7801.2222 7775.2178 L-7813.2222 7768.2896 L-7825.2222 7761.3618 L-7825.2222 7769.4834 L-7883.9351 7755.7178 L-7870.9878 7774.8032 L-7885.001 7795.001 L-7825.2222 7781.2368 Lf0 1 1 0.1 k0 R0 0 0 1 K-7823.2222 7778.2368 m-7823.2222 7786.0742 L-7811.2222 7779.145 L-7799.2222 7772.2178 L-7811.2222 7765.2896 L-7823.2222 7758.3618 L-7823.2222 7766.4834 L-7881.9351 7752.7178 L-7867.2759 7772.3599 L-7881.9351 7792.001 L-7823.2222 7778.2368 LbUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 5)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7726.3999 7795.001 m-7726.3999 7781.4209 L-7885.001 7781.4209 L-7885.001 7795.001 L-7726.3999 7795.001 Lnuu0 O0.285 0.228 0.171 0 k-7741.0791 7793.4849 m-7741.043 7794.6895 L-7727.5103 7795.5186 -7726.8423 7794.2822 v-7726.7446 7794.1025 -7726.647 7793.7153 -7726.5615 7793.1934 C-7728.585 7793.8247 -7738.291 7793.5718 -7741.0791 7793.4849 Cf0.44 0.352 0.264 0 k-7741.4063 7782.0239 m-7741.3711 7783.2681 L-7738.4922 7783.0498 -7728.1919 7782.3169 -7726.543 7782.8657 C-7726.7041 7782.2192 -7726.9199 7781.7646 -7727.2046 7781.6162 c-7728.8311 7780.7666 -7741.4063 7782.0239 Yf0.145 0.116 0.087 0 k-7741.3711 7783.2681 m-7741.0791 7793.4849 L-7738.291 7793.5718 -7728.585 7793.8247 -7726.5615 7793.1934 C-7726.1519 7790.7778 -7725.9263 7785.3608 -7726.543 7782.8657 C-7728.1919 7782.3169 -7738.4922 7783.0498 -7741.3711 7783.2681 CfUu0.155 0.124 0.093 0 k-7766.938 7787.2734 m-7765.8975 7787.6567 L-7747.0737 7783.147 L-7747.4814 7782.3154 L-7766.3638 7784.7246 L-7767.2529 7785.0063 L-7767.6514 7784.894 -7768.1934 7784.8247 V-7767.6094 7785.2378 -7767.1431 7786.1406 -7766.938 7787.2734 Cfu0.085 0.068 0.051 0 k-7771.7998 7791.6665 m-7772.5986 7791.7222 -7769.7495 7791.665 Y-7770.3486 7791.0186 -7770.771 7789.8208 -7770.811 7788.438 c-7770.8174 7788.2246 -7770.811 7788.0186 -7770.7998 7787.814 C-7771.0415 7787.707 -7771.0918 7787.7734 -7771.6294 7787.5649 C-7771.001 7791.6118 -7771.7998 7791.6665 vf0.305 0.244 0.183 0 k-7770.3447 7784.8682 m-7770.5537 7784.811 -7770.4946 7786.9312 Y-7769.479 7787.7593 L-7767.8369 7786.9438 L-7766.938 7787.2734 L-7767.1431 7786.1406 -7767.6094 7785.2378 -7768.1934 7784.8247 C-7768.6094 7784.772 -7769.8745 7784.7998 -7770.3447 7784.8682 CfU0.115 0.092 0.069 0 k-7766.938 7787.2734 m-7767.8369 7786.9438 L-7769.479 7787.7593 L-7770.4946 7786.9312 L-7770.7935 7787.709 -7770.7998 7787.814 V-7769.5142 7788.3794 -7768.1841 7788.7407 -7766.8398 7788.9263 C-7766.7905 7788.728 -7766.7847 7788.543 -7766.7905 7788.3374 c-7766.7998 7787.9722 -7766.8223 7787.6182 -7766.938 7787.2734 Cf0.41 0.328 0.246 0 k-7747.4521 7783.397 m-7749.3774 7784.6431 -7758.3862 7790.0991 -7766.8398 7788.9263 C-7766.9038 7790.0938 -7767.249 7791.0913 -7767.7505 7791.6641 C-7767.1895 7791.6626 L-7746.7407 7794.7559 L-7747.0366 7784.4263 L-7747.0737 7783.147 L-7747.2046 7783.2378 -7747.4521 7783.397 vf0.395 0.316 0.237 0 k-7770.811 7788.438 m-7770.771 7789.8208 -7770.3486 7791.0186 -7769.7495 7791.665 C-7767.6816 7791.6641 L-7767.1782 7791.0913 -7766.8223 7790.0718 -7766.8398 7788.9263 C-7768.1841 7788.7407 -7769.5142 7788.3794 -7770.7998 7787.814 C-7770.811 7788.0186 -7770.8174 7788.2246 -7770.811 7788.438 cfUu0 0 0 0.11 k-7741.2646 7782.2017 m-7740.2417 7782.0352 L-7741.2646 7782.2017 L-7741.2646 7782.2017 Lf0 0 0 0.34 k-7747.4814 7782.3154 m-7747.0737 7783.147 L-7745.6719 7782.9185 L-7744.5239 7782.7319 L-7742.6758 7782.4312 L-7741.2646 7782.2017 L-7740.2417 7782.0352 L-7740.2959 7781.7178 -7740.3682 7781.4985 -7740.4658 7781.4209 C-7747.4814 7782.3154 Lf0 0 0 0.32 k-7745.8047 7787.207 m-7746.0415 7794.8618 L-7740.7153 7795.001 L-7739.7271 7791.5151 -7740.1826 7787.1553 V-7745.8047 7787.207 LfU0.025 0.02 0.015 0 k-7739.3232 7784.3857 m-7736.3735 7784.9199 -7733.2407 7785.1606 -7730.3169 7784.3618 c-7730.2866 7784.3506 -7730.2759 7784.3184 -7730.2881 7784.2974 c-7730.2886 7784.2666 -7730.3198 7784.2559 -7730.3423 7784.2559 c-7733.2422 7785.0649 -7736.375 7784.8247 -7739.3047 7784.2783 c-7739.3262 7784.2798 -7739.3574 7784.291 -7739.3682 7784.3232 c-7739.3662 7784.3442 -7739.355 7784.375 -7739.3232 7784.3857 c-7739.3232 7784.3857 lf-7737.8374 7783.3081 m-7737.73 7783.3794 -7737.6318 7783.4946 -7737.5239 7783.5024 c-7733.7886 7783.833 -7730.1631 7783.7817 -7726.4751 7783.665 c-7726.4526 7783.665 -7726.4214 7783.6431 -7726.4214 7783.6216 c-7726.4214 7783.5889 -7726.4561 7783.5688 -7726.4766 7783.5688 c-7729.3232 7783.6826 -7732.1406 7783.7002 -7735.0049 7783.5361 c-7735.9346 7783.4766 -7736.9087 7783.7407 -7737.7783 7783.2207 c-7737.7998 7783.2114 -7737.8311 7783.2114 -7737.8511 7783.2334 c-7737.8623 7783.2559 -7737.8599 7783.2881 -7737.8374 7783.3081 c-7737.8374 7783.3081 lf-7733.3735 7785.3682 m-7731.5103 7786.6802 -7729.3022 7787.3745 -7727.1006 7787.8872 c-7727.0688 7787.897 -7727.0479 7787.8857 -7727.0366 7787.854 c-7727.0278 7787.8208 -7727.0498 7787.8018 -7727.0703 7787.7905 c-7729.2622 7787.2666 -7731.459 7786.604 -7733.311 7785.2808 c-7733.3442 7785.2598 -7733.375 7785.272 -7733.3857 7785.2935 c-7733.4063 7785.3154 -7733.395 7785.3462 -7733.3735 7785.3682 c-7733.3735 7785.3682 lf-7738.9326 7792.0566 m-7736.73 7792.5713 -7734.5303 7793.0303 -7732.2798 7793.2759 c-7732.2598 7793.2856 -7732.2295 7793.2642 -7732.2295 7793.2422 c-7732.2192 7793.2095 -7732.2417 7793.1782 -7732.2734 7793.1792 c-7734.5127 7792.8818 -7736.731 7792.5186 -7738.9126 7791.9502 c-7738.9351 7791.9521 -7738.9678 7791.9634 -7738.9766 7791.9946 c-7738.9761 7792.0161 -7738.9658 7792.0479 -7738.9326 7792.0566 c-7738.9326 7792.0566 lf-7738.439 7791.3608 m-7736.3462 7792.1978 -7734.1025 7791.9302 -7731.9023 7791.9634 c-7731.8711 7791.9614 -7731.8506 7791.9399 -7731.8511 7791.9087 c-7731.853 7791.875 -7731.8735 7791.856 -7731.895 7791.856 c-7734.0938 7791.8442 -7736.3374 7792.1001 -7738.4214 7791.2534 c-7738.4438 7791.2544 -7738.4751 7791.2666 -7738.4839 7791.2974 c-7738.4839 7791.3184 -7738.4727 7791.3511 -7738.439 7791.3608 c-7738.439 7791.3608 lf-7737.707 7792.7056 m-7736.3838 7792.752 -7735.1514 7792.5474 -7733.8271 7792.2095 c-7733.3599 7792.1001 -7732.9199 7792.2271 -7732.4614 7792.2134 c-7731.8975 7792.1978 l-7731.8745 7792.1968 -7731.8638 7792.186 -7731.854 7792.1743 c-7731.8345 7792.1528 -7731.8447 7792.1216 -7731.8662 7792.1001 c-7732.063 7791.9458 l-7732.0742 7791.9458 -7732.0854 7791.936 -7732.0967 7791.936 c-7732.501 7791.9482 l-7733.9551 7792.1919 -7735.4575 7792.6719 -7736.8926 7792.0742 c-7736.9263 7792.0649 -7736.9575 7792.0864 -7736.9678 7792.1079 c-7736.9678 7792.1401 -7736.9551 7792.1606 -7736.9346 7792.1714 c-7735.647 7792.7002 -7734.1719 7792.4761 -7732.8823 7792.0552 c-7732.0918 7792.043 L-7732.125 7792.0337 L-7731.9287 7792.188 L-7731.8994 7792.0903 L-7732.4639 7792.1074 l-7732.9326 7792.1406 -7733.3857 7791.9839 -7733.8398 7792.104 c-7735.1553 7792.4614 -7736.3975 7792.6255 -7737.7104 7792.5991 c-7737.7422 7792.6001 -7737.7646 7792.6216 -7737.7622 7792.6538 c-7737.7622 7792.686 -7737.7407 7792.7065 -7737.707 7792.7056 c-7737.707 7792.7056 lf-7738.5718 7793.061 m-7735.8721 7794.2207 -7732.9023 7793.5713 -7730.1279 7793.1826 c-7729.7842 7793.2896 l-7729.7622 7793.2993 -7729.7422 7793.2881 -7729.7217 7793.2666 c-7729.7104 7793.2446 -7729.7222 7793.2134 -7729.7422 7793.2026 c-7730.0806 7793.0103 l-7732.7759 7792.3926 -7735.5391 7792.7817 -7738.271 7792.7856 c-7738.3022 7792.7871 -7738.3242 7792.8086 -7738.3232 7792.8398 c-7738.3198 7792.8726 -7738.2993 7792.8926 -7738.269 7792.8926 c-7735.6743 7792.936 -7733.0303 7792.4438 -7730.4727 7793.0742 c-7729.7959 7793.2896 L-7729.7534 7793.1919 L-7730.1406 7793.0864 l-7732.9063 7793.4434 -7735.8423 7794.1353 -7738.5322 7792.9751 c-7738.5542 7792.9658 -7738.5854 7792.9658 -7738.5967 7792.9985 c-7738.606 7793.02 -7738.6055 7793.0513 -7738.5718 7793.061 c-7738.5718 7793.061 lf-7735.6895 7786.395 m-7734.395 7786.9009 -7732.9839 7786.647 -7731.6807 7786.3442 c-7731.647 7786.3423 -7731.6367 7786.3208 -7731.6382 7786.2896 c-7731.6514 7786.2578 -7731.6719 7786.2466 -7731.7041 7786.249 c-7732.9985 7786.5313 -7734.3774 7786.8159 -7735.6514 7786.2974 c-7735.6831 7786.2881 -7735.7153 7786.2993 -7735.7246 7786.3311 c-7735.7222 7786.353 -7735.7119 7786.3857 -7735.6895 7786.395 c-7735.6895 7786.395 lf-7736.1406 7788.2207 m-7734.2271 7788.6895 -7732.3154 7789.104 -7730.355 7789.3247 c-7730.3247 7789.3345 -7730.3022 7789.313 -7730.2935 7789.2808 c-7730.2959 7789.2598 -7730.3169 7789.229 -7730.3374 7789.229 c-7732.2959 7789.0078 -7734.2095 7788.5825 -7736.1206 7788.1138 c-7736.1431 7788.1162 -7736.1743 7788.1265 -7736.1841 7788.1582 c-7736.1841 7788.1802 -7736.1729 7788.2114 -7736.1406 7788.2207 c-7736.1406 7788.2207 lf-7736.9346 7790.6353 m-7734.499 7791.4614 -7731.8657 7791.0552 -7729.3462 7791.0879 c-7729.3135 7791.0879 -7729.2935 7791.0674 -7729.2935 7791.0337 c-7729.2959 7791.0122 -7729.3169 7790.9927 -7729.3486 7790.9927 c-7731.8574 7790.917 -7734.4814 7791.3857 -7736.895 7790.5273 c-7736.9287 7790.5278 -7736.959 7790.5391 -7736.9697 7790.561 c-7736.9678 7790.5918 -7736.957 7790.625 -7736.9346 7790.6353 c-7736.9346 7790.6353 lf-7732.0542 7791.8506 m-7730.6582 7792.5454 -7729.0513 7792.4038 -7727.5342 7792.4673 c-7727.5024 7792.4658 -7727.4834 7792.4438 -7727.4834 7792.4126 c-7727.4839 7792.3911 -7727.5054 7792.3599 -7727.5366 7792.3599 c-7729.0142 7792.2207 -7730.6494 7792.5239 -7732.0049 7791.7622 c-7732.0366 7791.7534 -7732.0688 7791.7642 -7732.0791 7791.7866 c-7732.0879 7791.8081 -7732.0767 7791.8398 -7732.0542 7791.8506 c-7732.0542 7791.8506 lf-7731.3423 7788.4258 m-7730.3926 7788.3975 -7729.4346 7788.3706 -7728.4849 7788.3433 c-7728.4526 7788.3423 -7728.4321 7788.3208 -7728.4346 7788.2886 c-7728.4346 7788.2559 -7728.4561 7788.2358 -7728.4878 7788.2368 c-7729.4375 7788.2642 -7730.3975 7788.291 -7731.3462 7788.3184 c-7731.3774 7788.3184 -7731.3975 7788.3423 -7731.3975 7788.3735 c-7731.3975 7788.4048 -7731.3745 7788.4263 -7731.3423 7788.4258 c-7731.3423 7788.4258 lf-7729.1602 7786.0366 m-7728.6895 7786.0649 -7728.2095 7786.0728 -7727.7393 7786.0918 c-7727.7178 7786.0913 -7727.686 7786.0688 -7727.687 7786.0376 c-7727.687 7786.0049 -7727.7104 7785.9849 -7727.7422 7785.9849 c-7728.2119 7785.9878 -7728.6826 7785.938 -7729.1519 7785.9399 c-7729.1841 7785.9302 -7729.2031 7785.9521 -7729.2134 7785.9849 c-7729.2134 7786.0161 -7729.1919 7786.0376 -7729.1602 7786.0366 c-7729.1602 7786.0366 lf-7736.9702 7788.2354 m-7736.5698 7788.5112 -7736.1255 7788.6802 -7735.6455 7788.751 c-7735.6118 7788.7617 -7735.5918 7788.7393 -7735.5806 7788.7178 c-7735.5713 7788.686 -7735.5938 7788.6543 -7735.6162 7788.6543 c-7736.0854 7788.5728 -7736.5186 7788.4033 -7736.9214 7788.1479 c-7736.9526 7788.1382 -7736.9858 7788.1392 -7736.9951 7788.1714 c-7737.0049 7788.1934 -7736.9927 7788.2246 -7736.9702 7788.2354 c-7736.9702 7788.2354 lf-7738.1914 7794.0854 m-7735.7354 7794.5278 -7733.2993 7795.0015 -7730.7998 7794.7271 c-7730.7783 7794.7271 -7730.7578 7794.7046 -7730.7583 7794.6719 c-7730.7583 7794.6406 -7730.7798 7794.6191 -7730.8022 7794.6191 c-7733.291 7794.8735 -7735.7354 7794.4849 -7738.1729 7793.978 c-7738.1934 7793.979 -7738.2266 7793.9902 -7738.2354 7794.022 c-7738.2354 7794.043 -7738.2222 7794.0762 -7738.1914 7794.0854 c-7738.1914 7794.0854 lf0.195 0.156 0.117 0 k-7738.1665 7782.645 m-7735.7974 7782.2681 -7733.4063 7782.3481 -7731.0303 7782.5903 c-7730.9985 7782.5889 -7730.9766 7782.5674 -7730.9766 7782.5361 c-7730.979 7782.5142 -7731.001 7782.4834 -7731.022 7782.4834 c-7733.4087 7782.2422 -7735.791 7782.1606 -7738.1694 7782.5391 c-7738.2031 7782.5391 -7738.2222 7782.561 -7738.2222 7782.5942 c-7738.2207 7782.6255 -7738.2002 7782.647 -7738.1665 7782.645 c-7738.1665 7782.645 lf0.335 0.268 0.201 0 k-7737.4351 7782.1118 m-7734.9287 7782.1162 -7732.415 7782.2778 -7729.9185 7781.897 c-7729.8862 7781.895 -7729.8657 7781.8735 -7729.8662 7781.8423 c-7729.8682 7781.8086 -7729.8906 7781.7896 -7729.9214 7781.7896 c-7732.4185 7782.1704 -7734.9302 7782.0298 -7737.438 7782.0063 c-7737.4609 7782.0063 -7737.4814 7782.0278 -7737.479 7782.0601 c-7737.479 7782.0918 -7737.4575 7782.1128 -7737.4351 7782.1118 c-7737.4351 7782.1118 lf0.205 0.164 0.123 0 k-7738.9766 7782.3262 m-7737.5039 7782.6689 -7736.0078 7782.4033 -7734.5391 7782.2207 c-7734.5078 7782.2207 -7734.4878 7782.1978 -7734.499 7782.1665 c-7734.501 7782.1353 -7734.522 7782.1138 -7734.5542 7782.1255 c-7736.0103 7782.2847 -7737.4966 7782.583 -7738.9482 7782.2192 c-7738.979 7782.2207 -7739.0103 7782.2329 -7739.0103 7782.2642 c-7739.019 7782.2856 -7738.9985 7782.3169 -7738.9766 7782.3262 c-7738.9766 7782.3262 lf-7732.354 7781.7954 m-7731.1982 7781.9224 -7730.0278 7781.8154 -7728.8926 7781.5903 c-7728.8721 7781.5786 -7728.8511 7781.5566 -7728.8623 7781.5249 c-7728.8623 7781.5034 -7728.895 7781.4834 -7728.917 7781.4946 c-7730.0513 7781.7407 -7731.1919 7781.7944 -7732.3462 7781.689 c-7732.3799 7781.6895 -7732.3994 7781.7114 -7732.4097 7781.7329 c-7732.4087 7781.7646 -7732.3862 7781.7856 -7732.354 7781.7954 c-7732.354 7781.7954 lf0.335 0.268 0.201 0 k-7739.269 7784.4482 m-7737.9214 7785.189 -7736.3071 7784.5986 -7734.855 7784.6426 c-7734.8223 7784.6406 -7734.8022 7784.6191 -7734.8022 7784.5864 c-7734.8047 7784.5654 -7734.8262 7784.5454 -7734.8574 7784.5454 c-7736.2886 7784.4902 -7737.8833 7785.0806 -7739.2178 7784.3511 c-7739.2383 7784.3398 -7739.27 7784.3521 -7739.291 7784.3745 c-7739.3018 7784.396 -7739.2886 7784.4282 -7739.269 7784.4482 c-7739.269 7784.4482 lf-7737.895 7786.5649 m-7735.6719 7787.0454 -7733.3906 7786.6167 -7731.1514 7786.563 c-7731.1182 7786.562 -7731.0986 7786.5391 -7731.0986 7786.5078 c-7731.1006 7786.4863 -7731.1318 7786.4673 -7731.1519 7786.4673 c-7733.3838 7786.478 -7735.6519 7786.981 -7737.875 7786.4575 c-7737.8975 7786.4575 -7737.9297 7786.4688 -7737.938 7786.5024 c-7737.938 7786.5234 -7737.9263 7786.5552 -7737.895 7786.5649 c-7737.895 7786.5649 lf-7732.0278 7783.1406 m-7730.3506 7783.9697 -7728.499 7784.5024 -7726.603 7784.3618 c-7726.5718 7784.3618 -7726.5518 7784.3394 -7726.5537 7784.3071 c-7726.5537 7784.2759 -7726.5742 7784.2544 -7726.6079 7784.2559 c-7728.4814 7784.417 -7730.3198 7783.8608 -7731.9878 7783.0552 c-7732.0078 7783.0454 -7732.0415 7783.0454 -7732.0513 7783.0786 c-7732.0615 7783.1001 -7732.0615 7783.1313 -7732.0278 7783.1406 c-7732.0278 7783.1406 lfu0.5 0.85 1 0.45 k-7885.001 7789.9087 m-7885.0254 7790.4888 -7884.5674 7791.188 -7883.167 7791.9902 C-7882.853 7792.0034 -7881.395 7792.0239 -7879.0898 7792.0498 C-7879.0898 7789.8223 L-7881.1382 7789.8462 -7883.1182 7789.8872 -7885.001 7789.9087 Cf-7884.5098 7788.9697 m-7879.0898 7788.8447 L-7879.0898 7787.8154 L-7882.645 7787.959 L-7883.8154 7788.3306 -7884.5098 7788.9697 Vf0.5 0.85 1 0.32 k-7879.0898 7788.8257 m-7884.4751 7788.9438 L-7884.77 7789.2153 -7884.9858 7789.5566 -7885.001 7789.9282 C-7883.1182 7789.9063 -7881.1382 7789.8857 -7879.0898 7789.8618 C-7879.0898 7788.8257 Lf0.5 0.85 1 0.45 k-7774.1514 7788.6177 m-7852.3594 7789.5415 -7879.1089 7789.8423 V-7879.1089 7792.0498 L-7862.8154 7792.2329 -7803.9902 7792.707 Y-7769.7495 7791.665 L-7770.4575 7788.5688 L-7774.1514 7788.6177 Lf0.5 0.85 1 0.12 k-7879.1089 7787.8154 m-7879.1089 7788.8447 L-7770.4263 7787.001 L-7770.3838 7784.8638 L-7803.6558 7784.7134 L-7879.1089 7787.8154 Lfu0.065 0.052 0.039 0 k-7747.0737 7783.147 m-7747.0366 7784.4263 L-7747.2959 7783.1177 L-7765.8975 7787.6567 L-7766.938 7787.2734 L-7766.8799 7787.606 -7766.8398 7787.9575 -7766.8311 7788.3232 c-7766.8247 7788.5288 -7766.8286 7788.729 -7766.8398 7788.9263 C-7758.3862 7790.0991 -7748.9639 7785.6719 -7747.0366 7784.4263 C-7746.7407 7794.7559 L-7746.0415 7794.8618 L-7745.8047 7787.207 L-7740.1826 7787.1553 L-7740.0903 7785.0142 -7740.0718 7783.022 -7740.2417 7782.0352 C-7747.0737 7783.147 Lf0.4 0.7 1 0 k-7770.4575 7788.5889 m-7770.4263 7786.981 L-7879.1089 7788.8257 L-7879.1089 7789.8618 L-7852.3594 7789.561 -7770.4575 7788.5889 YfUU0.025 0.02 0.015 0 k-7734.7354 7791.0298 m-7734.7354 7791.063 -7734.7134 7791.0825 -7734.6807 7791.0825 c-7731.6719 7791.1138 -7729.4214 7790.9458 -7726.415 7790.8599 C-7726.4097 7790.7666 L-7729.3262 7790.8706 -7731.7617 7791.0078 -7734.6846 7790.9751 C-7734.7178 7790.9766 -7734.7358 7790.9985 -7734.7354 7791.0298 Cf-7726.3999 7790.7666 m-7726.4087 7790.7446 L-7726.4097 7790.7666 L-7726.4063 7790.7666 -7726.4038 7790.7666 -7726.3999 7790.7666 Cf-7730.4497 7789.4238 m-7731.4463 7789.293 -7732.3398 7789.7666 -7733.2119 7790.1978 C-7733.2446 7790.209 -7733.2534 7790.2407 -7733.2422 7790.272 C-7733.231 7790.2935 -7733.1982 7790.3032 -7733.1782 7790.291 c-7732.3262 7789.8306 -7731.4321 7789.4209 -7730.4678 7789.52 c-7729.1089 7789.6626 -7727.9038 7790.375 -7726.5254 7790.4536 C-7726.4463 7790.3599 L-7728.041 7790.2666 -7728.8657 7789.623 -7730.4497 7789.4238 cfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 50)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7884.001 7794.001 m-7756.8774 7794.001 L-7756.8774 7746.415 L-7884.001 7746.415 L-7884.001 7794.001 Lnu*u0 O0.9529 0.949 0.1961 0.0745 k-7857.7935 7778.4175 m-7857.8242 7778.2681 L-7859.9858 7772.3647 -7860.9438 7769.6382 -7861.2759 7768.2896 c-7861.3662 7768.2896 L-7861.6958 7769.6079 -7862.7759 7772.335 -7864.9678 7778.2681 c-7864.9966 7778.4175 L-7857.7935 7778.4175 lf1 D-7868.1182 7786.9678 m-7869.6191 7790.5376 -7870.3999 7792.7095 -7868.1182 7792.9175 c-7868.1182 7793.9678 L-7870.7002 7793.938 -7873.5806 7793.9175 -7876.3423 7793.9175 c-7880.0654 7793.9175 -7882.5278 7793.938 -7884.001 7793.9678 c-7884.001 7792.9175 L-7882.1074 7792.7095 -7881.0542 7790.5679 -7873.5518 7773.5034 c-7861.6958 7746.415 L-7859.8638 7746.415 L-7848.1582 7773.5034 L-7840.8047 7790.5078 -7839.7246 7792.7095 -7837.8896 7792.9175 c-7837.8896 7793.9678 L-7839.5142 7793.938 -7841.917 7793.9175 -7845.5767 7793.9175 c-7848.5498 7793.9175 -7851.6694 7793.938 -7854.7031 7793.9678 c-7854.7031 7792.9175 L-7852.4814 7792.7095 -7853.3223 7790.5078 -7854.7622 7786.9678 C-7868.1182 7786.9678 lf*U*u0 D-7813.0767 7762.0815 m-7813.0767 7758.4722 -7815.354 7756.0952 -7819.1294 7756.0952 c-7820.2383 7756.0952 -7821.0767 7756.2158 -7821.5278 7756.2456 c-7821.5278 7768.5479 L-7820.8682 7768.6089 -7820.209 7768.6089 -7819.7295 7768.6089 c-7818.2007 7768.6089 -7816.7031 7768.1274 -7815.6846 7767.4058 c-7814.395 7766.5337 -7813.0767 7764.7886 -7813.0767 7762.1426 C-7813.0767 7762.0815 lf1 D-7832.0806 7766.3926 m-7832.0806 7750.645 -7832.0806 7748.4287 -7834.5425 7748.2783 c-7834.5425 7747.3184 L-7833.0425 7747.2593 -7830.3174 7747.2002 -7827.5674 7747.1694 c-7825.6543 7747.1089 -7822.395 7747.019 -7820.1489 7746.978 c-7816.5825 7746.978 -7813.5854 7747.4263 -7811.0054 7748.2632 c-7806.3535 7749.8481 -7801.9702 7753.853 -7801.9702 7761.6606 c-7801.9702 7766.7441 -7804.4014 7770.3198 -7806.5039 7772.061 c-7807.583 7773.022 -7808.814 7773.833 -7809.7754 7774.313 c-7809.7754 7774.4634 L-7807.5239 7777.4922 -7805.603 7780.063 -7799.3911 7788.6431 c-7797.501 7791.0649 -7795.9102 7792.7393 -7794.7407 7792.978 c-7794.7407 7794.001 L-7796.6606 7794.001 -7799.001 7793.8857 -7801.1294 7793.8857 c-7803.3521 7793.8857 -7804.853 7794.001 -7806.4434 7794.001 c-7807.6738 7794.001 -7808.7246 7793.9409 -7809.5039 7793.2729 c-7813.0161 7787.8481 -7816.9126 7781.7559 -7820.1182 7776.7144 c-7820.5078 7776.7144 -7820.9575 7776.7144 -7821.5278 7776.7144 c-7821.5278 7779.2856 L-7821.5278 7790.5273 -7821.4375 7792.769 -7819.1895 7792.978 c-7819.1895 7793.9702 L-7820.6289 7793.9409 -7823.9199 7793.915 -7826.7002 7793.915 c-7829.9297 7793.915 -7832.8926 7793.9409 -7834.5127 7793.9702 c-7834.5127 7792.978 L-7832.0518 7792.769 -7832.0806 7790.5273 -7832.0806 7773.5918 C-7832.0806 7766.3926 lf*U*u0 D-7781.457 7773.5938 m-7781.457 7790.4946 -7781.457 7792.6489 -7784.2842 7792.978 C-7784.2842 7793.9702 l-7782.3887 7793.9409 -7779.0542 7793.915 -7775.7822 7793.915 c-7772.6294 7793.915 -7769.5698 7793.9409 -7767.2886 7793.9702 C-7767.2886 7792.978 l-7770.2583 7792.978 -7770.2886 7790.5249 -7770.2886 7773.5938 C-7770.2886 7756.1519 L-7762.8198 7756.1519 l-7759.999 7756.1519 -7758.5303 7756.96 -7757.8999 7759.2632 C-7756.9082 7759.2632 l-7756.9082 7754.4702 -7756.8774 7750.415 -7756.8774 7747.1714 c-7761.3486 7747.2017 -7766.749 7747.2319 -7772.061 7747.2319 C-7779.7446 7747.2319 l-7784.5542 7747.2319 -7789.9966 7747.2017 -7794.9614 7747.1714 c-7794.9614 7750.3857 -7794.9326 7754.4702 -7794.9326 7759.2632 C-7793.9082 7759.2632 l-7793.3662 7757.1094 -7791.771 7756.1519 -7788.9438 7756.1519 C-7781.457 7756.1519 l-7781.457 7773.5938 Lf*UUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 6)0 Au1 Ap0 J 0 j 1 w 4 M []0 d0 XR-7884.7505 7771.001 m-7884.7505 7795.001 L-7874.7505 7795.001 L-7874.7505 7771.001 L-7884.7505 7771.001 Ln0 Ap0 O1 g-7874.7505 7773.001 m-7875.0703 7773.001 -7875.3862 7773.019 -7875.6982 7773.0479 c-7877.5889 7773.2266 -7879.3198 7773.9351 -7880.7559 7775.0186 c-7882.2534 7776.147 -7883.4209 7777.6826 -7884.0942 7779.4639 c-7884.5127 7780.5649 -7884.7505 7781.7534 -7884.7505 7783.001 c-7884.7505 7784.8623 -7884.2319 7786.6001 -7883.3462 7788.0918 c-7881.603 7791.0278 -7878.4102 7793.001 -7874.7505 7793.001 C-7874.7505 7773.001 Lf0 R0 G1 J 1 j 0.5 w-7874.7505 7792.6826 m-7877.7798 7791.7266 -7880.6079 7790.0679 -7883.3462 7788.0918 CS-7874.7505 7787.0498 m-7877.9009 7784.644 -7880.9575 7781.9136 -7884.0942 7779.4639 CS-7880.7559 7775.0186 m-7878.6914 7776.1089 -7876.7026 7777.4673 -7874.7505 7778.9575 CS-7875.6982 7773.0479 m-7875.3818 7773.1313 -7875.063 7773.2153 -7874.7505 7773.3154 CS-7880.7559 7775.0186 m-7879.3198 7773.936 -7877.5889 7773.2266 -7875.6982 7773.0479 CS-7884.0942 7779.4639 m-7884.5127 7780.5649 -7884.7505 7781.7534 -7884.7505 7783.001 c-7884.7505 7784.8623 -7884.231 7786.6001 -7883.3462 7788.0918 CS-7874.7505 7773.001 m-7875.0703 7773.001 -7875.3862 7773.019 -7875.6982 7773.0479 CS-7880.7559 7775.0186 m-7882.2534 7776.147 -7883.4209 7777.6826 -7884.0942 7779.4639 CS-7883.3462 7788.0918 m-7881.603 7791.0278 -7878.4102 7793.001 -7874.7505 7793.001 CSU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 62)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7885.001 7795.001 m-7885.001 7756.731 L-7846.731 7756.731 L-7846.731 7795.001 L-7885.001 7795.001 Ln0 O1 0.14 0.09 0 k-7846.731 7777.9048 m-7846.731 7769.3418 L-7885.001 7769.3418 L-7885.001 7777.9048 L-7846.731 7777.9048 Lf-7846.731 7781.0977 m-7846.731 7780.4233 L-7885.001 7780.4233 L-7885.001 7781.0977 L-7846.731 7781.0977 LfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 63)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7885.001 7795.001 m-7885.001 7756.731 L-7846.731 7756.731 L-7846.731 7795.001 L-7885.001 7795.001 Ln0 O1 0.14 0.09 0 k-7846.731 7773.8262 m-7846.731 7782.3906 L-7859.3418 7782.3906 L-7859.3418 7795.001 L-7867.9038 7795.001 L-7867.9063 7773.8262 L-7867.9038 7773.8262 L-7867.9038 7773.8257 L-7846.731 7773.8262 Lf-7846.731 7771.3081 m-7870.4238 7771.3081 L-7870.4238 7795.001 L-7871.0977 7795.001 L-7871.0986 7770.6338 L-7846.731 7770.6338 L-7846.731 7771.3081 LfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 64)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7885.001 7794.999 m-7885.001 7756.729 L-7846.731 7756.729 L-7846.731 7794.999 L-7885.001 7794.999 Ln0 O1 0.14 0.09 0 k-7846.731 7769.3394 m-7872.3906 7769.3394 L-7872.3906 7794.999 L-7863.8262 7795.001 L-7863.8262 7777.9038 L-7846.731 7777.9038 L-7846.731 7769.3394 Lf-7846.731 7780.4224 m-7861.3086 7780.4224 L-7861.3086 7795.001 L-7860.6343 7795.001 L-7860.6343 7781.0962 L-7846.731 7781.0962 L-7846.731 7780.4224 LfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 65)0 Au1 Ap0 J 0 j 1 w 4 M []0 d0 XR-7857.063 7767.4614 m-7884.603 7767.4614 L-7884.603 7795.001 L-7857.063 7795.001 L-7857.063 7767.4614 Ln0 O0 0.55 1 0.12 k-7856.8423 7780.7007 m-7885.001 7780.7007 L-7885.001 7781.8257 L-7856.8423 7781.8257 L-7856.8423 7780.7007 Lfu0 0.55 1 0.3 k-7883.9814 7768.522 m-7884.4102 7770.5254 -7883.187 7774.1519 -7880.0879 7777.251 c-7876.9878 7780.3506 -7873.3462 7781.6606 -7871.3599 7781.146 C-7871.3599 7781.146 L-7870.875 7779.1895 -7872.1519 7775.5122 -7875.2505 7772.4146 c-7878.3462 7769.3184 -7882.0127 7768.1074 -7883.9814 7768.522 Cf0 0.39 0.7 0.12 k-7883.9814 7793.9922 m-7884.4102 7791.9888 -7883.187 7788.3618 -7880.0879 7785.2622 c-7876.9878 7782.165 -7873.3462 7780.854 -7871.3599 7781.3682 C-7871.3599 7781.3682 L-7870.875 7783.3247 -7872.1519 7787.0015 -7875.2505 7790.1001 c-7878.3462 7793.1958 -7882.0127 7794.4063 -7883.9814 7793.9922 CfUu0 0.55 1 0.3 k-7870.1782 7793.9922 m-7870.6079 7791.9888 -7869.3838 7788.3618 -7866.2847 7785.2622 c-7863.186 7782.165 -7859.543 7780.854 -7857.5586 7781.3682 C-7857.5566 7781.3682 L-7857.0718 7783.3247 -7858.3506 7787.0015 -7861.4482 7790.1001 c-7864.543 7793.1958 -7868.2095 7794.4063 -7870.1782 7793.9922 Cf0 0.39 0.7 0.12 k-7870.1782 7768.522 m-7870.6079 7770.5254 -7869.3838 7774.1519 -7866.2847 7777.251 c-7863.186 7780.3506 -7859.543 7781.6606 -7857.5586 7781.146 C-7857.5566 7781.146 L-7857.0718 7779.1895 -7858.3506 7775.5122 -7861.4482 7772.4146 c-7864.543 7769.3184 -7868.2095 7768.1074 -7870.1782 7768.522 CfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 67)0 Au0 Ap0 J 0 j 1 w 4 M []0 d0 XR-7857.4614 7767.0854 m-7885.001 7767.0854 L-7885.001 7794.625 L-7857.4614 7794.625 L-7857.4614 7767.0854 Ln0 O0 0.55 1 0.12 k-7871.7598 7785.3633 m-7871.7598 7795.001 L-7870.6353 7795.001 L-7870.6353 7785.3633 L-7871.7598 7785.3633 Lf0 0.55 1 0.3 k-7875.4238 7780.877 m-7874.3105 7779.1558 -7870.8818 7777.4575 -7866.4966 7777.4575 c-7862.1162 7777.4575 -7858.6143 7779.1074 -7857.5718 7780.8745 C-7857.5718 7780.8745 L-7858.6143 7782.6006 -7862.1162 7784.2983 -7866.4966 7784.2983 c-7870.875 7784.2983 -7874.3247 7782.562 -7875.4238 7780.877 CfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 69)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7857.4614 7767.4614 m-7885.001 7767.4614 L-7885.001 7795.001 L-7857.4614 7795.001 L-7857.4614 7767.4614 Ln0 O0 0.55 1 0.3 k-7875.4238 7781.2529 m-7874.3105 7779.5322 -7870.8818 7777.8335 -7866.4966 7777.8335 c-7862.1162 7777.8335 -7858.6143 7779.4834 -7857.5718 7781.2505 C-7857.5718 7781.2505 L-7858.6143 7782.9766 -7862.1162 7784.6743 -7866.4966 7784.6743 c-7870.875 7784.6743 -7874.3247 7782.938 -7875.4238 7781.2529 CfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 8)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7883.9526 7792.313 m-7776.7959 7792.313 L-7776.7959 7778.186 L-7883.9526 7778.186 L-7883.9526 7792.313 Lnu0 O0 0 0 1 k-7882.2842 7791.623 m-7882.854 7794.001 -7882.8193 7790.0049 V-7883.0479 7786.8032 L-7883.6177 7784.4561 L-7883.4502 7782.123 L-7881.9502 7781.4561 -7865.2842 7780.123 V-7858.6177 7778.7896 -7849.6177 7778.7896 V-7784.394 7779.4766 -7779.4922 7780.8857 v-7820.3887 7778.875 -7822.9697 7779.5122 v-7783.8574 7781.1606 -7780.855 7782.4321 v-7818.7905 7780.5474 -7822.167 7782.1782 v-7787.2495 7783.9102 -7783.0215 7785.5322 v-7789.7222 7784.8833 -7791.5137 7785.0825 v-7788.3906 7785.5713 l-7793.4199 7785.5024 l-7796.3223 7785.1294 l-7788.4526 7786.2422 -7787.9038 7786.8086 v-7784.3159 7786.1313 -7798.519 7786.3857 v-7832.1182 7782.4561 -7882.2842 7791.623 Vf/BBAccumRotation (5.805971) XT0 R0 0 0 0.5 K0.025 w-7883.9502 7781.123 m-7863.667 7779.2954 -7843.9727 7778.2207 v-7801.1519 7778.5024 -7796.5742 7778.9009 v-7784.1631 7779.0322 -7776.7969 7780.0278 vS/BBAccumRotation (5.805971) XT0 0 0 1 K-7821.8374 7778.4087 m-7825.2959 7778.0278 -7851.2607 7778.2798 Y-7861.6274 7778.1606 -7883.9502 7781.123 YS/BBAccumRotation (5.805971) XT-7820.9878 7781.665 m-7790.3618 7782.5825 -7783.6606 7783.2329 vS/BBAccumRotation (5.805971) XT0 0 0 0.5 K-7829.6206 7786.2056 m-7794.3711 7787.6177 -7791.4063 7788.1406 vS/BBAccumRotation (5.805971) XTUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 83)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7884.001 7793.936 m-7670.4014 7793.936 L-7670.4014 7786.1353 L-7884.001 7786.1353 L-7884.001 7793.936 Ln0 O0 0 0 1 k-7884.001 7790.0352 m-7873.9863 7792.5278 -7867.187 7793.875 -7855.2017 7793.936 c-7842.2192 7794.001 -7777.2007 7793.936 y-7712.1826 7794.001 -7699.2007 7793.936 v-7687.2134 7793.875 -7680.415 7792.5278 -7670.4014 7790.0352 C-7680.415 7787.543 -7687.2134 7786.1958 -7699.2007 7786.1353 c-7712.1826 7786.0698 -7777.2007 7786.1353 y-7842.2192 7786.0698 -7855.2017 7786.1353 v-7867.187 7786.1958 -7873.9863 7787.543 -7884.001 7790.0352 CfU%AI8_EndBrushPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Brush Manager Order)(Adobe Brush Manager Order)( Adobe Calligraphic Brush Tool/ 6 pt Flat / Adobe Calligraphic Brush T) -(ool/ 10 pt Oval/ Adobe Calligraphic Brush Tool/ 12 pt Oval / Adobe Cal) -(ligraphic Brush Tool/ 20 pt Oval/ Adobe Calligraphic Brush Tool/ 25 pt) -( Round / Adobe Calligraphic Brush Tool/ 50 pt Flat/ Adobe Scatter Brus) -(h Tool/ Dog Tracks/ Adobe Scatter Brush Tool/ Fall Leaf/ Adobe Scatter) -( Brush Tool/ Ladybug/ Adobe Scatter Brush Tool/ Push Pin/ Adobe Scatte) -(r Brush Tool/ Strawberry/ Adobe Scatter Brush Tool/ Twinkle Star / Ado) -(be ArtOnPath Brush Tool/ Marker/ Adobe ArtOnPath Brush Tool/ Tapered S) -(troke/ Adobe ArtOnPath Brush Tool/ Arrow/ Adobe ArtOnPath Brush Tool/ ) -(Paintbrush/ Adobe ArtOnPath Brush Tool/ Type/ Adobe PatternOnPath Brus) -(h Tool/ Double Lines/ Adobe PatternOnPath Brush Tool/ Laurel/ Adobe Pa) -(tternOnPath Brush Tool/ Rope /) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(10 pt Oval)(1 1 19 15 15 130 130 2 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(12 pt Oval )(1 7 17 45 45 0 0 2 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(20 pt Oval)(1 20 20 20 100 40 80 0 2 1 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(25 pt Round )(1 10 40 100 100 0 0 2 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(50 pt Flat)(1 40 60 0 0 44 44 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(6 pt Flat )(1 4 8 10 10 90 90 2 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Scatter Brush Tool)(Dog Tracks)(1 /New Pattern 41/ 1 0 0 0 1 / 0 1 1 0 1 1 0 0 0 0 -90 -90 0 1 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Scatter Brush Tool)(Fall Leaf)(1 /New Pattern 34/ 1 0.0745 0.9 0.9019 0.18 / 0 0.602793 1 1 0.1 1 1 -) -(1 1 1 -180 180 1 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Scatter Brush Tool)(Ladybug)(1 /New Pattern 10/ 5 0.898039 0 0 / 0 1 1 0 0.803911 1.2 1 -1.55 1.55 ) -(1 -180 180 1 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Scatter Brush Tool)(Push Pin)(1 /New Pattern 36/ 1 0.025 0.1 0.475 0 / 0 1 1 0 0.401676 1 1 -1.06145) -( 1.06 1 -180 180 1 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Scatter Brush Tool)(Strawberry)(1 /New Pattern 37/ 1 0 0 0 1 / 0 0.803911 1 1 0.803911 1 1 -0.5 0.5 1 ) -(-75 75.419 1 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Scatter Brush Tool)(Twinkle Star )(1 /New Pattern 2/ 0 1 / 1 0.5 1 1 0.25 1 1 -0.5 0.5 1 0 0 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Arrow)(1 / New Pattern 45/ / / / / 5 0.898039 0 0 /  2 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Marker)(1 / New Pattern 8/ / / / / 0 0 /  1 1 1 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Paintbrush)(1 / New Pattern 5/ / / / / 1 0.5 0.85 1 0.45 /  0 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Tapered Stroke)(1 / New Pattern 83/ / / / / 1 0 0 0 1 /  1 1 1 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Type)(1 / New Pattern 50/ / / / / 1 0.952941 0.94902 0.196078 0.0745098 /  1) -( 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe PatternOnPath Brush Tool)(Double Lines)(1 / New Pattern 62/ New Pattern 63/ New Pattern 64/ / / 1 1 0.14 0.09 ) -(0 /  1 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe PatternOnPath Brush Tool)(Laurel)(1 / New Pattern 65/ New Pattern 42/ New Pattern 67/ / New Pattern 69/ ) -(1 0 0.55 1 0.3 /  1 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe PatternOnPath Brush Tool)(Rope )(1 / New Pattern 1/ / / New Pattern 3/ New Pattern 6/ 5 0 0 0 /  1 0 1 ) -(0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb1 1 1 1 ([Registration]) 0 Xs([Registration]) Pc0 0 0 0 k(C=0 M=0 Y=0 K=0) Pc0 0 0 1 k(C=0 M=0 Y=0 K=100) Pc0 0.1 1 0 k(C=0 M=10 Y=100 K=0) Pc0 0.5 0 0 k(C=0 M=50 Y=0 K=0) Pc0 0.5 1 0 k(C=0 M=50 Y=100 K=0) Pc1 0.55 1 0 k(C=100 M=55 Y=100 K=0) Pc1 0.9 0.1 0 k(C=100 M=90 Y=10 K=0) Pc0.15 1 1 0 k(C=15 M=100 Y=100 K=0) Pc0.45 0.9 0 0 k(C=45 M=90 Y=0 K=0) Pc0.5 0.4 0.3 0 k(C=50 M=40 Y=30 K=0) Pc0.5 0.85 1 0 k(C=50 M=85 Y=100 K=0) Pc1 0 1 0 k(C=100Y=100) Pc0.75 0.9 0 0 k(C=75 M=90 Y=0 K=0) Pc0.8 0.05 0 0 k(C=80 M=5 Y=0 K=0) PcBb2 (Black, White) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Black, White) PcBb2 (Chrome) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Chrome) PcBb2 (Rainbow) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Rainbow) PcBb0 0 0 0 Bh2 (Yellow & Orange Radial) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Yellow & Orange Radial) Pc(Brick) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Brick) Pc(Confetti) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Confetti) Pc(Leaves - Fall ) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Leaves - Fall ) Pc(Stripes) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Stripes) Pc1 0 1 0 (100c100y) 0 0 Xk(100c100y) PcPB%AI5_EndPalette%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (Art Brush Tool)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (Art Brush Tool)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (Calligraphic Brush Tool)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (Symbolism)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (Pathfinder Suite)%AI5_End_NonPrinting--%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(Layer 1) Ln0 A0 O0 g2 J 0 j 1 w 2 M []0 d0 XR407.2715 -364.9756 m407.2422 -363.6514 406.2754 -362.4043 404.9336 -361.9268 C403.0488 -361.2881 400.5957 -361.3374 399.0176 -362.6553 C397.1875 -364.168 396.8672 -366.3389 396.8945 -368.6128 c396.8711 -384.5708 L388.9609 -384.6104 L388.9668 -354.8477 L397.0977 -354.8364 L397.1113 -358.165 L399.7793 -354.8193 403.7012 -353.8496 407.9844 -354.6885 C409.8691 -355.4268 411.957 -356.0703 413.3203 -357.8989 C413.9492 -358.8618 414.9297 -359.8823 414.6543 -361.0771 C411.0352 -366.8535 411.4492 -375.9141 415.5859 -381.3506 C415.6211 -384.564 L407.2109 -384.6182 L407.2715 -364.9756 Lf377.6797 -381.5889 m375.375 -384.1924 371.9824 -386.0537 368.4355 -385.7803 C364.6387 -385.6523 360.6816 -383.5205 359.459 -379.7441 C357.7422 -372.0264 358.8633 -354.835 Y366.9141 -354.8599 L366.9121 -374.0957 L367.2734 -375.9541 368.1465 -377.9229 370.1367 -378.5137 C371.8301 -378.7988 373.7324 -378.7383 375.1035 -377.7666 C377.7949 -375.7217 377.416 -372.3125 377.6797 -369.1675 C377.6777 -354.8301 L385.6797 -354.8662 L385.6504 -384.582 L377.7051 -384.5693 L377.6797 -381.5889 Lf272.2568 -361.2451 m269.0117 -360.9775 265.9551 -361.9658 264.3442 -364.9336 C262.4297 -369.7764 263.7422 -374.2764 263.3037 -384.4858 C255.041 -384.4678 L255.0488 -354.8896 L263.2754 -354.9082 L263.2744 -358.5605 L264.8916 -355.3428 268.4814 -353.416 272.2129 -354.3936 C272.2568 -361.2451 Lf*u442.7441 -361.8555 m444.4277 -365.1406 445.2988 -368.9092 445.2715 -372.7095 C423.7441 -372.7324 L423.6172 -373.7764 423.8672 -374.5889 424.1094 -375.5244 C424.916 -377.6416 427.0762 -379.5361 429.2715 -379.8311 C431.918 -380.0859 434.7266 -379.6436 436.1777 -377.123 C436.3672 -376.5264 436.3047 -376.5889 436.3672 -376.2139 C444.8672 -376.2139 L444.6504 -379.3599 441.8672 -382.541 439.2852 -384.1387 C434.9785 -386.9004 427.9688 -387.2568 423.418 -384.7627 C417.9258 -381.8984 415.4434 -376.1963 415.4648 -370.2954 C415.582 -364.5967 417.7402 -359.3896 422.8047 -356.2935 C427.1055 -353.8813 433.6035 -354.0156 437.8008 -356.6025 C439.873 -357.9453 441.5859 -359.7808 442.7441 -361.8555 Cf1 D436.543 -366.6787 m436.5117 -365.7778 436.127 -365.0195 435.7422 -364.2617 C434.2051 -361.1797 430.0254 -360.1426 427.1426 -361.7842 C425.3203 -362.8467 424.0313 -364.7207 424.041 -366.6714 C436.543 -366.6787 Lf*U*u0 D243.9521 -381.3174 m241.1147 -385.5596 235.6626 -385.5977 231.1343 -384.5039 C228.3452 -383.9463 225.4463 -381.4365 224.5537 -378.6172 C223.9077 -376.0034 224.2725 -372.8604 226.0142 -370.8457 C230.4663 -365.9365 237.4453 -367.0303 243.0913 -364.8457 C243.8555 -364.1621 244.127 -363.1172 243.8477 -362.1108 C242.7402 -360.0381 240.5 -359.541 238.248 -359.5957 C236.1958 -359.7031 233.8809 -360.4053 233.1855 -362.5918 C233.0547 -363.0264 233.0547 -363.3389 233.0547 -363.6514 C226.0645 -363.6528 L226.3252 -360.707 227.3789 -358.0215 229.8193 -356.0708 C235.3306 -353.1338 243.7822 -353.1582 248.9023 -357.064 C250.6582 -359.251 L251.9297 -362.5264 251.6172 -370.3389 251.6895 -384.4775 C243.9023 -384.4639 L243.9521 -381.3174 Lf1 D232.96 -373.5391 m232.3428 -374.377 231.9692 -375.5195 232.2969 -376.6265 C232.4746 -377.6807 233.6094 -378.4541 234.502 -378.8223 C237.334 -379.731 240.4463 -379.1445 242.5869 -377.1885 C244.1299 -375.1191 244.3906 -372.1743 243.9443 -369.5645 C240.4092 -371.2422 236.1611 -371.105 232.96 -373.5391 Cf*U0 D0 J 4 M306.9512 -353.0361 m306.9453 -345.749 L273.4902 -345.7676 L273.501 -353.0176 L285.6797 -353 L285.708 -384.5781 L294.4023 -384.5728 L294.4395 -353.0508 L306.9512 -353.0361 Lf297.6465 -384.5732 m305.6592 -384.5664 L306.1484 -377.519 304.4927 -370.2607 307.415 -364.3701 C309.2158 -361.9063 311.9385 -360.8125 315.0322 -361.1763 C315.0742 -354.3252 L312.4287 -354.0205 L309.7754 -354.166 307.2354 -356.0645 306.0859 -358.4414 C306.0898 -354.75 L297.6138 -354.7764 L297.6465 -384.5732 Lf318.0576 -354.8018 m318.0566 -384.6055 l326.1172 -384.5894 l326.1172 -354.8037 l318.0576 -354.8018 lf326.1172 -345.7764 m326.1172 -352.998 L318.0576 -352.998 L318.0576 -345.7764 L326.1172 -345.7764 Lf197.1172 -353.0264 m206.377 -353.0381 L206.3047 -351.8389 206.0547 -350.9639 205.5889 -350.021 C204.3818 -347.896 202.2227 -345.9009 200.0405 -345.0059 C193.2485 -342.1152 183.8892 -342.4727 178.4712 -348.1621 C176.2109 -351.0664 175.3267 -355.1494 176.3491 -358.9209 C178.3682 -365.314 185.2041 -366.0547 190.5762 -367.4658 c193.4102 -368.2744 196.5566 -368.4888 198.8125 -370.6357 C199.6943 -371.5547 200.02 -372.7114 199.793 -374.0566 C199.7637 -375.4561 198.542 -376.4814 197.4741 -377.3599 C194.043 -378.8394 189.2788 -379.4912 185.9219 -377.3721 C184.0938 -376.2842 183.334 -374.1396 182.9209 -372.3301 C175.1226 -372.3486 L174.8975 -373.5444 175.3779 -374.5044 175.5068 -375.5576 C177.1953 -380.9932 182.8198 -384.7095 188.3135 -385.0728 C195.3057 -385.5166 202.8164 -384.7183 206.7969 -378.3989 C206.7949 -366.749 L205.3047 -363.8179 202.3267 -362.7061 199.6978 -361.6523 C194.9351 -359.8037 189.0728 -360.333 184.8896 -357.0464 C184.457 -356.1875 183.8228 -355.4238 184.1465 -354.2803 C184.2744 -352.9326 185.2466 -351.8525 186.3628 -351.0752 C189.3433 -349.6367 193.9297 -349.4014 196.5625 -351.1855 C196.9922 -351.8389 197.1172 -353.0264 Yf223.5273 -360.2412 m223.5547 -354.9014 L218.1172 -354.9014 L218.1055 -345.4766 L210.333 -345.4678 L210.3047 -354.9014 L206.3418 -354.8804 L206.376 -360.1875 L210.3174 -360.2178 L210.3027 -368.1211 l210.4116 -372.5244 209.8047 -377.7139 211.2002 -381.0928 C213.6123 -385.3936 219.0386 -384.1548 223.3359 -384.3433 C223.3267 -383.0439 L222.1035 -381.7183 221.0728 -380.0957 220.71 -378.2881 C219.6602 -378.2666 218.1172 -377.5889 218.1348 -376.6865 C218.1084 -360.2378 L223.5273 -360.2412 Lf*u337.6797 -384.5889 m329.4531 -384.5923 L329.4102 -345.7764 L337.6973 -345.8037 L337.6992 -358.1416 L339.1855 -356.3721 341.4688 -354.7188 343.8789 -354.3184 C348.4434 -353.6621 352.4668 -354.9951 355.4473 -358.4072 C355.6934 -365.8638 354.6797 -373.7949 356.1875 -380.7275 C353.3594 -384.5195 349.0156 -386.5811 344.1836 -385.6313 C341.793 -385.2319 339.4414 -383.9253 337.6797 -382.0889 C337.6797 -384.5889 Lf1 D346.3926 -360.9717 m344.1074 -360.2744 341.793 -360.877 340.1113 -362.3926 C336.8477 -365.4756 337.3379 -370.7871 338.4082 -374.7104 C339.4102 -377.0313 341.5195 -379.0249 344.2227 -378.9307 C346.0723 -379.0186 347.5879 -378.2002 348.9141 -376.9766 C351.584 -373.5811 351.6484 -367.9814 349.9277 -364.1445 C349.2051 -362.7798 347.7813 -361.5005 346.3926 -360.9717 Cf*U*u0 D203.1299 -405.6299 m205.23 -398.0791 L208.605 -399.0049 L204.4302 -409.9541 L201.4551 -409.9541 L199.7803 -404.1543 L198.105 -409.9541 L195.1299 -409.9541 L190.9551 -399.0049 L194.3301 -398.0791 L196.4297 -405.6299 L198.1797 -398.7041 L201.3799 -398.7041 L203.1299 -405.6299 lf*U*u221.8799 -405.6299 m223.98 -398.0791 L227.355 -399.0049 L223.1802 -409.9541 L220.2051 -409.9541 L218.5303 -404.1543 L216.855 -409.9541 L213.8799 -409.9541 L209.7051 -399.0049 L213.0801 -398.0791 L215.1797 -405.6299 L216.9297 -398.7041 L220.1299 -398.7041 L221.8799 -405.6299 lf*U*u240.6299 -405.6299 m242.73 -398.0791 L246.105 -399.0049 L241.9302 -409.9541 L238.9551 -409.9541 L237.2803 -404.1543 L235.605 -409.9541 L232.6299 -409.9541 L228.4551 -399.0049 L231.8301 -398.0791 L233.9297 -405.6299 L235.6797 -398.7041 L238.8799 -398.7041 L240.6299 -405.6299 lf*U*u248.6299 -410.4297 m247.4053 -410.4297 246.4053 -409.4297 246.4053 -408.2041 c246.4053 -406.9795 247.4053 -405.9795 248.6299 -405.9795 c249.855 -405.9795 250.855 -406.9795 250.855 -408.2041 c250.855 -409.4297 249.855 -410.4297 248.6299 -410.4297 cf*U*u258.5049 -400.9541 m257.5801 -400.9541 257.0049 -401.2549 257.0049 -401.7549 c257.0049 -402.2041 257.6299 -402.4043 258.1299 -402.5791 c259.1299 -402.9541 L260.5801 -403.5049 262.3799 -404.0791 262.3799 -406.5791 c262.3799 -408.8291 260.1548 -410.4541 257.8799 -410.4541 c256.0049 -410.4541 254.7549 -409.9297 253.9297 -409.2295 c253.9297 -405.9541 L256.8047 -405.9541 L256.8047 -407.3047 L257.0801 -407.4043 257.3545 -407.4541 257.6299 -407.4541 c258.5049 -407.4541 259.1299 -407.0791 259.1299 -406.5049 c259.1299 -405.9541 258.5049 -405.7793 258.0049 -405.5791 c257.0049 -405.2041 L255.8799 -404.7793 253.7549 -404.0791 253.7549 -401.5791 c253.7549 -399.4541 256.0049 -397.9541 258.2549 -397.9541 c260.1299 -397.9541 261.2549 -398.5791 262.3047 -399.5791 c262.3047 -402.2295 L259.4297 -402.2295 L259.4297 -401.1299 l259.1045 -401.0049 258.7798 -400.9541 258.5049 -400.9541 cf*U*u271.4048 -408.9541 m268.3545 -410.5049 L266.7051 -408.9795 266.0049 -407.4297 266.0049 -405.1543 c266.0049 -401.7041 L263.7549 -401.7041 L263.7549 -398.4541 L266.0049 -398.4541 L266.0049 -394.9541 L269.5049 -394.9541 L269.5049 -398.4541 L271.8799 -398.4541 L271.8799 -401.7041 L269.5049 -401.7041 L269.5049 -405.1543 l269.5049 -406.8047 270.1045 -407.9541 271.4048 -408.9541 cf*U*u278.8799 -404.9043 m278.8799 -405.4287 278.9546 -406.1797 279.0796 -406.8799 c278.4048 -407.5547 277.4546 -407.5547 v276.9297 -407.5547 276.1797 -407.1543 276.1548 -406.4541 c276.1299 -405.6797 276.4795 -404.9043 277.8799 -404.9043 c277.9795 -404.9043 278.8799 -404.9043 yf1 D282.3799 -405.0049 m282.3799 -402.5791 l282.3799 -399.9287 280.5049 -397.9541 277.3799 -397.9541 c275.3799 -397.9541 274.0049 -399.1543 Y275.8296 -401.5293 l276.4048 -401.1045 277.3799 -401.1045 v278.3799 -401.1045 278.8799 -401.7793 278.8799 -402.5791 c278.4297 -402.5791 277.8799 -402.5791 v274.6299 -402.5791 272.6045 -403.9795 272.6045 -406.4541 c272.6045 -408.7295 274.8047 -410.4541 277.1299 -410.4541 c279.0796 -410.4541 280.1548 -409.1797 y280.3545 -409.4795 281.2295 -410.3545 Y284.2798 -408.8047 l282.9795 -407.8047 282.3799 -406.6543 282.3799 -405.0049 cf*U*u0 D292.2295 -406.9541 m292.2295 -409.9541 L285.7295 -409.9541 L285.7295 -406.9541 L287.2295 -406.9541 L287.2295 -403.4043 L287.2295 -401.7549 286.6299 -400.6045 285.3296 -399.6045 c288.3799 -398.0537 L288.9546 -398.5049 289.6543 -399.5293 y291.5796 -397.9541 293.2295 -397.9541 v294.1045 -401.3291 L292.4795 -401.3291 290.7295 -403.2793 y290.7295 -406.9541 L292.2295 -406.9541 lf*U*u303.1045 -408.9541 m300.0547 -410.5049 L298.4043 -408.9795 297.7046 -407.4297 297.7046 -405.1543 c297.7046 -401.7041 L295.4546 -401.7041 L295.4546 -398.4541 L297.7046 -398.4541 L297.7046 -394.9541 L301.2046 -394.9541 L301.2046 -398.4541 L303.5796 -398.4541 L303.5796 -401.7041 L301.2046 -401.7041 L301.2046 -405.1543 l301.2046 -406.8047 301.8047 -407.9541 303.1045 -408.9541 cf*U*u311.3789 -406.9541 m311.3789 -409.9541 L304.8794 -409.9541 L304.8794 -406.9541 L306.3789 -406.9541 L306.3789 -403.4043 L306.3789 -401.7549 305.7793 -400.6045 304.4795 -399.6045 c307.5293 -398.0537 L308.1045 -398.5049 308.8047 -399.5293 y310.7295 -397.9541 312.3789 -397.9541 v313.2539 -401.3291 L311.6289 -401.3291 309.8789 -403.2793 y309.8789 -406.9541 L311.3789 -406.9541 lf*U*u318.1289 -396.8291 m317.0039 -396.8291 316.0791 -395.9043 316.0791 -394.7793 c316.0791 -393.6543 317.0039 -392.7295 318.1289 -392.7295 c319.2539 -392.7295 320.1797 -393.6543 320.1797 -394.7793 c320.1797 -395.9043 319.2539 -396.8291 318.1289 -396.8291 cf314.8545 -401.4541 m314.8545 -398.4541 L319.9043 -398.4541 L319.9043 -406.9541 L321.4043 -406.9541 L321.4043 -409.9541 L314.8545 -409.9541 L314.8545 -406.9541 L316.3545 -406.9541 L316.3545 -401.4541 L314.8545 -401.4541 lf*U*u327.8535 -404.2041 m327.8535 -402.7295 328.6289 -401.2041 330.1035 -401.2041 c331.5547 -401.2041 332.3281 -402.7549 332.3281 -404.2041 c332.3281 -405.6543 331.5547 -407.2041 330.1035 -407.2041 c328.6289 -407.2041 327.8535 -405.6797 327.8535 -404.2041 cf1 D327.8535 -398.9287 m327.8535 -392.7041 L322.8535 -392.7041 L322.8535 -395.7041 L324.3535 -395.7041 L324.3535 -405.0049 l324.3535 -406.6543 323.7539 -407.8047 322.4541 -408.8047 C325.5039 -410.3545 l325.8789 -410.0791 326.6035 -409.1299 y327.9043 -410.4541 330.1035 -410.4541 v333.4297 -410.4541 335.8789 -407.4297 335.8789 -404.2041 c335.8789 -400.9795 333.8535 -397.9541 330.1035 -397.9541 c328.7031 -397.9541 327.8535 -398.9287 yf*U*u0 D342.8535 -407.1045 m344.2539 -407.1045 344.9043 -405.1299 y344.9043 -401.4541 L343.4043 -401.4541 L343.4043 -398.4541 L348.4043 -398.4541 L348.4043 -405.0049 L348.4043 -406.6543 349.0039 -407.8047 350.3027 -408.8047 c347.2539 -410.3545 L346.7285 -409.9795 345.9785 -408.8799 y344.3281 -410.5049 342.4531 -410.5049 v340.3535 -410.5049 338.4043 -409.0547 338.4043 -406.9297 c338.4043 -401.4541 L336.9043 -401.4541 L336.9043 -398.4541 L341.9043 -398.4541 L341.9043 -405.1787 l341.9043 -406.5049 342.1777 -407.1045 342.8535 -407.1045 cf*U*u353.0781 -403.4043 m353.0781 -401.7549 352.4785 -400.6045 351.1777 -399.6045 c354.2285 -398.0537 L354.6777 -398.3799 355.5039 -399.5293 y357.2773 -397.9043 359.1523 -397.9043 v361.2773 -397.9043 363.3281 -399.3545 363.3281 -401.4795 c363.3281 -406.9541 L364.8281 -406.9541 L364.8281 -409.9541 L359.8281 -409.9541 L359.8281 -403.2295 L359.8281 -401.5293 359.5039 -401.3037 358.7539 -401.3037 c357.3535 -401.3037 356.5781 -403.2793 y356.5781 -406.9541 L358.0781 -406.9541 L358.0781 -409.9541 L351.5781 -409.9541 L351.5781 -406.9541 L353.0781 -406.9541 L353.0781 -403.4043 lf*U*u369.5781 -402.9541 m369.5781 -402.6543 370.0273 -401.1543 371.4023 -401.1543 c372.5527 -401.1543 372.8027 -402.4541 372.8027 -402.9541 c369.5781 -402.9541 Lf1 D371.4023 -407.2549 m370.0039 -407.2549 369.4785 -405.6299 369.4785 -405.1787 C376.3535 -405.1787 l376.8281 -403.7793 376.3027 -397.9541 371.4023 -397.9541 c368.1523 -397.9541 365.8789 -401.0293 365.8789 -404.2041 c365.8789 -407.7295 368.2285 -410.4541 371.4023 -410.4541 c374.4785 -410.4541 376.2285 -408.2041 Y374.0039 -406.1045 l373.3281 -407.2549 371.4023 -407.2549 vf*U*u0 D380.5527 -410.4297 m379.3281 -410.4297 378.3281 -409.4297 378.3281 -408.2041 c378.3281 -406.9795 379.3281 -405.9795 380.5527 -405.9795 c381.7773 -405.9795 382.7773 -406.9795 382.7773 -408.2041 c382.7773 -409.4297 381.7773 -410.4297 380.5527 -410.4297 cf*U*u394.4531 -403.2295 m391.4531 -403.2295 L391.4531 -401.6045 L391.2285 -401.4287 390.502 -401.1543 389.877 -401.2041 c388.3281 -401.3291 387.7773 -402.7793 387.7773 -404.2041 c387.7773 -405.6299 388.4531 -407.2041 389.877 -407.2041 c391.1777 -407.2041 392.0527 -406.7793 392.502 -406.0293 c394.7031 -408.2041 L393.4531 -409.8291 391.9531 -410.4795 389.877 -410.4541 c386.6035 -410.4043 384.2285 -407.4043 384.2285 -404.2041 c384.2285 -401.0049 386.4785 -398.0537 389.877 -397.9541 c392.1035 -397.8799 393.4785 -398.8037 394.4531 -399.8799 C394.4531 -403.2295 lf*U*u399.4277 -404.2041 m399.4277 -402.7549 400.2031 -401.2041 401.6523 -401.2041 c403.1035 -401.2041 403.877 -402.7549 403.877 -404.2041 c403.877 -405.6543 403.1035 -407.2041 401.6523 -407.2041 c400.2031 -407.2041 399.4277 -405.6543 399.4277 -404.2041 cf1 D401.6523 -397.9541 m398.3281 -397.9541 395.877 -400.9795 395.877 -404.2041 c395.877 -407.4297 398.3281 -410.4541 401.6523 -410.4541 c404.9785 -410.4541 407.4277 -407.4297 407.4277 -404.2041 c407.4277 -400.9795 404.9785 -397.9541 401.6523 -397.9541 cf*U*u0 D415.5273 -401.3037 m414.3027 -401.3037 413.6016 -402.9541 y413.6016 -406.9541 L415.1016 -406.9541 L415.1016 -409.9541 L408.6016 -409.9541 L408.6016 -406.9541 L410.1016 -406.9541 L410.1016 -403.4043 L410.1016 -401.7549 409.502 -400.6045 408.2031 -399.6045 c411.252 -398.0537 L411.7266 -398.4043 412.5273 -399.5293 y414.1777 -397.9043 415.7773 -397.9043 v417.752 -397.9043 418.8281 -399.0791 419.0273 -399.3037 c420.5527 -397.9043 422.0273 -397.9043 v424.127 -397.9043 426.1016 -399.3545 426.1016 -401.4795 c426.1016 -406.9541 L427.6016 -406.9541 L427.6016 -409.9541 L422.6016 -409.9541 L422.6016 -403.2295 L422.6016 -401.4541 422.3516 -401.3037 421.7773 -401.3037 c420.5527 -401.3037 419.8516 -402.9541 y419.8516 -406.9541 L421.3516 -406.9541 L421.3516 -409.9541 L416.3516 -409.9541 L416.3516 -403.2295 l416.3516 -401.4541 416.1016 -401.3037 415.5273 -401.3037 cf*ULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get execAdobe_shading_AI8 /terminate get execAdobe_ColorImage_AI6 /terminate get execAdobe_pattern_AI5 /terminate get execAGM_Gradient /terminate get execAdobe_cshow /terminate get execAdobe_level2_AI5 /terminate get exec%%EOF